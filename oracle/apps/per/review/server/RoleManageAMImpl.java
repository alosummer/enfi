package cux.oracle.apps.per.review.server;


import cux.oracle.apps.per.poplist.server.EmpApproveTypeVOImpl;

import oracle.apps.fnd.framework.OAApplicationModule;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.Transaction;
import oracle.jbo.domain.Number;

// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RoleManageAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public RoleManageAMImpl() {
    }

    /**
     * Rollback database transactions
     */
    public void rollback() {
        Transaction txn = getTransaction();
        if (txn.isDirty())
            txn.rollback();
    }

    public void createReviewRole() {
        OAViewObject vo = (OAViewObject)getRoleManageCreateVO1();
        //vo.setMaxFetchSize(0);
        if (!vo.isPreparedForExecution()) {
            vo.executeQuery();
        }


        //vo.executeQuery();  
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        //vo.setMaxFetchSize(100);
    }


    /**
     * Create a review role

    public void createReviewRole(String roleId, String orgId, String groupId, String roleCode){
        OAViewObject vo = (OAViewObject)getRoleManageVO1();
        vo.executeQuery();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        row.setAttribute("RoleId", roleId);
        row.setAttribute("OrgId", orgId);
        row.setAttribute("GroupId", groupId);
        row.setAttribute("RoleCode", roleCode);
    }
     */

    /**
     * Query review groups
     */
    public void initQuery(String grpId, String orgId) {
        OAViewObject vo = null;
        vo = (OAViewObject)getRoleManageVO1();
        vo.setWhereClauseParams(null); // Always reset

        if (grpId != "" && orgId != "" && grpId != null && orgId != null) {
            vo.setWhereClause("GROUP_ID = :1 and ORG_ID = :2 ");
            vo.setWhereClauseParam(0, grpId);
            vo.setWhereClauseParam(1, orgId);

        } else if (grpId != "" && orgId == "" && grpId != null && 
                   orgId == null) {
            vo.setWhereClause("GROUP_ID = :1");
            vo.setWhereClauseParam(0, grpId);
        } else if (grpId == "" && orgId != "" && grpId == null && 
                   orgId != null) {
            vo.setWhereClause("ORG_ID = :1");
            vo.setWhereClauseParam(0, orgId);
        }
        vo.executeQuery();

    } // end initQuery()

    public void init() {
        OAViewObject vo = null;
        vo = (OAViewObject)getRoleManageCreateVO1();
        vo.clearCache();
    }

    /**
     * delete review roles
     */
    public void deleteReviewRole(String roleId) {
        OAViewObject vo = null;
        vo = (OAViewObject)getRoleManageCreateVO1();
        vo.executeQuery();
        Object obj[] = new Object[1];
        obj[0] = roleId;
        Key key = new Key(obj);
        Row row = vo.getRow(key);
        if (row != null) {
            row.remove();
            getOADBTransaction().commit();
        }
    }

    /**
     * init review roles for update
     */
    public void initReviewRoleforUpdate(String roleId) {
        OAViewObject vo = null;
        vo = (OAViewObject)getRoleManageCreateVO1();
        vo.setWhereClauseParams(null); // Always reset

        if (roleId != null) {
            vo.setWhereClause("ROLE_ID = :1");
            vo.setWhereClauseParam(0, roleId);
        }
        vo.executeQuery();
    }
    /**
     * update review roles

    public void updateReviewRole(String roleId){
      OAViewObject vo = null;
      vo = (OAViewObject)getRoleManageCreateVO1();
      vo.executeQuery();
      Object obj[] = new Object[1];
      obj[0] = roleId;
      Key key = new Key(obj);
      Row row = vo.getRow(key);
      if(row != null){
          row.setAttribute("OrgId", orgId);
          row.setAttribute("GroupId", groupId);
          row.setAttribute("RoleCode", roleCode);

          row.remove();
          getOADBTransaction().commit();
      }
    }
     */

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) { /* package name */
        /* Configuration Name */launchTester("cux.oracle.apps.per.review.server", 
                                             "RoleManageAMLocal");
    }


    /**Container's getter for RoleManageCreateVO1
     */
    public RoleManageCreateVOImpl getRoleManageCreateVO1() {
        return (RoleManageCreateVOImpl)findViewObject("RoleManageCreateVO1");
    }

    /**Container's getter for EmpApproveTypeVO1
     */
    public EmpApproveTypeVOImpl getEmpApproveTypeVO1() {
        return (EmpApproveTypeVOImpl)findViewObject("EmpApproveTypeVO1");
    }

    /**Container's getter for RoleManageVO1
     */
    public RoleManageVOImpl getRoleManageVO1() {
        return (RoleManageVOImpl)findViewObject("RoleManageVO1");
    }
}
