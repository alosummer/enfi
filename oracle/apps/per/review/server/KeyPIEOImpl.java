package cux.oracle.apps.per.review.server;

import com.sun.java.util.collections.Iterator;

import oracle.apps.fnd.framework.OAApplicationModule;
import oracle.apps.fnd.framework.OAAttrValException;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class KeyPIEOImpl extends OAEntityImpl {
    public static final int KPIID = 0;
    public static final int KPICLASS = 1;
    public static final int KPINAME = 2;
    public static final int KPIDESC = 3;
    public static final int KPIDATASOURCE = 4;
    public static final int KPIDATADIMENSION = 5;
    public static final int STARTDATE = 6;
    public static final int ENDDATE = 7;
    public static final int ATTRIBUTE1 = 8;
    public static final int ATTRIBUTE2 = 9;
    public static final int ATTRIBUTE3 = 10;
    public static final int ATTRIBUTE4 = 11;
    public static final int ATTRIBUTE5 = 12;
    public static final int LASTUPDATEDATE = 13;
    public static final int LASTUPDATEDBY = 14;
    public static final int LASTUPDATELOGIN = 15;
    public static final int CREATEDBY = 16;
    public static final int CREATIONDATE = 17;
    public static final int KPIAREA = 18;
    public static final int KPISCORINGMETHOD = 19;
    public static final int CALTEXT = 20;
    public static final int CALTYPE = 21;
    public static final int REPORTTEXT = 22;
    public static final int REPORTTYPE = 23;
    private static KeyPIEODefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public KeyPIEOImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (KeyPIEODefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.per.review.server.KeyPIEO");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**Gets the attribute value for KpiId, using the alias name KpiId
     */
    public Number getKpiId() {
        return (Number)getAttributeInternal(KPIID);
    }

    /**Sets <code>value</code> as the attribute value for KpiId
     */
    public void setKpiId(Number value) {
        setAttributeInternal(KPIID, value);
    }

    /**Gets the attribute value for KpiClass, using the alias name KpiClass
     */
    public String getKpiClass() {
        return (String)getAttributeInternal(KPICLASS);
    }

    /**Sets <code>value</code> as the attribute value for KpiClass
     */
    public void setKpiClass(String value) {
        setAttributeInternal(KPICLASS, value);
    }

    /**Gets the attribute value for KpiName, using the alias name KpiName
     */
    public String getKpiName() {
        return (String)getAttributeInternal(KPINAME);
    }

    /**Sets <code>value</code> as the attribute value for KpiName
     */
    public void setKpiName(String value) {
        if ((value != null) || (!("".equals(value.trim())))) {
            Iterator iter = 
                getDefinitionObject().getAllEntityInstancesIterator(getDBTransaction());
            Number currentId = getKpiId();
            String attribute5 = getAttribute5();
            while (iter.hasNext()) {
                KeyPIEOImpl cachedKPI = (KeyPIEOImpl)iter.next();
                String cachedName = cachedKPI.getKpiName();
                Number cachedId = cachedKPI.getKpiId();
                // We found a match for the name we're trying to set, so throw an
                // exception. Note that we need to exclude this EO from our test.

                if (cachedName != null && value.equalsIgnoreCase(cachedName) && 
                    cachedId.compareTo(currentId) != 0 && 
                    ((attribute5 == null && 
                      cachedKPI.getAttribute5() == null) || 
                     (attribute5 != null && 
                      attribute5.equalsIgnoreCase(cachedKPI.getAttribute5())))) {
                    throw // EO name
                        // EO PK
                        // Attribute Name
                        // Attribute value
                        // Message product short name
                        new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                               getEntityDef().getFullName(), 
                                               getPrimaryKey(), "KpiName", 
                                               value, "CUX", 
                                               "CUX_PER_KPI_DUP_NAME"); // Message name
                }
            }

            // Now we want to check the database for any occurrences of the KPI name. 
            OADBTransaction transaction = getOADBTransaction();
            OAApplicationModule vam;
            // Look to see if the VAM has already been created in this transaction. If not, create it.
            vam = 
(OAApplicationModule)transaction.findApplicationModule("KeyPIAM");
            if (vam == null) {
                vam = 
(OAApplicationModule)transaction.createApplicationModule("KeyPIAM", 
                                                         "cux.oracle.apps.per.review.server.KeyPIAM");
            }

            // Now, we use a lightweight "validation" view object to see if a KPI exists
            // with the given name.
            KeyPIVOImpl valNameVo = 
                (KeyPIVOImpl)vam.findViewObject("KeyPIVO1");
            //Modify by Wei Yi at 2015/09/29
            valNameVo.initQueryByNameAndOrg(value, attribute5);
            //valNameVo.initQuery(value);
            //end
            if (valNameVo.hasNext()) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), "KpiName", value, 
                                           "CUX", 
                                           "CUX_PER_KPI_DUP_NAME"); // Message name
            }
        }

        //finally set attribute value
        setAttributeInternal(KPINAME, value);
    }

    /**Gets the attribute value for KpiDesc, using the alias name KpiDesc
     */
    public String getKpiDesc() {
        return (String)getAttributeInternal(KPIDESC);
    }

    /**Sets <code>value</code> as the attribute value for KpiDesc
     */
    public void setKpiDesc(String value) {
        setAttributeInternal(KPIDESC, value);
    }

    /**Gets the attribute value for KpiDataSource, using the alias name KpiDataSource
     */
    public String getKpiDataSource() {
        return (String)getAttributeInternal(KPIDATASOURCE);
    }

    /**Sets <code>value</code> as the attribute value for KpiDataSource
     */
    public void setKpiDataSource(String value) {
        setAttributeInternal(KPIDATASOURCE, value);
    }

    /**Gets the attribute value for KpiDataDimension, using the alias name KpiDataDimension
     */
    public String getKpiDataDimension() {
        return (String)getAttributeInternal(KPIDATADIMENSION);
    }

    /**Sets <code>value</code> as the attribute value for KpiDataDimension
     */
    public void setKpiDataDimension(String value) {
        setAttributeInternal(KPIDATADIMENSION, value);
    }

    /**Gets the attribute value for StartDate, using the alias name StartDate
     */
    public Date getStartDate() {
        return (Date)getAttributeInternal(STARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for StartDate
     */
    public void setStartDate(Date value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**Gets the attribute value for EndDate, using the alias name EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for EndDate
     */
    public void setEndDate(Date value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case KPIID:
            return getKpiId();
        case KPICLASS:
            return getKpiClass();
        case KPINAME:
            return getKpiName();
        case KPIDESC:
            return getKpiDesc();
        case KPIDATASOURCE:
            return getKpiDataSource();
        case KPIDATADIMENSION:
            return getKpiDataDimension();
        case STARTDATE:
            return getStartDate();
        case ENDDATE:
            return getEndDate();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case CREATEDBY:
            return getCreatedBy();
        case CREATIONDATE:
            return getCreationDate();
        case KPIAREA:
            return getKpiArea();
        case KPISCORINGMETHOD:
            return getKpiScoringMethod();
        case CALTEXT:
            return getCalText();
        case CALTYPE:
            return getCalType();
        case REPORTTEXT:
            return getReportText();
        case REPORTTYPE:
            return getReportType();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case KPIID:
            setKpiId((Number)value);
            return;
        case KPICLASS:
            setKpiClass((String)value);
            return;
        case KPINAME:
            setKpiName((String)value);
            return;
        case KPIDESC:
            setKpiDesc((String)value);
            return;
        case KPIDATASOURCE:
            setKpiDataSource((String)value);
            return;
        case KPIDATADIMENSION:
            setKpiDataDimension((String)value);
            return;
        case STARTDATE:
            setStartDate((Date)value);
            return;
        case ENDDATE:
            setEndDate((Date)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case KPIAREA:
            setKpiArea((String)value);
            return;
        case KPISCORINGMETHOD:
            setKpiScoringMethod((String)value);
            return;
        case CALTEXT:
            setCalText((String)value);
            return;
        case CALTYPE:
            setCalType((String)value);
            return;
        case REPORTTEXT:
            setReportText((String)value);
            return;
        case REPORTTYPE:
            setReportType((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Validation method for KpiName
     */
    public boolean validateKpiName(String data) {
        return true;
    }

    /**Gets the attribute value for KpiArea, using the alias name KpiArea
     */
    public String getKpiArea() {
        return (String)getAttributeInternal(KPIAREA);
    }

    /**Sets <code>value</code> as the attribute value for KpiArea
     */
    public void setKpiArea(String value) {
        setAttributeInternal(KPIAREA, value);
    }

    /**Gets the attribute value for KpiScoringMethod, using the alias name KpiScoringMethod
     */
    public String getKpiScoringMethod() {
        return (String)getAttributeInternal(KPISCORINGMETHOD);
    }

    /**Sets <code>value</code> as the attribute value for KpiScoringMethod
     */
    public void setKpiScoringMethod(String value) {
        setAttributeInternal(KPISCORINGMETHOD, value);
    }

    /**Gets the attribute value for CalText, using the alias name CalText
     */
    public String getCalText() {
        return (String)getAttributeInternal(CALTEXT);
    }

    /**Sets <code>value</code> as the attribute value for CalText
     */
    public void setCalText(String value) {
        setAttributeInternal(CALTEXT, value);
    }

    /**Gets the attribute value for CalType, using the alias name CalType
     */
    public String getCalType() {
        return (String)getAttributeInternal(CALTYPE);
    }

    /**Sets <code>value</code> as the attribute value for CalType
     */
    public void setCalType(String value) {
        setAttributeInternal(CALTYPE, value);
    }

    /**Gets the attribute value for ReportText, using the alias name ReportText
     */
    public String getReportText() {
        return (String)getAttributeInternal(REPORTTEXT);
    }

    /**Sets <code>value</code> as the attribute value for ReportText
     */
    public void setReportText(String value) {
        setAttributeInternal(REPORTTEXT, value);
    }

    /**Gets the attribute value for ReportType, using the alias name ReportType
     */
    public String getReportType() {
        return (String)getAttributeInternal(REPORTTYPE);
    }

    /**Sets <code>value</code> as the attribute value for ReportType
     */
    public void setReportType(String value) {
        setAttributeInternal(REPORTTYPE, value);
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number kpiId) {
        return new Key(new Object[] { kpiId });
    }
}
