package cux.oracle.apps.per.review.server;


import cux.oracle.apps.per.poplist.server.PerJobVOImpl;

import java.sql.CallableStatement;
import java.sql.Types;

import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;
import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.Key;
import oracle.jbo.Row;
import oracle.jbo.Transaction;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PerReviewAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public PerReviewAMImpl() {
    }

    /**
     * Rollback database transactions
     */
    public void rollback() {
        Transaction txn = getTransaction();
        if (txn.isDirty())
            txn.rollback();
    }

    public void createReviewGrp() {
        OAViewObject vo = (OAViewObject)getPerReviewGrpVO1();
        vo.executeQuery();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
    }

    public String validateReviewGrp(String groupName, String orgId, 
                                    String groupId) {
        String result = "";
        OADBTransaction transaction = getOADBTransaction();
        CallableStatement cs = 
            transaction.createCallableStatement("call cux_per_review_pkg.validate_review_group(?,?,?,?)", 
                                                1);
        try {
            cs.setString(1, groupName);
            cs.setString(2, orgId);
            cs.setString(3, groupId);
            cs.registerOutParameter(4, Types.VARCHAR);
            cs.executeUpdate();
            result = cs.getString(4);
        } catch (Exception e) {
            System.out.println(e.toString());
        }

        if (cs != null)
            try {
                cs.close();
            } catch (Exception e) {
                System.out.println(e.toString());
            }
        return result;
    }

    public void createGrpRange() {
        OAViewObject vo = getPerGrpRangeVO1();
        if (!vo.isPreparedForExecution())
            vo.executeQuery();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
    }

    public void createGrpRange(String groupId, String rangeId) {
        OAViewObject vo = getPerGrpRangeVO1();
        if (!vo.isPreparedForExecution())
            vo.executeQuery();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        row.setAttribute("GroupId", groupId);
        row.setAttribute("RangeId", rangeId);
    }

    /**
     * Create a review group
     */
    public void createReviewGrp(String groupId, String orgId, String groupName, 
                                String levelMode) {
        OAViewObject vo = getPerReviewGrpVO1();
        vo.executeQuery();
        Row row = vo.createRow();
        vo.insertRow(row);
        row.setNewRowState(Row.STATUS_INITIALIZED);
        row.setAttribute("GroupId", groupId);
        row.setAttribute("OrgId", orgId);
        row.setAttribute("GroupName", groupName);
        row.setAttribute("EpmLevelmode", levelMode);
    }

    /*
    * Query
    */

    public void initQuery(String grpName, String orgId, String jobId, 
                          Boolean executeQuery) {
        PerReviewGroupVOImpl vo = getPerReviewGroupVO1();

        if (vo == null) {
            MessageToken[] tokens = 
            { new MessageToken("OBJECT_NAME", "PerReviewGroupVO1") };
            throw new OAException("AK", "FWK_TBX_OBJECT_NOT_FOUND", tokens);
        }

        vo.initQuery(grpName, orgId, jobId, executeQuery);
    }

    /**
     * Query review groups
     */
    public void initQuery(String groupId) {
        OAViewObject vo = null;
        vo = getPerReviewGrpVO1();
        vo.setWhereClauseParams(null); // Always reset

        if (groupId != null) {
            vo.setWhereClause("GROUP_ID = :1");
            vo.setWhereClauseParam(0, groupId);
        }
        vo.executeQuery();
    } // end initQuery()

    /**
     * Query initJobQuery
     */
    public void initJobQuery(String companyId, String groupId) {
        OAViewObject vo = null;
        vo = getPerJobVO1();
        vo.setWhereClauseParams(null); // Always reset
        StringBuffer whereClause = new StringBuffer(500);
        whereClause.append(" NOT exists( ");
        whereClause.append(" SELECT 1 ");
        whereClause.append(" FROM cux_review_group_t gt ");
        whereClause.append(" ,cux_group_range_t rt ");
        whereClause.append(" WHERE gt.group_id = rt.group_id ");
        whereClause.append(" AND rt.job_id = QRSLT.job_id ");
        whereClause.append(" AND gt.org_id = :1 ) ");

        whereClause.append(" OR EXISTS (SELECT 1 ");
        whereClause.append(" FROM CUX_GROUP_RANGE_T  GRT ");
        whereClause.append(" WHERE GRT.JOB_ID = QRSLT.JOB_ID ");
        whereClause.append(" AND GRT.GROUP_ID = :2 ) ");

        if (companyId != null && groupId != null) {
            vo.setWhereClause(whereClause.toString());
            vo.setWhereClauseParam(0, companyId);
            vo.setWhereClauseParam(1, groupId);
        }
        vo.executeQuery();
    }

    /**
     * Query jobs assigned to a review group
     */
    public void initGroupRange(String groupId) {
        OAViewObject vo = null;
        vo = getPerGrpRangeVO1();
        vo.setWhereClauseParams(null); // Always reset

        if (groupId != null) {
            vo.setWhereClause("GROUP_ID = :1");
            vo.setWhereClauseParam(0, groupId);
        }
        vo.executeQuery();
    }

    /**
     * Delete review group range
     */
    public void deleteGrpRange(String rangeId) {
        OAViewObject vo = null;
        vo = getPerGrpRangeVO1();
        Object obj[] = new Object[1];
        obj[0] = rangeId;
        Key key = new Key(obj);
        Row row = vo.getRow(key);
        row.remove();
    }

    /**
     * Verify 
     */
    public String delReviewGrp(String groupId) {
        String result = "";

        OADBTransaction transaction = getOADBTransaction();
        CallableStatement cs = 
            transaction.createCallableStatement("call cux_per_review_pkg.can_del_reviewgrp(?,?)", 
                                                1);
        try {
            cs.setString(1, groupId);
            cs.registerOutParameter(2, Types.VARCHAR);
            cs.executeUpdate();
            result = cs.getString(2);
            System.out.println(result);
        } catch (Exception e) {
            System.out.println(e.toString());
        } finally {
            if (cs != null)
                try {
                    cs.close();
                } catch (Exception sqlEx) {
                    System.out.println(sqlEx.toString());
                }
        }

        return result;
    }


    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) { /* package name */
        /* Configuration Name */launchTester("cux.oracle.apps.per.review.server", 
                                             "PerReviewAMLocal");
    }


    /**Container's getter for PerGroupRangeVO1
     */
    public PerGroupRangeVOImpl getPerGroupRangeVO1() {
        return (PerGroupRangeVOImpl)findViewObject("PerGroupRangeVO1");
    }

    /**Container's getter for PerReviewGroupVO1
     */
    public PerReviewGroupVOImpl getPerReviewGroupVO1() {
        return (PerReviewGroupVOImpl)findViewObject("PerReviewGroupVO1");
    }

    /**Container's getter for PerReviewGrpVO1
     */
    public PerReviewGrpVOImpl getPerReviewGrpVO1() {
        return (PerReviewGrpVOImpl)findViewObject("PerReviewGrpVO1");
    }

    /**Container's getter for PerGrpRangeVO1
     */
    public PerGrpRangeVOImpl getPerGrpRangeVO1() {
        return (PerGrpRangeVOImpl)findViewObject("PerGrpRangeVO1");
    }

    /**Container's getter for PerJobVO1
     */
    public PerJobVOImpl getPerJobVO1() {
        return (PerJobVOImpl)findViewObject("PerJobVO1");
    }
}
