package cux.oracle.apps.per.review.server;

import java.util.Vector;

import oracle.apps.fnd.framework.server.OAViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppraisalEmpVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public AppraisalEmpVOImpl() {
    }

    public void initQuery() {
        setWhereClause(null);
        setWhereClauseParams(null);
        executeQuery();
    }

    //add by fl 20091106  

    public void initQuery(String role, String phase, String personId, 
                          String orgId, String yearFrom, String yearTo, 
                          String status, String empName, 
                          Boolean executeQuery) {
        StringBuffer whereClause = new StringBuffer(500);
        Vector parameters = new Vector(8);
        int clauseCount = 0;
        int bindCount = 1;
        setWhereClause(null);
        setWhereClauseParams(null);
        if ((role != null) && (!("".equals(role.trim())))) {
            Number personType = 0;
            if (role.equals("manager"))
                personType = 1;
            else if (role.equals("selfservice"))
                personType = 0;
            // whereClause.append(" PHASE_ID = :");
            // whereClause.append(++bindCount);
            parameters.addElement(personType);
            //setWhereClauseParam(0, personType);
            // clauseCount++;
            //  bindCount++;
        }
        if ((phase != null) && (!("".equals(phase.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" PHASE_ID = :");
            whereClause.append(++bindCount);
            parameters.addElement(phase);
            clauseCount++;
        }

        if ((personId != null) && (!("".equals(personId.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" EMP_NAME = :");
            whereClause.append(++bindCount);
            parameters.addElement(personId);
            clauseCount++;
        }

        if ((orgId != null) && (!("".equals(orgId.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }

            //whereClause.append(" DEPT_NAME = :");
            /*20100831 zs*/
            int bindCount_tmp = ++bindCount;
            whereClause.append(" ORGANIZATION_ID IN ");
            whereClause.append("       (SELECT E.ORGANIZATION_ID_CHILD ");
            whereClause.append("               FROM PER_ORG_STRUCTURE_ELEMENTS E ");
            whereClause.append("              WHERE E.ORG_STRUCTURE_VERSION_ID = CUX_JXKH_COMMON_PKG.GET_ORG_STRUCTURE_VERSION(CUX_JXKH_COMMON_PKG.GET_CONTRACT_EFFECTIVE_DATE(APPRAISAL_ID)) ");
            whereClause.append("             CONNECT BY E.ORGANIZATION_ID_PARENT = PRIOR ");
            whereClause.append("                        E.ORGANIZATION_ID_CHILD ");
            whereClause.append("                    AND E.ORG_STRUCTURE_VERSION_ID = CUX_JXKH_COMMON_PKG.GET_ORG_STRUCTURE_VERSION(CUX_JXKH_COMMON_PKG.GET_CONTRACT_EFFECTIVE_DATE(APPRAISAL_ID)) ");
            whereClause.append("              START WITH E.ORGANIZATION_ID_PARENT = (SELECT haou.organization_id FROM hr_all_organization_units haou WHERE haou.name = :");
            whereClause.append(bindCount_tmp);
            whereClause.append("  AND ROWNUM = 1)  ");
            whereClause.append("                     AND E.ORG_STRUCTURE_VERSION_ID = CUX_JXKH_COMMON_PKG.GET_ORG_STRUCTURE_VERSION(CUX_JXKH_COMMON_PKG.GET_CONTRACT_EFFECTIVE_DATE(APPRAISAL_ID)) ");
            whereClause.append("             UNION ");
            whereClause.append(" SELECT haou.organization_id FROM hr_all_organization_units haou WHERE haou.name = :");
            whereClause.append(bindCount_tmp);
            whereClause.append("  AND ROWNUM = 1) ");
            /*20100831*/
            //whereClause.append(++bindCount);
            parameters.addElement(orgId);
            clauseCount++;
        }

        if ((yearFrom != null) && (!("".equals(yearFrom.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" APPRAISAL_YEAR >= :");
            whereClause.append(++bindCount);
            parameters.addElement(yearFrom);
            clauseCount++;
        }

        if ((yearTo != null) && (!("".equals(yearTo.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" APPRAISAL_YEAR <= :");
            whereClause.append(++bindCount);
            parameters.addElement(yearTo);
            clauseCount++;
        }

        if (((yearTo == null) || ("".equals(yearTo.trim()))) && 
            ((yearFrom == null) || ("".equals(yearFrom.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" APPRAISAL_YEAR = to_char(SYSDATE,'yyyy')");
            //whereClause.append(++bindCount);
            //parameters.addElement(yearFrom);
            clauseCount++;
        }

        if ((status != null) && (!("".equals(status.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }

            whereClause.append(" STATUS_ID = :");
            whereClause.append(++bindCount);
            parameters.addElement(status);
            clauseCount++;
        }

        if ((empName != null) && (!("".equals(empName.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }

            whereClause.append(" CURRENT_PERFORMER = :");
            whereClause.append(++bindCount);
            parameters.addElement(empName);
            clauseCount++;
        }


        setWhereClause(whereClause.toString());
        if (bindCount > 0) {
            Object[] params = new Object[bindCount];
            // for(int z=0; z< parameters.size();z++)
            //  System.out.println(parameters.elementAt(z));  
            parameters.copyInto(params);
            setWhereClauseParams(params);
        }

        if /*&& (executeQuery.booleanValue())*/((executeQuery != null)) {
            executeQuery();
        }
    }

    public void initQuery(String role) {
        setWhereClause(null);
        if (role != null) {
            role = role.trim();
            Number personType = 0;
            if (role.equals("manager"))
                personType = 1;
            else if (role.equals("selfservice"))
                personType = 0;
            /*20090926 zs*/
            else if (role.equals("admin"))
                personType = 2;
            /*20090926 zs*/

            setWhereClauseParams(null);
            setWhereClauseParam(0, personType);
            /*20100827 zs*/
            StringBuffer whereClause = new StringBuffer(500);
            whereClause.append(" APPRAISAL_YEAR = to_char(SYSDATE,'yyyy')");
            setWhereClause(whereClause.toString());
            /*20100827 zs*/

            executeQuery();
        }
        //setWhereClause(null); /*20100827 zs*/
    }
}
