package cux.oracle.apps.per.review.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AppraisalAttendEOImpl extends OAEntityImpl {
    public static final int ATTENDID = 0;
    public static final int APPRAISALID = 1;
    public static final int PERSONID = 2;
    public static final int APPSEQ = 3;
    public static final int PERSONTYPE = 4;
    public static final int ENABLEED = 5;
    public static final int OPINIONDATE = 6;
    public static final int OPINIONRESULT = 7;
    public static final int DESCRIPTION = 8;
    public static final int MARKDATE = 9;
    public static final int MARK = 10;
    public static final int LEVELID = 11;
    public static final int MARKLEVEL = 12;
    public static final int ATTRIBUTECATEGORY = 13;
    public static final int ATTRIBUTE1 = 14;
    public static final int ATTRIBUTE2 = 15;
    public static final int ATTRIBUTE3 = 16;
    public static final int ATTRIBUTE4 = 17;
    public static final int ATTRIBUTE5 = 18;
    public static final int ATTRIBUTE6 = 19;
    public static final int ATTRIBUTE7 = 20;
    public static final int ATTRIBUTE8 = 21;
    public static final int ATTRIBUTE9 = 22;
    public static final int ATTRIBUTE10 = 23;
    public static final int LASTUPDATEDATE = 24;
    public static final int LASTUPDATEDBY = 25;
    public static final int LASTUPDATELOGIN = 26;
    public static final int CREATEDBY = 27;
    public static final int CREATIONDATE = 28;
    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public AppraisalAttendEOImpl() {
    }

    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.per.review.server.AppraisalAttendEO");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**Gets the attribute value for AttendId, using the alias name AttendId
     */
    public Number getAttendId() {
        return (Number)getAttributeInternal(ATTENDID);
    }

    /**Sets <code>value</code> as the attribute value for AttendId
     */
    public void setAttendId(Number value) {
        setAttributeInternal(ATTENDID, value);
    }

    /**Gets the attribute value for AppraisalId, using the alias name AppraisalId
     */
    public Number getAppraisalId() {
        return (Number)getAttributeInternal(APPRAISALID);
    }

    /**Sets <code>value</code> as the attribute value for AppraisalId
     */
    public void setAppraisalId(Number value) {
        setAttributeInternal(APPRAISALID, value);
    }

    /**Gets the attribute value for PersonId, using the alias name PersonId
     */
    public Number getPersonId() {
        return (Number)getAttributeInternal(PERSONID);
    }

    /**Sets <code>value</code> as the attribute value for PersonId
     */
    public void setPersonId(Number value) {
        setAttributeInternal(PERSONID, value);
    }

    /**Gets the attribute value for AppSeq, using the alias name AppSeq
     */
    public Number getAppSeq() {
        return (Number)getAttributeInternal(APPSEQ);
    }

    /**Sets <code>value</code> as the attribute value for AppSeq
     */
    public void setAppSeq(Number value) {
        setAttributeInternal(APPSEQ, value);
    }

    /**Gets the attribute value for PersonType, using the alias name PersonType
     */
    public Number getPersonType() {
        return (Number)getAttributeInternal(PERSONTYPE);
    }

    /**Sets <code>value</code> as the attribute value for PersonType
     */
    public void setPersonType(Number value) {
        setAttributeInternal(PERSONTYPE, value);
    }

    /**Gets the attribute value for Enableed, using the alias name Enableed
     */
    public Number getEnableed() {
        return (Number)getAttributeInternal(ENABLEED);
    }

    /**Sets <code>value</code> as the attribute value for Enableed
     */
    public void setEnableed(Number value) {
        setAttributeInternal(ENABLEED, value);
    }

    /**Gets the attribute value for OpinionDate, using the alias name OpinionDate
     */
    public Date getOpinionDate() {
        return (Date)getAttributeInternal(OPINIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for OpinionDate
     */
    public void setOpinionDate(Date value) {
        setAttributeInternal(OPINIONDATE, value);
    }

    /**Gets the attribute value for OpinionResult, using the alias name OpinionResult
     */
    public String getOpinionResult() {
        return (String)getAttributeInternal(OPINIONRESULT);
    }

    /**Sets <code>value</code> as the attribute value for OpinionResult
     */
    public void setOpinionResult(String value) {
        setAttributeInternal(OPINIONRESULT, value);
    }

    /**Gets the attribute value for Description, using the alias name Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**Gets the attribute value for MarkDate, using the alias name MarkDate
     */
    public Date getMarkDate() {
        return (Date)getAttributeInternal(MARKDATE);
    }

    /**Sets <code>value</code> as the attribute value for MarkDate
     */
    public void setMarkDate(Date value) {
        setAttributeInternal(MARKDATE, value);
    }

    /**Gets the attribute value for Mark, using the alias name Mark
     */
    public Number getMark() {
        return (Number)getAttributeInternal(MARK);
    }

    /**Sets <code>value</code> as the attribute value for Mark
     */
    public void setMark(Number value) {
        setAttributeInternal(MARK, value);
    }

    /**Gets the attribute value for LevelId, using the alias name LevelId
     */
    public String getLevelId() {
        return (String)getAttributeInternal(LEVELID);
    }

    /**Sets <code>value</code> as the attribute value for LevelId
     */
    public void setLevelId(String value) {
        setAttributeInternal(LEVELID, value);
    }

    /**Gets the attribute value for MarkLevel, using the alias name MarkLevel
     */
    public String getMarkLevel() {
        return (String)getAttributeInternal(MARKLEVEL);
    }

    /**Sets <code>value</code> as the attribute value for MarkLevel
     */
    public void setMarkLevel(String value) {
        setAttributeInternal(MARKLEVEL, value);
    }

    /**Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for Attribute6, using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for Attribute7, using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for Attribute8, using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for Attribute9, using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for Attribute10, using the alias name Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case ATTENDID:
            return getAttendId();
        case APPRAISALID:
            return getAppraisalId();
        case PERSONID:
            return getPersonId();
        case APPSEQ:
            return getAppSeq();
        case PERSONTYPE:
            return getPersonType();
        case ENABLEED:
            return getEnableed();
        case OPINIONDATE:
            return getOpinionDate();
        case OPINIONRESULT:
            return getOpinionResult();
        case DESCRIPTION:
            return getDescription();
        case MARKDATE:
            return getMarkDate();
        case MARK:
            return getMark();
        case LEVELID:
            return getLevelId();
        case MARKLEVEL:
            return getMarkLevel();
        case ATTRIBUTECATEGORY:
            return getAttributeCategory();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case ATTRIBUTE10:
            return getAttribute10();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case CREATEDBY:
            return getCreatedBy();
        case CREATIONDATE:
            return getCreationDate();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case ATTENDID:
            setAttendId((Number)value);
            return;
        case APPRAISALID:
            setAppraisalId((Number)value);
            return;
        case PERSONID:
            setPersonId((Number)value);
            return;
        case APPSEQ:
            setAppSeq((Number)value);
            return;
        case PERSONTYPE:
            setPersonType((Number)value);
            return;
        case ENABLEED:
            setEnableed((Number)value);
            return;
        case OPINIONDATE:
            setOpinionDate((Date)value);
            return;
        case OPINIONRESULT:
            setOpinionResult((String)value);
            return;
        case DESCRIPTION:
            setDescription((String)value);
            return;
        case MARKDATE:
            setMarkDate((Date)value);
            return;
        case MARK:
            setMark((Number)value);
            return;
        case LEVELID:
            setLevelId((String)value);
            return;
        case MARKLEVEL:
            setMarkLevel((String)value);
            return;
        case ATTRIBUTECATEGORY:
            setAttributeCategory((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((String)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number attendId) {
        return new Key(new Object[] { attendId });
    }
}
