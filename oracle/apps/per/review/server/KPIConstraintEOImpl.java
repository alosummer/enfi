package cux.oracle.apps.per.review.server;

import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class KPIConstraintEOImpl extends OAEntityImpl {
    public static final int CONSTRAINTID = 0;
    public static final int KPIID = 1;
    public static final int CONSTRAINTTYPE = 2;
    public static final int CONSTRAINTOBJ = 3;
    public static final int CONSTRAINTJOB = 4;
    public static final int CONSTRAINTDATADIM = 5;
    public static final int ATTRIBUTE1 = 6;
    public static final int ATTRIBUTE2 = 7;
    public static final int ATTRIBUTE3 = 8;
    public static final int ATTRIBUTE4 = 9;
    public static final int ATTRIBUTE5 = 10;
    public static final int LASTUPDATEDATE = 11;
    public static final int LASTUPDATEDBY = 12;
    public static final int LASTUPDATELOGIN = 13;
    public static final int CREATEDBY = 14;
    public static final int CREATIONDATE = 15;
    private static KPIConstraintEODefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public KPIConstraintEOImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (KPIConstraintEODefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.per.review.server.KPIConstraintEO");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**Custom DML update/insert/delete logic here.
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }

    /**Gets the attribute value for ConstraintId, using the alias name ConstraintId
     */
    public Number getConstraintId() {
        return (Number)getAttributeInternal(CONSTRAINTID);
    }

    /**Sets <code>value</code> as the attribute value for ConstraintId
     */
    public void setConstraintId(Number value) {
        setAttributeInternal(CONSTRAINTID, value);
    }

    /**Gets the attribute value for KpiId, using the alias name KpiId
     */
    public Number getKpiId() {
        return (Number)getAttributeInternal(KPIID);
    }

    /**Sets <code>value</code> as the attribute value for KpiId
     */
    public void setKpiId(Number value) {
        setAttributeInternal(KPIID, value);
    }

    /**Gets the attribute value for ConstraintType, using the alias name ConstraintType
     */
    public String getConstraintType() {
        return (String)getAttributeInternal(CONSTRAINTTYPE);
    }

    /**Sets <code>value</code> as the attribute value for ConstraintType
     */
    public void setConstraintType(String value) {
        setAttributeInternal(CONSTRAINTTYPE, value);
    }

    /**Gets the attribute value for ConstraintObj, using the alias name ConstraintObj
     */
    public String getConstraintObj() {
        return (String)getAttributeInternal(CONSTRAINTOBJ);
    }

    /**Sets <code>value</code> as the attribute value for ConstraintObj
     */
    public void setConstraintObj(String value) {
        setAttributeInternal(CONSTRAINTOBJ, value);
    }

    /**Gets the attribute value for ConstraintJob, using the alias name ConstraintJob
     */
    public Number getConstraintJob() {
        return (Number)getAttributeInternal(CONSTRAINTJOB);
    }

    /**Sets <code>value</code> as the attribute value for ConstraintJob
     */
    public void setConstraintJob(Number value) {
        setAttributeInternal(CONSTRAINTJOB, value);
    }

    /**Gets the attribute value for ConstraintDataDim, using the alias name ConstraintDataDim
     */
    public String getConstraintDataDim() {
        return (String)getAttributeInternal(CONSTRAINTDATADIM);
    }

    /**Sets <code>value</code> as the attribute value for ConstraintDataDim
     */
    public void setConstraintDataDim(String value) {
        setAttributeInternal(CONSTRAINTDATADIM, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case CONSTRAINTID:
            return getConstraintId();
        case KPIID:
            return getKpiId();
        case CONSTRAINTTYPE:
            return getConstraintType();
        case CONSTRAINTOBJ:
            return getConstraintObj();
        case CONSTRAINTJOB:
            return getConstraintJob();
        case CONSTRAINTDATADIM:
            return getConstraintDataDim();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case CREATEDBY:
            return getCreatedBy();
        case CREATIONDATE:
            return getCreationDate();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case CONSTRAINTID:
            setConstraintId((Number)value);
            return;
        case KPIID:
            setKpiId((Number)value);
            return;
        case CONSTRAINTTYPE:
            setConstraintType((String)value);
            return;
        case CONSTRAINTOBJ:
            setConstraintObj((String)value);
            return;
        case CONSTRAINTJOB:
            setConstraintJob((Number)value);
            return;
        case CONSTRAINTDATADIM:
            setConstraintDataDim((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number constraintId) {
        return new Key(new Object[] { constraintId });
    }
}
