package cux.oracle.apps.per.review.server;

import cux.oracle.apps.per.poplist.server.FlagVOImpl;

import java.io.Serializable;

import java.sql.CallableStatement;
import java.sql.Types;

import oracle.apps.fnd.common.MessageToken;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.OAViewObject;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.apps.fnd.framework.server.OADBTransaction;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.Transaction;
import oracle.jbo.domain.Number;

import oracle.sql.NUMBER;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class ProrateManageAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public ProrateManageAMImpl() {
    }

    /**
     * Rollback database transactions
     */
    public void rollback() {
        Transaction txn = getTransaction();
        if (txn.isDirty())
            txn.rollback();
    }

    public String getOrganizationId(String orgName) {
        String result = "";

        OADBTransaction transaction = getOADBTransaction();
        CallableStatement cs = 
            transaction.createCallableStatement("call cux_per_review_pkg.get_organization_id(?,?)", 
                                                1);
        try {
            cs.setString(1, orgName);
            cs.registerOutParameter(2, Types.VARCHAR);
            cs.executeUpdate();
            result = cs.getString(2);
        } catch (Exception e) {
            System.out.println(e.toString());
        } finally {
            if (cs != null)
                try {
                    cs.close();
                } catch (Exception sqlEx) {
                    System.out.println(sqlEx.toString());
                }
        }

        return result;
    }

    // add by fl at 20091019

    public String canDelProrate(String prorateId) {
        String result = "";
        OADBTransaction transaction = getOADBTransaction();
        CallableStatement cs = 
            transaction.createCallableStatement("call cux_per_review_pkg.can_del_prorate(?,?)", 
                                                1);
        try {
            cs.setString(1, prorateId);
            cs.registerOutParameter(2, Types.VARCHAR);
            cs.executeUpdate();
            result = cs.getString(2);
        } catch (Exception e) {
            System.out.println(e.toString());
        } finally {
            if (cs != null)
                try {
                    cs.close();
                } catch (Exception sqlEx) {
                    System.out.println(sqlEx.toString());
                }
        }

        return result;
    }


    /*
    public String validation(String levelA
                            ,String levelB
                            ,String levelC
                            ,String levelD
                            ,String levelE
                            ,String prorateId
                            ,String orgId
                            ,String groupId
                            ,String adjust){
        String result = "";
        OADBTransaction transaction = getOADBTransaction();
        CallableStatement cs = transaction.createCallableStatement("call cux_jx_validation_pkg.validate_prorate(?,?,?,?,?,?,?,?,?,?)", 1);
        try{
            cs.setString(1, levelA);
            cs.setString(2, levelB);
            cs.setString(3, levelC);
            cs.setString(4, levelD);
            cs.setString(5, levelE);
            cs.setString(6, prorateId);
            cs.setString(7, orgId);
            cs.setString(8, groupId);
            cs.setString(9, adjust);
            cs.registerOutParameter(10, Types.VARCHAR);
            cs.executeUpdate();
            result = cs.getString(10);
        }catch(Exception e){
            System.out.println(e.toString());
        }

        if(cs != null)
            try{
                cs.close();
            }catch(Exception e){
                System.out.println(e.toString());
            }
        return result;
    }
   */

    public void initQuery(String pOrg, String flag, String groupId, 
                          Boolean executeQuery) {
        ProrateManageVOImpl vo = getProrateManageVO1();

        if (vo == null) {
            MessageToken[] tokens = 
            { new MessageToken("OBJECT_NAME", "ProrateManageVO1") };
            throw new OAException("AK", "FWK_TBX_OBJECT_NOT_FOUND", tokens);
        }

        vo.initQuery(pOrg, flag, groupId, executeQuery);
    }

    public void initQuery() {
        OAViewObject vo = getProrateManageVO1();
        vo.executeQuery();
    }

    public void search(String pOrg, String flag, String groupId) {
        ProrateManageVOImpl vo = getProrateManageVO1();
        vo.setMaxFetchSize(100);
        vo.initProQuery(pOrg, flag, groupId);
    }

    /**
     * Approve data transactions
     */

    /*
      public void approve(){
         OAViewObject vo = getProrateManageVO1();
         ProrateManageVORowImpl row = null;

         int index = 0;
         int fetchedRowCount = vo.getFetchedRowCount();

         RowSetIterator approveIter = vo.createRowSetIterator("approveIter");

          if (fetchedRowCount > 0)
          {
            approveIter.setRangeStart(0);
            approveIter.setRangeSize(fetchedRowCount);
            for (int i = 0; i < fetchedRowCount; i++)
            {
              row = (ProrateManageVORowImpl)approveIter.getRowAtRangeIndex(i);
                double levelA = 0;
                if(row.getLevelA() != null)
                    levelA = row.getLevelA().doubleValue();
                else
                    row.setAttribute("LevelA", 0);

                double levelB = 0;
                if(row.getLevelB() != null)
                    levelB = row.getLevelB().doubleValue();
                else
                    row.setAttribute("LevelB", 0);

                double levelC = 0;
                if(row.getLevelC() != null)
                    levelC = row.getLevelC().doubleValue();
                else
                    row.setAttribute("LevelC", 0);

                double levelD = 0;
                if(row.getLevelD() != null)
                    levelD = row.getLevelD().doubleValue();
                else
                    row.setAttribute("LevelD", 0);

                double levelE = 0;
                if(row.getLevelE() != null)
                    levelE = row.getLevelE().doubleValue();
                else
                    row.setAttribute("LevelE", 0);

              if (!((levelA + levelB+ levelC+ levelD+ levelE)== 100) )
              {
               //  break;
                throw new OAException("CUX", "CUX_PRORATE_TOTAL_VALIDATION", null, OAException.ERROR, null);
              }
             index++;
            }
          }

          approveIter.closeRowSetIterator();

          // If the user didn't actually select any rows, display an error message.

          if (index == fetchedRowCount)
          {return;
           // getTransaction().commit();
          }
          else
          {
            throw new OAException("CUX", "FWK_TBX_T_SELECT_FOR_APPROVE");
          }


     }
  */

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) { /* package name */
        /* Configuration Name */launchTester("cux.oracle.apps.per.review.server", 
                                             "ProrateManageAMLocal");
    }


    /**Container's getter for FlagVO1
     */
    public FlagVOImpl getFlagVO1() {
        return (FlagVOImpl)findViewObject("FlagVO1");
    }

    /**Container's getter for ProrateManageVO1
     */
    public ProrateManageVOImpl getProrateManageVO1() {
        return (ProrateManageVOImpl)findViewObject("ProrateManageVO1");
    }
}
