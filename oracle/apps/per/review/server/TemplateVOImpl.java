package cux.oracle.apps.per.review.server;

import java.util.Vector;

import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.jbo.domain.Number;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class TemplateVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public TemplateVOImpl() {
    }

    public void initQuery(String name) {
        setWhereClauseParams(null);
        if (name != null && !name.equals("")) {
            setWhereClause(" TMPL_NAME = :1");
            setWhereClauseParam(0, name);
        }
        executeQuery();
    }

    public void initTmplQuery(String tmplName, String grpId, String orgName, 
                              String jobId, String personId, 
                              Boolean executeQuery) {
        StringBuffer whereClause = new StringBuffer(500);
        Vector parameters = new Vector(3);
        int clauseCount = 0;
        int bindCount = 0;

        setWhereClauseParams(null);
        if ((tmplName != null) && (!("".equals(tmplName.trim())))) {
            whereClause.append(" TMPL_NAME like :");
            whereClause.append(++bindCount);
            parameters.addElement("%" + tmplName + "%");
            clauseCount++;
        }

        if ((grpId != null) && (!("".equals(grpId.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }

            Number groupId = null;
            try {
                groupId = new Number(grpId);
            } catch (Exception e) {
                ;
            }

            whereClause.append(" GROUP_ID = :");
            whereClause.append(++bindCount);
            parameters.addElement(groupId);
            clauseCount++;
        }

        if ((orgName != null) && (!("".equals(orgName.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }

            whereClause.append(" EXISTS( SELECT 1" + 
                               "           FROM CUX_TMPL_ORG_T OT" + 
                               "           , hr_all_organization_units hu" + 
                               "          WHERE QRSLT.Tmpl_Id = OT.TMPL_ID" + 
                               "            AND OT.organization_id = hu.organization_id" + 
                               "            AND hu.name LIKE :");
            whereClause.append(++bindCount);
            parameters.addElement("%" + orgName + "%");
            clauseCount++;
            whereClause.append(")");
        }

        if ((jobId != null) && (!("".equals(jobId.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }

            Number assignmentId = null;
            try {
                assignmentId = new Number(jobId);
            } catch (Exception e) {
                ;
            }

            whereClause.append(" EXISTS( SELECT 1" + 
                               "           FROM CUX_TMPL_JOB_T JT" + 
                               "          WHERE QRSLT.Tmpl_Id = JT.TMPL_ID" + 
                               "            AND JT.JOB_ID = :");
            whereClause.append(++bindCount);
            parameters.addElement(assignmentId);
            clauseCount++;
            whereClause.append(")");
        }
        if (personId != null && !"".equals(personId)) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            Number empPersonId = null;
            try {
                empPersonId = new Number(personId);
            } catch (Exception e) {
                ;
            }
            whereClause.append(" EXISTS( SELECT 1" + 
                               "           FROM CUX_TMPL_EMP_T ET" + 
                               "          WHERE QRSLT.Tmpl_Id = ET.TMPL_ID" + 
                               "            AND ET.PERSON_ID = :");
            whereClause.append(++bindCount);
            parameters.addElement(empPersonId);
            clauseCount++;
            whereClause.append(")");
        }
        setWhereClause(whereClause.toString());
        if (bindCount > 0) {
            Object[] params = new Object[bindCount];
            parameters.copyInto(params);
            setWhereClauseParams(params);
        }

        if ((executeQuery != null) && (executeQuery.booleanValue())) {
            executeQuery();
        }

    }
}
