package cux.oracle.apps.per.review.server;

import java.util.Vector;

import oracle.apps.fnd.framework.OAApplicationModule;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;

import oracle.jbo.domain.Number;

import oracle.jbo.Row;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class RoleManageCreateVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public RoleManageCreateVOImpl() {
    }

    public void insertRow(Row row) {

        super.insertRow(row);

        OAApplicationModule am = (OAApplicationModule)getApplicationModule();

        OADBTransaction trx = am.getOADBTransaction();

        Number roleId = trx.getSequenceValue("CUX_GROUP_ROLE_S");


        row.setAttribute("RoleId", roleId);

    }

    //fl 20090928

    public void initQuery(String currRoleId, String pgroupId, String porgId, 
                          String currAttribute1) {
        StringBuffer whereClause = new StringBuffer(100);
        Vector parameters = new Vector(2);
        int clauseCount = 0;
        int bindCount = 0;
        setWhereClauseParams(null); // Always reset
        if ((pgroupId != null) && (!("".equals(pgroupId.trim())))) {
            Number groupId = null;
            try {
                groupId = new Number(pgroupId);
            } catch (Exception e) {
                throw new OAException("z", "s");
            }
            whereClause.append(" GROUP_ID = :");
            whereClause.append(++bindCount);
            parameters.addElement(groupId);
            clauseCount++;
        }
        if ((porgId != null) && (!("".equals(porgId.trim())))) {
            Number orgId = null;
            try {
                orgId = new Number(porgId);
            } catch (Exception e) {
                throw new OAException("z", "s");
            }

            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" ORG_ID = :");
            whereClause.append(++bindCount);
            parameters.addElement(orgId);
            clauseCount++;
        }
        //add by fl 20091224
        if ((currAttribute1 != null) && 
            (!("".equals(currAttribute1.trim())))) {
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" ATTRIBUTE1 = :");
            whereClause.append(++bindCount);
            parameters.addElement(currAttribute1);
            clauseCount++;
        }

        if ((currRoleId != null) && (!("".equals(currRoleId.trim())))) {
            Number roleId = null;
            try {
                roleId = new Number(currRoleId);
            } catch (Exception e) {
                throw new OAException("z", "s");
            }
            if (clauseCount > 0) {
                whereClause.append(" AND ");
            }
            whereClause.append(" ROLE_ID != :");
            whereClause.append(++bindCount);
            parameters.addElement(roleId);
            clauseCount++;
        }

        setWhereClause(whereClause.toString());
        if (bindCount > 0) {
            Object[] params = new Object[bindCount];
            parameters.copyInto(params);
            setWhereClauseParams(params);
        }
        executeQuery();
    }

}
