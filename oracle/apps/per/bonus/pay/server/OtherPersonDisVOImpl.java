package cux.oracle.apps.per.bonus.pay.server;

import cux.oracle.apps.per.bonus.advanceawards.server.AdvanceAwardsAMImpl;

import java.io.Reader;

import java.sql.CallableStatement;
import java.sql.Clob;
import java.sql.Types;

import java.util.Vector;

import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class OtherPersonDisVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public OtherPersonDisVOImpl() {
    }

    /* 查询本部门的人员
     * iOrgID:  发放组织ID
     * iEmpOrgID:  人员部门组织ID
     * */

    public void initOtherQuery(int iOrgID, int iEmpOrgID, String strPeriod) {
        String strSQL = this.getQuerySQL(iOrgID, iEmpOrgID, strPeriod);
        cancelQuery();
        setQuery(strSQL);
        setMaxFetchSize(-1);
        executeQuery();
    }

    /* 获取查询SQL */

    private String getQuerySQL(int iOrgID, int iEmpOrgID, String strPeriod) {
        PayAMImpl amImpl = (PayAMImpl)this.getApplicationModule();
        CallableStatement cs = null;
        OADBTransaction transaction = amImpl.getOADBTransaction();
        Clob cSQL = null;
        String strSQL = "";
        cs = 
 transaction.createCallableStatement("call CUX_HR_BONUS.GET_PAY_DEPT_SQL(?, ?, ?, ?)", 
                                     1);
        try {
            cs.setInt(1, iOrgID);
            cs.setInt(2, iEmpOrgID);
            cs.setString(3, strPeriod);
            cs.registerOutParameter(4, Types.CLOB);
            cs.executeUpdate();
            cSQL = cs.getClob(4);
            Reader inStream = cSQL.getCharacterStream();
            char[] c = new char[(int)cSQL.length()];
            inStream.read(c);
            strSQL = new String(c);
            inStream.close();
            cs.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
        return strSQL;
    } //end getSummarySQL
}
