package cux.oracle.apps.per.bonus.specialawards.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SpecialAwardsTypeEOImpl extends OAEntityImpl {
    public static final int TYPEID = 0;
    public static final int TYPENAME = 1;
    public static final int BONUSTYPE = 2;
    public static final int TOPEOPLEFLAG = 3;
    public static final int TODEPFLAG = 4;
    public static final int VALIDFLAG = 5;
    public static final int HRTYPEID = 6;
    public static final int ATTRIBUTE1 = 7;
    public static final int ATTRIBUTE2 = 8;
    public static final int ATTRIBUTE3 = 9;
    public static final int ATTRIBUTE4 = 10;
    public static final int ATTRIBUTE5 = 11;
    public static final int ATTRIBUTE6 = 12;
    public static final int ATTRIBUTE7 = 13;
    public static final int ATTRIBUTE8 = 14;
    public static final int ATTRIBUTE9 = 15;
    public static final int ATTRIBUTE10 = 16;
    public static final int ATTRIBUTE11 = 17;
    public static final int ATTRIBUTE12 = 18;
    public static final int ATTRIBUTE13 = 19;
    public static final int ATTRIBUTE14 = 20;
    public static final int ATTRIBUTE15 = 21;
    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public SpecialAwardsTypeEOImpl() {
    }

    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.per.bonus.specialawards.server.SpecialAwardsTypeEO");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for TypeId, using the alias name TypeId
     */
    public Number getTypeId() {
        return (Number)getAttributeInternal(TYPEID);
    }

    /**Sets <code>value</code> as the attribute value for TypeId
     */
    public void setTypeId(Number value) {
        setAttributeInternal(TYPEID, value);
    }

    /**Gets the attribute value for TypeName, using the alias name TypeName
     */
    public String getTypeName() {
        return (String)getAttributeInternal(TYPENAME);
    }

    /**Sets <code>value</code> as the attribute value for TypeName
     */
    public void setTypeName(String value) {
        setAttributeInternal(TYPENAME, value);
    }

    /**Gets the attribute value for BonusType, using the alias name BonusType
     */
    public String getBonusType() {
        return (String)getAttributeInternal(BONUSTYPE);
    }

    /**Sets <code>value</code> as the attribute value for BonusType
     */
    public void setBonusType(String value) {
        setAttributeInternal(BONUSTYPE, value);
    }

    /**Gets the attribute value for ToPeopleFlag, using the alias name ToPeopleFlag
     */
    public String getToPeopleFlag() {
        return (String)getAttributeInternal(TOPEOPLEFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ToPeopleFlag
     */
    public void setToPeopleFlag(String value) {
        setAttributeInternal(TOPEOPLEFLAG, value);
    }

    /**Gets the attribute value for ToDepFlag, using the alias name ToDepFlag
     */
    public String getToDepFlag() {
        return (String)getAttributeInternal(TODEPFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ToDepFlag
     */
    public void setToDepFlag(String value) {
        setAttributeInternal(TODEPFLAG, value);
    }

    /**Gets the attribute value for ValidFlag, using the alias name ValidFlag
     */
    public String getValidFlag() {
        return (String)getAttributeInternal(VALIDFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ValidFlag
     */
    public void setValidFlag(String value) {
        setAttributeInternal(VALIDFLAG, value);
    }

    /**Gets the attribute value for HrTypeId, using the alias name HrTypeId
     */
    public Number getHrTypeId() {
        return (Number)getAttributeInternal(HRTYPEID);
    }

    /**Sets <code>value</code> as the attribute value for HrTypeId
     */
    public void setHrTypeId(Number value) {
        setAttributeInternal(HRTYPEID, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for Attribute6, using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for Attribute7, using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for Attribute8, using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for Attribute9, using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for Attribute10, using the alias name Attribute10
     */
    public Number getAttribute10() {
        return (Number)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for Attribute10
     */
    public void setAttribute10(Number value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for Attribute11, using the alias name Attribute11
     */
    public Number getAttribute11() {
        return (Number)getAttributeInternal(ATTRIBUTE11);
    }

    /**Sets <code>value</code> as the attribute value for Attribute11
     */
    public void setAttribute11(Number value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**Gets the attribute value for Attribute12, using the alias name Attribute12
     */
    public Number getAttribute12() {
        return (Number)getAttributeInternal(ATTRIBUTE12);
    }

    /**Sets <code>value</code> as the attribute value for Attribute12
     */
    public void setAttribute12(Number value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**Gets the attribute value for Attribute13, using the alias name Attribute13
     */
    public Number getAttribute13() {
        return (Number)getAttributeInternal(ATTRIBUTE13);
    }

    /**Sets <code>value</code> as the attribute value for Attribute13
     */
    public void setAttribute13(Number value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**Gets the attribute value for Attribute14, using the alias name Attribute14
     */
    public Date getAttribute14() {
        return (Date)getAttributeInternal(ATTRIBUTE14);
    }

    /**Sets <code>value</code> as the attribute value for Attribute14
     */
    public void setAttribute14(Date value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**Gets the attribute value for Attribute15, using the alias name Attribute15
     */
    public Date getAttribute15() {
        return (Date)getAttributeInternal(ATTRIBUTE15);
    }

    /**Sets <code>value</code> as the attribute value for Attribute15
     */
    public void setAttribute15(Date value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case TYPEID:
            return getTypeId();
        case TYPENAME:
            return getTypeName();
        case BONUSTYPE:
            return getBonusType();
        case TOPEOPLEFLAG:
            return getToPeopleFlag();
        case TODEPFLAG:
            return getToDepFlag();
        case VALIDFLAG:
            return getValidFlag();
        case HRTYPEID:
            return getHrTypeId();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case ATTRIBUTE10:
            return getAttribute10();
        case ATTRIBUTE11:
            return getAttribute11();
        case ATTRIBUTE12:
            return getAttribute12();
        case ATTRIBUTE13:
            return getAttribute13();
        case ATTRIBUTE14:
            return getAttribute14();
        case ATTRIBUTE15:
            return getAttribute15();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case TYPEID:
            setTypeId((Number)value);
            return;
        case TYPENAME:
            setTypeName((String)value);
            return;
        case BONUSTYPE:
            setBonusType((String)value);
            return;
        case TOPEOPLEFLAG:
            setToPeopleFlag((String)value);
            return;
        case TODEPFLAG:
            setToDepFlag((String)value);
            return;
        case VALIDFLAG:
            setValidFlag((String)value);
            return;
        case HRTYPEID:
            setHrTypeId((Number)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((Number)value);
            return;
        case ATTRIBUTE11:
            setAttribute11((Number)value);
            return;
        case ATTRIBUTE12:
            setAttribute12((Number)value);
            return;
        case ATTRIBUTE13:
            setAttribute13((Number)value);
            return;
        case ATTRIBUTE14:
            setAttribute14((Date)value);
            return;
        case ATTRIBUTE15:
            setAttribute15((Date)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number typeId) {
        return new Key(new Object[] { typeId });
    }

    public void setCreationDate(Date date) {
    }

    public void setCreatedBy(Number number) {
    }

    public void setLastUpdateDate(Date date) {
    }

    public void setLastUpdatedBy(Number number) {
    }

    public void setLastUpdateLogin(Number number) {
    }
}
