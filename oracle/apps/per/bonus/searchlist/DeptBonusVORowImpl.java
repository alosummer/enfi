package cux.oracle.apps.per.bonus.searchlist;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DeptBonusVORowImpl extends OAViewRowImpl {
    public static final int PERSONDISTRIBUTIONID = 0;
    public static final int ID = 1;
    public static final int NAME = 2;
    public static final int DEPNAME = 3;
    public static final int JAN = 4;
    public static final int FEB = 5;
    public static final int MAR = 6;
    public static final int APRIL = 7;
    public static final int MAY = 8;
    public static final int JUNE = 9;
    public static final int JULY = 10;
    public static final int AUG = 11;
    public static final int SEP = 12;
    public static final int OCT = 13;
    public static final int NOV = 14;
    public static final int DEC = 15;
    public static final int YEAR = 16;
    public static final int TOTAL = 17;

    /**This is the default constructor (do not remove)
     */
    public DeptBonusVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute PersonDistributionId
     */
    public Number getPersonDistributionId() {
        return (Number)getAttributeInternal(PERSONDISTRIBUTIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute PersonDistributionId
     */
    public void setPersonDistributionId(Number value) {
        setAttributeInternal(PERSONDISTRIBUTIONID, value);
    }

    /**Gets the attribute value for the calculated attribute Id
     */
    public Number getId() {
        return (Number)getAttributeInternal(ID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Id
     */
    public void setId(Number value) {
        setAttributeInternal(ID, value);
    }

    /**Gets the attribute value for the calculated attribute Name
     */
    public String getName() {
        return (String)getAttributeInternal(NAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Name
     */
    public void setName(String value) {
        setAttributeInternal(NAME, value);
    }

    /**Gets the attribute value for the calculated attribute DepName
     */
    public String getDepName() {
        return (String)getAttributeInternal(DEPNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DepName
     */
    public void setDepName(String value) {
        setAttributeInternal(DEPNAME, value);
    }

    /**Gets the attribute value for the calculated attribute Jan
     */
    public Number getJan() {
        return (Number)getAttributeInternal(JAN);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Jan
     */
    public void setJan(Number value) {
        setAttributeInternal(JAN, value);
    }

    /**Gets the attribute value for the calculated attribute Feb
     */
    public Number getFeb() {
        return (Number)getAttributeInternal(FEB);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Feb
     */
    public void setFeb(Number value) {
        setAttributeInternal(FEB, value);
    }

    /**Gets the attribute value for the calculated attribute Mar
     */
    public Number getMar() {
        return (Number)getAttributeInternal(MAR);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Mar
     */
    public void setMar(Number value) {
        setAttributeInternal(MAR, value);
    }

    /**Gets the attribute value for the calculated attribute April
     */
    public Number getApril() {
        return (Number)getAttributeInternal(APRIL);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute April
     */
    public void setApril(Number value) {
        setAttributeInternal(APRIL, value);
    }

    /**Gets the attribute value for the calculated attribute May
     */
    public Number getMay() {
        return (Number)getAttributeInternal(MAY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute May
     */
    public void setMay(Number value) {
        setAttributeInternal(MAY, value);
    }

    /**Gets the attribute value for the calculated attribute June
     */
    public Number getJune() {
        return (Number)getAttributeInternal(JUNE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute June
     */
    public void setJune(Number value) {
        setAttributeInternal(JUNE, value);
    }

    /**Gets the attribute value for the calculated attribute July
     */
    public Number getJuly() {
        return (Number)getAttributeInternal(JULY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute July
     */
    public void setJuly(Number value) {
        setAttributeInternal(JULY, value);
    }

    /**Gets the attribute value for the calculated attribute Aug
     */
    public Number getAug() {
        return (Number)getAttributeInternal(AUG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Aug
     */
    public void setAug(Number value) {
        setAttributeInternal(AUG, value);
    }

    /**Gets the attribute value for the calculated attribute Sep
     */
    public Number getSep() {
        return (Number)getAttributeInternal(SEP);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Sep
     */
    public void setSep(Number value) {
        setAttributeInternal(SEP, value);
    }

    /**Gets the attribute value for the calculated attribute Oct
     */
    public Number getOct() {
        return (Number)getAttributeInternal(OCT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Oct
     */
    public void setOct(Number value) {
        setAttributeInternal(OCT, value);
    }

    /**Gets the attribute value for the calculated attribute Nov
     */
    public Number getNov() {
        return (Number)getAttributeInternal(NOV);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Nov
     */
    public void setNov(Number value) {
        setAttributeInternal(NOV, value);
    }

    /**Gets the attribute value for the calculated attribute Dec
     */
    public Number getDec() {
        return (Number)getAttributeInternal(DEC);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Dec
     */
    public void setDec(Number value) {
        setAttributeInternal(DEC, value);
    }

    /**Gets the attribute value for the calculated attribute Year
     */
    public Number getYear() {
        return (Number)getAttributeInternal(YEAR);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Year
     */
    public void setYear(Number value) {
        setAttributeInternal(YEAR, value);
    }

    /**Gets the attribute value for the calculated attribute Total
     */
    public Number getTotal() {
        return (Number)getAttributeInternal(TOTAL);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Total
     */
    public void setTotal(Number value) {
        setAttributeInternal(TOTAL, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PERSONDISTRIBUTIONID:
            return getPersonDistributionId();
        case ID:
            return getId();
        case NAME:
            return getName();
        case DEPNAME:
            return getDepName();
        case JAN:
            return getJan();
        case FEB:
            return getFeb();
        case MAR:
            return getMar();
        case APRIL:
            return getApril();
        case MAY:
            return getMay();
        case JUNE:
            return getJune();
        case JULY:
            return getJuly();
        case AUG:
            return getAug();
        case SEP:
            return getSep();
        case OCT:
            return getOct();
        case NOV:
            return getNov();
        case DEC:
            return getDec();
        case YEAR:
            return getYear();
        case TOTAL:
            return getTotal();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PERSONDISTRIBUTIONID:
            setPersonDistributionId((Number)value);
            return;
        case ID:
            setId((Number)value);
            return;
        case NAME:
            setName((String)value);
            return;
        case DEPNAME:
            setDepName((String)value);
            return;
        case JAN:
            setJan((Number)value);
            return;
        case FEB:
            setFeb((Number)value);
            return;
        case MAR:
            setMar((Number)value);
            return;
        case APRIL:
            setApril((Number)value);
            return;
        case MAY:
            setMay((Number)value);
            return;
        case JUNE:
            setJune((Number)value);
            return;
        case JULY:
            setJuly((Number)value);
            return;
        case AUG:
            setAug((Number)value);
            return;
        case SEP:
            setSep((Number)value);
            return;
        case OCT:
            setOct((Number)value);
            return;
        case NOV:
            setNov((Number)value);
            return;
        case DEC:
            setDec((Number)value);
            return;
        case YEAR:
            setYear((Number)value);
            return;
        case TOTAL:
            setTotal((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
