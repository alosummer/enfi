package cux.oracle.apps.per.bonus.advanceawards.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class AdvAwardsOtherPerVORowImpl extends OAViewRowImpl {
    public static final int EMPLOYEENUMBER = 0;
    public static final int ATTRIBUTE2 = 27;
    public static final int ATTRIBUTE3 = 28;
    public static final int ATTRIBUTE4 = 29;
    public static final int ATTRIBUTE5 = 30;
    public static final int ATTRIBUTE6 = 31;
    public static final int ATTRIBUTE7 = 32;
    public static final int ATTRIBUTE8 = 33;
    public static final int ATTRIBUTE9 = 34;
    public static final int ATTRIBUTE10 = 35;
    public static final int ATTRIBUTE11 = 36;
    public static final int ATTRIBUTE12 = 37;
    public static final int ATTRIBUTE13 = 38;
    public static final int ATTRIBUTE14 = 39;
    public static final int ATTRIBUTE15 = 40;
    public static final int READONLYFLAG1 = 9;
    public static final int READONLYFLAG1_1 = 10;
    public static final int LASTNAME = 1;
    public static final int DEPNAME = 2;
    public static final int OTHERDELETE = 3;
    public static final int DISTRIBUTIONSTATUS = 4;
    public static final int DISTRIBUTIONAMOUNT = 5;
    public static final int NOTE = 6;
    public static final int ATTRIBUTE1 = 7;
    public static final int PERSONDISTRIBUTIONID = 8;
    public static final int READONLYFLAG = 9;
    public static final int ROWSEQ = 10;

    /**This is the default constructor (do not remove)
     */
    public AdvAwardsOtherPerVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute PersonDistributionId
     */
    public Number getPersonDistributionId() {
        return (Number)getAttributeInternal(PERSONDISTRIBUTIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute PersonDistributionId
     */
    public void setPersonDistributionId(Number value) {
        setAttributeInternal(PERSONDISTRIBUTIONID, value);
    }

    /**Gets the attribute value for the calculated attribute EmployeeNumber
     */
    public String getEmployeeNumber() {
        return (String)getAttributeInternal(EMPLOYEENUMBER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute EmployeeNumber
     */
    public void setEmployeeNumber(String value) {
        setAttributeInternal(EMPLOYEENUMBER, value);
    }

    /**Gets the attribute value for the calculated attribute LastName
     */
    public String getLastName() {
        return (String)getAttributeInternal(LASTNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute LastName
     */
    public void setLastName(String value) {
        setAttributeInternal(LASTNAME, value);
    }


    /**Gets the attribute value for the calculated attribute DepName
     */
    public String getDepName() {
        return (String)getAttributeInternal(DEPNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DepName
     */
    public void setDepName(String value) {
        setAttributeInternal(DEPNAME, value);
    }

    /**Gets the attribute value for the calculated attribute DistributionStatus
     */
    public String getDistributionStatus() {
        return (String)getAttributeInternal(DISTRIBUTIONSTATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DistributionStatus
     */
    public void setDistributionStatus(String value) {
        setAttributeInternal(DISTRIBUTIONSTATUS, value);
    }


    /**Gets the attribute value for the calculated attribute DistributionAmount
     */
    public Number getDistributionAmount() {
        return (Number)getAttributeInternal(DISTRIBUTIONAMOUNT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DistributionAmount
     */
    public void setDistributionAmount(Number value) {
        setAttributeInternal(DISTRIBUTIONAMOUNT, value);
    }


    /**Gets the attribute value for the calculated attribute Note
     */
    public String getNote() {
        return (String)getAttributeInternal(NOTE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Note
     */
    public void setNote(String value) {
        setAttributeInternal(NOTE, value);
    }


    /**Gets the attribute value for the calculated attribute Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute10
     */
    public Number getAttribute10() {
        return (Number)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute10
     */
    public void setAttribute10(Number value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute11
     */
    public Number getAttribute11() {
        return (Number)getAttributeInternal(ATTRIBUTE11);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute11
     */
    public void setAttribute11(Number value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute12
     */
    public Number getAttribute12() {
        return (Number)getAttributeInternal(ATTRIBUTE12);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute12
     */
    public void setAttribute12(Number value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute13
     */
    public Number getAttribute13() {
        return (Number)getAttributeInternal(ATTRIBUTE13);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute13
     */
    public void setAttribute13(Number value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute14
     */
    public Date getAttribute14() {
        return (Date)getAttributeInternal(ATTRIBUTE14);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute14
     */
    public void setAttribute14(Date value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**Gets the attribute value for the calculated attribute Attribute15
     */
    public Date getAttribute15() {
        return (Date)getAttributeInternal(ATTRIBUTE15);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Attribute15
     */
    public void setAttribute15(Date value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case EMPLOYEENUMBER:
            return getEmployeeNumber();
        case LASTNAME:
            return getLastName();
        case DEPNAME:
            return getDepName();
        case OTHERDELETE:
            return getOtherDelete();
        case DISTRIBUTIONSTATUS:
            return getDistributionStatus();
        case DISTRIBUTIONAMOUNT:
            return getDistributionAmount();
        case NOTE:
            return getNote();
        case ATTRIBUTE1:
            return getAttribute1();
        case PERSONDISTRIBUTIONID:
            return getPersonDistributionId();
        case READONLYFLAG:
            return getReadOnlyFlag();
        case ROWSEQ:
            return getRowSeq();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case EMPLOYEENUMBER:
            setEmployeeNumber((String)value);
            return;
        case LASTNAME:
            setLastName((String)value);
            return;
        case DEPNAME:
            setDepName((String)value);
            return;
        case OTHERDELETE:
            setOtherDelete((String)value);
            return;
        case DISTRIBUTIONSTATUS:
            setDistributionStatus((String)value);
            return;
        case DISTRIBUTIONAMOUNT:
            setDistributionAmount((Number)value);
            return;
        case NOTE:
            setNote((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case PERSONDISTRIBUTIONID:
            setPersonDistributionId((Number)value);
            return;
        case READONLYFLAG:
            setReadOnlyFlag((Boolean)value);
            return;
        case ROWSEQ:
            setRowSeq((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute OtherDelete
     */
    public String getOtherDelete() {
        return (String)getAttributeInternal(OTHERDELETE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute OtherDelete
     */
    public void setOtherDelete(String value) {
        setAttributeInternal(OTHERDELETE, value);
    }


    /**Gets the attribute value for the calculated attribute ReadOnlyFlag1
     */
    public Number getReadOnlyFlag1() {
        return (Number)getAttributeInternal(READONLYFLAG1);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReadOnlyFlag1
     */
    public void setReadOnlyFlag1(Number value) {
        setAttributeInternal(READONLYFLAG1, value);
    }

    /**Gets the attribute value for the calculated attribute ReadOnlyFlag
     */
    public Boolean getReadOnlyFlag() {
        return (Boolean)getAttributeInternal(READONLYFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReadOnlyFlag
     */
    public void setReadOnlyFlag(Boolean value) {
        setAttributeInternal(READONLYFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute ReadOnlyFlag1_1
     */
    public Number getReadOnlyFlag1_1() {
        return (Number)getAttributeInternal(READONLYFLAG1_1);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReadOnlyFlag1_1
     */
    public void setReadOnlyFlag1_1(Number value) {
        setAttributeInternal(READONLYFLAG1_1, value);
    }

    /**Gets the attribute value for the calculated attribute RowSeq
     */
    public Number getRowSeq() {
        return (Number)getAttributeInternal(ROWSEQ);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute RowSeq
     */
    public void setRowSeq(Number value) {
        setAttributeInternal(ROWSEQ, value);
    }
}
