package cux.oracle.apps.per.bonus.advanceawards.server;

import oracle.apps.fnd.framework.OAAttrValException;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxBonusOfficePersonDistEOImpl extends OAEntityImpl {
    public static final int PERSONDISTRIBUTIONID = 0;
    public static final int LOTID = 1;
    public static final int PERSONID = 2;
    public static final int TYPEID = 3;
    public static final int DISTRIBUTIONDEPID = 4;
    public static final int DISTRIBUTIONDEPNAME = 5;
    public static final int DEPID = 6;
    public static final int DEPNAME = 7;
    public static final int DISTRIBUTIONSTATUS = 8;
    public static final int SUBMITFLG = 9;
    public static final int IMPORTFLAG = 10;
    public static final int IMPORTSTATUS = 11;
    public static final int IMPORTERROR = 12;
    public static final int DISTRIBUTIONDATE = 13;
    public static final int DISTRIBUTIONAMOUNT = 14;
    public static final int PROJECTID = 15;
    public static final int NOTE = 16;
    public static final int APPROVEDNOTE = 17;
    public static final int LASTUPDATEDATE = 18;
    public static final int LASTUPDATEDBY = 19;
    public static final int CREATIONDATE = 20;
    public static final int CREATEDBY = 21;
    public static final int ATTRIBUTE1 = 22;
    public static final int ATTRIBUTE2 = 23;
    public static final int ATTRIBUTE3 = 24;
    public static final int ATTRIBUTE4 = 25;
    public static final int ATTRIBUTE5 = 26;
    public static final int ATTRIBUTE6 = 27;
    public static final int ATTRIBUTE7 = 28;
    public static final int ATTRIBUTE8 = 29;
    public static final int ATTRIBUTE9 = 30;
    public static final int ATTRIBUTE10 = 31;
    public static final int ATTRIBUTE11 = 32;
    public static final int ATTRIBUTE12 = 33;
    public static final int ATTRIBUTE13 = 34;
    public static final int ATTRIBUTE14 = 35;
    public static final int ATTRIBUTE15 = 36;
    public static final int ORGANIZATIONID = 37;
    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public CuxBonusOfficePersonDistEOImpl() {
    }

    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.per.bonus.advanceawards.server.CuxBonusOfficePersonDistEO");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for PersonDistributionId, using the alias name PersonDistributionId
     */
    public Number getPersonDistributionId() {
        return (Number)getAttributeInternal(PERSONDISTRIBUTIONID);
    }

    /**Sets <code>value</code> as the attribute value for PersonDistributionId
     */
    public void setPersonDistributionId(Number value) {
        setAttributeInternal(PERSONDISTRIBUTIONID, value);
    }

    /**Gets the attribute value for LotId, using the alias name LotId
     */
    public Number getLotId() {
        return (Number)getAttributeInternal(LOTID);
    }

    /**Sets <code>value</code> as the attribute value for LotId
     */
    public void setLotId(Number value) {
        setAttributeInternal(LOTID, value);
    }

    /**Gets the attribute value for PersonId, using the alias name PersonId
     */
    public Number getPersonId() {
        return (Number)getAttributeInternal(PERSONID);
    }

    /**Sets <code>value</code> as the attribute value for PersonId
     */
    public void setPersonId(Number value) {
        setAttributeInternal(PERSONID, value);
    }

    /**Gets the attribute value for TypeId, using the alias name TypeId
     */
    public Number getTypeId() {
        return (Number)getAttributeInternal(TYPEID);
    }

    /**Sets <code>value</code> as the attribute value for TypeId
     */
    public void setTypeId(Number value) {
        setAttributeInternal(TYPEID, value);
    }

    /**Gets the attribute value for DistributionDepId, using the alias name DistributionDepId
     */
    public Number getDistributionDepId() {
        return (Number)getAttributeInternal(DISTRIBUTIONDEPID);
    }

    /**Sets <code>value</code> as the attribute value for DistributionDepId
     */
    public void setDistributionDepId(Number value) {
        setAttributeInternal(DISTRIBUTIONDEPID, value);
    }

    /**Gets the attribute value for DistributiondepName, using the alias name DistributiondepName
     */
    public String getDistributiondepName() {
        return (String)getAttributeInternal(DISTRIBUTIONDEPNAME);
    }

    /**Sets <code>value</code> as the attribute value for DistributiondepName
     */
    public void setDistributiondepName(String value) {
        setAttributeInternal(DISTRIBUTIONDEPNAME, value);
    }

    /**Gets the attribute value for DepId, using the alias name DepId
     */
    public Number getDepId() {
        return (Number)getAttributeInternal(DEPID);
    }

    /**Sets <code>value</code> as the attribute value for DepId
     */
    public void setDepId(Number value) {
        setAttributeInternal(DEPID, value);
    }

    /**Gets the attribute value for DepName, using the alias name DepName
     */
    public String getDepName() {
        return (String)getAttributeInternal(DEPNAME);
    }

    /**Sets <code>value</code> as the attribute value for DepName
     */
    public void setDepName(String value) {
        setAttributeInternal(DEPNAME, value);
    }

    /**Gets the attribute value for DistributionStatus, using the alias name DistributionStatus
     */
    public String getDistributionStatus() {
        return (String)getAttributeInternal(DISTRIBUTIONSTATUS);
    }

    /**Sets <code>value</code> as the attribute value for DistributionStatus
     */
    public void setDistributionStatus(String value) {
        setAttributeInternal(DISTRIBUTIONSTATUS, value);
    }

    /**Gets the attribute value for SubmitFlg, using the alias name SubmitFlg
     */
    public String getSubmitFlg() {
        return (String)getAttributeInternal(SUBMITFLG);
    }

    /**Sets <code>value</code> as the attribute value for SubmitFlg
     */
    public void setSubmitFlg(String value) {
        setAttributeInternal(SUBMITFLG, value);
    }

    /**Gets the attribute value for ImportFlag, using the alias name ImportFlag
     */
    public String getImportFlag() {
        return (String)getAttributeInternal(IMPORTFLAG);
    }

    /**Sets <code>value</code> as the attribute value for ImportFlag
     */
    public void setImportFlag(String value) {
        setAttributeInternal(IMPORTFLAG, value);
    }

    /**Gets the attribute value for ImportStatus, using the alias name ImportStatus
     */
    public String getImportStatus() {
        return (String)getAttributeInternal(IMPORTSTATUS);
    }

    /**Sets <code>value</code> as the attribute value for ImportStatus
     */
    public void setImportStatus(String value) {
        setAttributeInternal(IMPORTSTATUS, value);
    }

    /**Gets the attribute value for ImportError, using the alias name ImportError
     */
    public String getImportError() {
        return (String)getAttributeInternal(IMPORTERROR);
    }

    /**Sets <code>value</code> as the attribute value for ImportError
     */
    public void setImportError(String value) {
        setAttributeInternal(IMPORTERROR, value);
    }

    /**Gets the attribute value for DistributionDate, using the alias name DistributionDate
     */
    public Date getDistributionDate() {
        return (Date)getAttributeInternal(DISTRIBUTIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for DistributionDate
     */
    public void setDistributionDate(Date value) {
        setAttributeInternal(DISTRIBUTIONDATE, value);
    }

    /**Gets the attribute value for DistributionAmount, using the alias name DistributionAmount
     */
    public Number getDistributionAmount() {
        return (Number)getAttributeInternal(DISTRIBUTIONAMOUNT);
    }

    /**Sets <code>value</code> as the attribute value for DistributionAmount
     */
    public void setDistributionAmount(Number value) {
        setAttributeInternal(DISTRIBUTIONAMOUNT, value);
        if (value != null) {
            if (value.compareTo(0) < 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), 
                                           "DistributionAmount", value, "FND", 
                                           "预分配金额必须大于0");
            }
        }
    }

    /**Gets the attribute value for ProjectId, using the alias name ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**Sets <code>value</code> as the attribute value for ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**Gets the attribute value for Note, using the alias name Note
     */
    public String getNote() {
        return (String)getAttributeInternal(NOTE);
    }

    /**Sets <code>value</code> as the attribute value for Note
     */
    public void setNote(String value) {
        setAttributeInternal(NOTE, value);
    }

    /**Gets the attribute value for ApprovedNote, using the alias name ApprovedNote
     */
    public String getApprovedNote() {
        return (String)getAttributeInternal(APPROVEDNOTE);
    }

    /**Sets <code>value</code> as the attribute value for ApprovedNote
     */
    public void setApprovedNote(String value) {
        setAttributeInternal(APPROVEDNOTE, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for Attribute6, using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for Attribute7, using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for Attribute8, using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for Attribute9, using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for Attribute10, using the alias name Attribute10
     */
    public Number getAttribute10() {
        return (Number)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for Attribute10
     */
    public void setAttribute10(Number value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for Attribute11, using the alias name Attribute11
     */
    public Number getAttribute11() {
        return (Number)getAttributeInternal(ATTRIBUTE11);
    }

    /**Sets <code>value</code> as the attribute value for Attribute11
     */
    public void setAttribute11(Number value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**Gets the attribute value for Attribute12, using the alias name Attribute12
     */
    public Number getAttribute12() {
        return (Number)getAttributeInternal(ATTRIBUTE12);
    }

    /**Sets <code>value</code> as the attribute value for Attribute12
     */
    public void setAttribute12(Number value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**Gets the attribute value for Attribute13, using the alias name Attribute13
     */
    public Number getAttribute13() {
        return (Number)getAttributeInternal(ATTRIBUTE13);
    }

    /**Sets <code>value</code> as the attribute value for Attribute13
     */
    public void setAttribute13(Number value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**Gets the attribute value for Attribute14, using the alias name Attribute14
     */
    public Date getAttribute14() {
        return (Date)getAttributeInternal(ATTRIBUTE14);
    }

    /**Sets <code>value</code> as the attribute value for Attribute14
     */
    public void setAttribute14(Date value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**Gets the attribute value for Attribute15, using the alias name Attribute15
     */
    public Date getAttribute15() {
        return (Date)getAttributeInternal(ATTRIBUTE15);
    }

    /**Sets <code>value</code> as the attribute value for Attribute15
     */
    public void setAttribute15(Date value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**Gets the attribute value for OrganizationId, using the alias name OrganizationId
     */
    public Number getOrganizationId() {
        return (Number)getAttributeInternal(ORGANIZATIONID);
    }

    /**Sets <code>value</code> as the attribute value for OrganizationId
     */
    public void setOrganizationId(Number value) {
        setAttributeInternal(ORGANIZATIONID, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PERSONDISTRIBUTIONID:
            return getPersonDistributionId();
        case LOTID:
            return getLotId();
        case PERSONID:
            return getPersonId();
        case TYPEID:
            return getTypeId();
        case DISTRIBUTIONDEPID:
            return getDistributionDepId();
        case DISTRIBUTIONDEPNAME:
            return getDistributiondepName();
        case DEPID:
            return getDepId();
        case DEPNAME:
            return getDepName();
        case DISTRIBUTIONSTATUS:
            return getDistributionStatus();
        case SUBMITFLG:
            return getSubmitFlg();
        case IMPORTFLAG:
            return getImportFlag();
        case IMPORTSTATUS:
            return getImportStatus();
        case IMPORTERROR:
            return getImportError();
        case DISTRIBUTIONDATE:
            return getDistributionDate();
        case DISTRIBUTIONAMOUNT:
            return getDistributionAmount();
        case PROJECTID:
            return getProjectId();
        case NOTE:
            return getNote();
        case APPROVEDNOTE:
            return getApprovedNote();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case ATTRIBUTE10:
            return getAttribute10();
        case ATTRIBUTE11:
            return getAttribute11();
        case ATTRIBUTE12:
            return getAttribute12();
        case ATTRIBUTE13:
            return getAttribute13();
        case ATTRIBUTE14:
            return getAttribute14();
        case ATTRIBUTE15:
            return getAttribute15();
        case ORGANIZATIONID:
            return getOrganizationId();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PERSONDISTRIBUTIONID:
            setPersonDistributionId((Number)value);
            return;
        case LOTID:
            setLotId((Number)value);
            return;
        case PERSONID:
            setPersonId((Number)value);
            return;
        case TYPEID:
            setTypeId((Number)value);
            return;
        case DISTRIBUTIONDEPID:
            setDistributionDepId((Number)value);
            return;
        case DISTRIBUTIONDEPNAME:
            setDistributiondepName((String)value);
            return;
        case DEPID:
            setDepId((Number)value);
            return;
        case DEPNAME:
            setDepName((String)value);
            return;
        case DISTRIBUTIONSTATUS:
            setDistributionStatus((String)value);
            return;
        case SUBMITFLG:
            setSubmitFlg((String)value);
            return;
        case IMPORTFLAG:
            setImportFlag((String)value);
            return;
        case IMPORTSTATUS:
            setImportStatus((String)value);
            return;
        case IMPORTERROR:
            setImportError((String)value);
            return;
        case DISTRIBUTIONDATE:
            setDistributionDate((Date)value);
            return;
        case DISTRIBUTIONAMOUNT:
            setDistributionAmount((Number)value);
            return;
        case PROJECTID:
            setProjectId((Number)value);
            return;
        case NOTE:
            setNote((String)value);
            return;
        case APPROVEDNOTE:
            setApprovedNote((String)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((Number)value);
            return;
        case ATTRIBUTE11:
            setAttribute11((Number)value);
            return;
        case ATTRIBUTE12:
            setAttribute12((Number)value);
            return;
        case ATTRIBUTE13:
            setAttribute13((Number)value);
            return;
        case ATTRIBUTE14:
            setAttribute14((Date)value);
            return;
        case ATTRIBUTE15:
            setAttribute15((Date)value);
            return;
        case ORGANIZATIONID:
            setOrganizationId((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number personDistributionId) {
        return new Key(new Object[] { personDistributionId });
    }

    public void setLastUpdateLogin(Number number) {
    }


}
