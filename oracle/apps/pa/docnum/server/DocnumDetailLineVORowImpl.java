package cux.oracle.apps.pa.docnum.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DocnumDetailLineVORowImpl extends OAViewRowImpl {
    public static final int REQLINEID = 0;
    public static final int DOCNUMREQID = 1;
    public static final int SEQNUM = 2;
    public static final int DOCNUM = 3;
    public static final int DOCNAME = 4;
    public static final int DOCTYPENAME = 5;
    public static final int ELEMENTNUMBER = 6;
    public static final int DESIGNERNAME = 7;
    public static final int CHECKERNAME = 8;
    public static final int VERIFIERNAME = 9;
    public static final int AUTHORIZERNAME = 10;
    public static final int RELEASEDEPTNAME = 11;
    public static final int RELEASESPECIALTYNAME = 12;
    public static final int LINEDESC = 13;
    public static final int READONLYFLAG = 14;

    /**This is the default constructor (do not remove)
     */
    public DocnumDetailLineVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute DocnumReqId
     */
    public Number getDocnumReqId() {
        return (Number)getAttributeInternal(DOCNUMREQID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocnumReqId
     */
    public void setDocnumReqId(Number value) {
        setAttributeInternal(DOCNUMREQID, value);
    }

    /**Gets the attribute value for the calculated attribute DocNum
     */
    public String getDocNum() {
        return (String)getAttributeInternal(DOCNUM);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocNum
     */
    public void setDocNum(String value) {
        setAttributeInternal(DOCNUM, value);
    }

    /**Gets the attribute value for the calculated attribute DocName
     */
    public String getDocName() {
        return (String)getAttributeInternal(DOCNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocName
     */
    public void setDocName(String value) {
        setAttributeInternal(DOCNAME, value);
    }

    /**Gets the attribute value for the calculated attribute DocTypeName
     */
    public String getDocTypeName() {
        return (String)getAttributeInternal(DOCTYPENAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocTypeName
     */
    public void setDocTypeName(String value) {
        setAttributeInternal(DOCTYPENAME, value);
    }

    /**Gets the attribute value for the calculated attribute ElementNumber
     */
    public String getElementNumber() {
        return (String)getAttributeInternal(ELEMENTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ElementNumber
     */
    public void setElementNumber(String value) {
        setAttributeInternal(ELEMENTNUMBER, value);
    }

    /**Gets the attribute value for the calculated attribute DesignerName
     */
    public String getDesignerName() {
        return (String)getAttributeInternal(DESIGNERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DesignerName
     */
    public void setDesignerName(String value) {
        setAttributeInternal(DESIGNERNAME, value);
    }

    /**Gets the attribute value for the calculated attribute CheckerName
     */
    public String getCheckerName() {
        return (String)getAttributeInternal(CHECKERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CheckerName
     */
    public void setCheckerName(String value) {
        setAttributeInternal(CHECKERNAME, value);
    }

    /**Gets the attribute value for the calculated attribute VerifierName
     */
    public String getVerifierName() {
        return (String)getAttributeInternal(VERIFIERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VerifierName
     */
    public void setVerifierName(String value) {
        setAttributeInternal(VERIFIERNAME, value);
    }

    /**Gets the attribute value for the calculated attribute AuthorizerName
     */
    public String getAuthorizerName() {
        return (String)getAttributeInternal(AUTHORIZERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute AuthorizerName
     */
    public void setAuthorizerName(String value) {
        setAttributeInternal(AUTHORIZERNAME, value);
    }

    /**Gets the attribute value for the calculated attribute ReleaseDeptName
     */
    public String getReleaseDeptName() {
        return (String)getAttributeInternal(RELEASEDEPTNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReleaseDeptName
     */
    public void setReleaseDeptName(String value) {
        setAttributeInternal(RELEASEDEPTNAME, value);
    }

    /**Gets the attribute value for the calculated attribute ReleaseSpecialtyName
     */
    public String getReleaseSpecialtyName() {
        return (String)getAttributeInternal(RELEASESPECIALTYNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReleaseSpecialtyName
     */
    public void setReleaseSpecialtyName(String value) {
        setAttributeInternal(RELEASESPECIALTYNAME, value);
    }

    /**Gets the attribute value for the calculated attribute LineDesc
     */
    public String getLineDesc() {
        return (String)getAttributeInternal(LINEDESC);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute LineDesc
     */
    public void setLineDesc(String value) {
        setAttributeInternal(LINEDESC, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case REQLINEID:
            return getReqLineId();
        case DOCNUMREQID:
            return getDocnumReqId();
        case SEQNUM:
            return getSeqNum();
        case DOCNUM:
            return getDocNum();
        case DOCNAME:
            return getDocName();
        case DOCTYPENAME:
            return getDocTypeName();
        case ELEMENTNUMBER:
            return getElementNumber();
        case DESIGNERNAME:
            return getDesignerName();
        case CHECKERNAME:
            return getCheckerName();
        case VERIFIERNAME:
            return getVerifierName();
        case AUTHORIZERNAME:
            return getAuthorizerName();
        case RELEASEDEPTNAME:
            return getReleaseDeptName();
        case RELEASESPECIALTYNAME:
            return getReleaseSpecialtyName();
        case LINEDESC:
            return getLineDesc();
        case READONLYFLAG:
            return getReadonlyFlag();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case REQLINEID:
            setReqLineId((Number)value);
            return;
        case DOCNUMREQID:
            setDocnumReqId((Number)value);
            return;
        case SEQNUM:
            setSeqNum((Number)value);
            return;
        case DOCNUM:
            setDocNum((String)value);
            return;
        case DOCNAME:
            setDocName((String)value);
            return;
        case DOCTYPENAME:
            setDocTypeName((String)value);
            return;
        case ELEMENTNUMBER:
            setElementNumber((String)value);
            return;
        case DESIGNERNAME:
            setDesignerName((String)value);
            return;
        case CHECKERNAME:
            setCheckerName((String)value);
            return;
        case VERIFIERNAME:
            setVerifierName((String)value);
            return;
        case AUTHORIZERNAME:
            setAuthorizerName((String)value);
            return;
        case RELEASEDEPTNAME:
            setReleaseDeptName((String)value);
            return;
        case RELEASESPECIALTYNAME:
            setReleaseSpecialtyName((String)value);
            return;
        case LINEDESC:
            setLineDesc((String)value);
            return;
        case READONLYFLAG:
            setReadonlyFlag((Boolean)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute SeqNum
     */
    public Number getSeqNum() {
        return (Number)getAttributeInternal(SEQNUM);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SeqNum
     */
    public void setSeqNum(Number value) {
        setAttributeInternal(SEQNUM, value);
    }


    /**Gets the attribute value for the calculated attribute ReadonlyFlag
     */
    public Boolean getReadonlyFlag() {
        return (Boolean)getAttributeInternal(READONLYFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReadonlyFlag
     */
    public void setReadonlyFlag(Boolean value) {
        setAttributeInternal(READONLYFLAG, value);
    }

    /**Gets DocnumReqLineEO entity object.
     */
    public DocnumReqLineEOImpl getDocnumReqLineEO() {
        return (DocnumReqLineEOImpl)getEntity(0);
    }

    /**Gets the attribute value for REQ_LINE_ID using the alias name ReqLineId
     */
    public Number getReqLineId() {
        return (Number)getAttributeInternal(REQLINEID);
    }

    /**Sets <code>value</code> as attribute value for REQ_LINE_ID using the alias name ReqLineId
     */
    public void setReqLineId(Number value) {
        setAttributeInternal(REQLINEID, value);
    }
}
