package cux.oracle.apps.pa.source.server;

import java.text.SimpleDateFormat;

import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.jbo.Row;
import oracle.jbo.domain.Date;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class HrSourceAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public HrSourceAMImpl() {
    }

    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) { /* package name */
        /* Configuration Name */launchTester("cux.oracle.apps.pa.source.server", 
                                             "HrSourceAMLocal");
    }

    /**Container's getter for DeptVO1
     */
    public DeptVOImpl getDeptVO1() {
        return (DeptVOImpl)findViewObject("DeptVO1");
    }

    /**Container's getter for PerJobVO1
     */
    public PerJobVOImpl getPerJobVO1() {
        return (PerJobVOImpl)findViewObject("PerJobVO1");
    }

    /**Container's getter for HrSourceVO1
     */
    public HrSourceVOImpl getHrSourceVO1() {
        return (HrSourceVOImpl)findViewObject("HrSourceVO1");
    }

    public void doSearch() {
        HrSourceVOImpl sourceVO = this.getHrSourceVO1();
        HrSourceSearchPVOImpl searchPVO = this.getHrSourceSearchPVO1();
        searchPVO.setWhereClause(null);
        searchPVO.setWhereClauseParams(null);
        HrSourceSearchPVORowImpl searchRow = 
            (HrSourceSearchPVORowImpl)searchPVO.getCurrentRow();
        sourceVO.setWhereClause("1=1");
        if (searchRow.getJobId() != null) {
            sourceVO.addWhereClause(" AND job_id = " + 
                                    searchRow.getJobId().intValue());
        }
        if (searchRow.getDeptId() != null) {
            sourceVO.addWhereClause(" AND organization_id = " + 
                                    searchRow.getDeptId().intValue());
        }
        if (searchRow.getPersonId() != null) {
            sourceVO.addWhereClause(" AND person_id = " + 
                                    searchRow.getPersonId().intValue());
        }
        if (searchRow.getDateFrom() != null) {
            sourceVO.addWhereClause(" AND hrsource_date >= TO_DATE('" + 
                                    dateToStr(searchRow.getDateFrom()) + 
                                    "','yyyy-mm-dd')");
        }
        if (searchRow.getDateTo() != null) {
            sourceVO.addWhereClause(" AND hrsource_date <= TO_DATE('" + 
                                    dateToStr(searchRow.getDateTo()) + 
                                    "','yyyy-mm-dd')");
        }
        if (searchRow.getzj() != null) {
            sourceVO.addWhereClause("AND xmgl_zj = '" + searchRow.getzj() + 
                                    "'");
        }
        if (searchRow.getgw() != null) {
            sourceVO.addWhereClause("AND xmgl_gw = '" + searchRow.getgw() + 
                                    "'");
        }
        String hrSourceType = 
            (String)this.getOADBTransaction().getValue("HrSourceType");
        if (hrSourceType != null && !"".equals(hrSourceType)) {
            sourceVO.addWhereClause(" AND hrsource_type = '" + hrSourceType + 
                                    "'");
        }
        sourceVO.setMaxFetchSize(-1);
        sourceVO.executeQuery();
        //System.out.println(sourceVO.isPreparedForExecution());
    }

    /**Container's getter for HrSourceDetailVO1
     */
    public HrSourceDetailVOImpl getHrSourceDetailVO1() {
        return (HrSourceDetailVOImpl)findViewObject("HrSourceDetailVO1");
    }

    public void initDetail(String personId) {
        HrSourceDetailVOImpl detailVO = this.getHrSourceDetailVO1();
        detailVO.setWhereClause(null);
        detailVO.setMaxFetchSize(-1);
        detailVO.setWhereClause("person_id = " + personId);
        detailVO.executeQuery();
    }

    /**Container's getter for HrSourceSearchPVO1
     */
    public HrSourceSearchPVOImpl getHrSourceSearchPVO1() {
        return (HrSourceSearchPVOImpl)findViewObject("HrSourceSearchPVO1");
    }

    public void initSearchPVO() {
        HrSourceSearchPVOImpl searchPVO = this.getHrSourceSearchPVO1();
        searchPVO.setMaxFetchSize(0);
        searchPVO.executeQuery();
        if (searchPVO.getFetchedRowCount() == 0) {
            Row row = searchPVO.createRow();
            row.setNewRowState(Row.STATUS_NEW);
            searchPVO.insertRow(row);
        }
    }

    public String dateToStr(Date dateDate) {
        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        String dateString = formatter.format(dateDate.dateValue());
        return dateString;
    }

    /**Container's getter for HrSourceHistoryVO1
     */
    public HrSourceHistoryVOImpl getHrSourceHistoryVO1() {
        return (HrSourceHistoryVOImpl)findViewObject("HrSourceHistoryVO1");
    }

    public void initHistory(String personId, String hrSourceType) {
        HrSourceHistoryVOImpl historyVO = this.getHrSourceHistoryVO1();
        historyVO.setMaxFetchSize(-1);
        historyVO.setWhereClause(null);
        historyVO.setWhereClause("person_id = " + personId + 
                                 " AND hrsource_type = '" + hrSourceType + 
                                 "'");
        historyVO.executeQuery();
    }

    /**Container's getter for HrSourceGWVO1
     */
    public HrSourceGWVOImpl getHrSourceGWVO1() {
        return (HrSourceGWVOImpl)findViewObject("HrSourceGWVO1");
    }

    /**Container's getter for HrSourceZJVO1
     */
    public HrSourceZJVOImpl getHrSourceZJVO1() {
        return (HrSourceZJVOImpl)findViewObject("HrSourceZJVO1");
    }
}
