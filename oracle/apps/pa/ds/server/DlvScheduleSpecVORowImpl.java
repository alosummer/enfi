package cux.oracle.apps.pa.ds.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DlvScheduleSpecVORowImpl extends OAViewRowImpl {
    public static final int SELECTEDFLAG = 0;
    public static final int SCHEDULESPECID = 1;
    public static final int PROJECTID = 2;
    public static final int TASKID = 3;
    public static final int RELEASESPECIALTY = 4;
    public static final int RELEASESPECIALTYNAME = 5;
    public static final int SPECIALTYMANAGER = 6;
    public static final int SPECIALTYMANAGERNAME = 7;
    public static final int DEPTNAME = 8;
    public static final int UPDATEALLEWED = 9;

    /**This is the default constructor (do not remove)
     */
    public DlvScheduleSpecVORowImpl() {
    }

    /**Gets DlvScheduleSpecEO entity object.
     */
    public DlvScheduleSpecEOImpl getDlvScheduleSpecEO() {
        return (DlvScheduleSpecEOImpl)getEntity(0);
    }

    /**Gets the attribute value for SCHEDULE_SPEC_ID using the alias name ScheduleSpecId
     */
    public Number getScheduleSpecId() {
        return (Number)getAttributeInternal(SCHEDULESPECID);
    }

    /**Sets <code>value</code> as attribute value for SCHEDULE_SPEC_ID using the alias name ScheduleSpecId
     */
    public void setScheduleSpecId(Number value) {
        setAttributeInternal(SCHEDULESPECID, value);
    }

    /**Gets the attribute value for PROJECT_ID using the alias name ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**Gets the attribute value for TASK_ID using the alias name TaskId
     */
    public Number getTaskId() {
        return (Number)getAttributeInternal(TASKID);
    }

    /**Sets <code>value</code> as attribute value for TASK_ID using the alias name TaskId
     */
    public void setTaskId(Number value) {
        setAttributeInternal(TASKID, value);
    }

    /**Gets the attribute value for RELEASE_SPECIALTY using the alias name ReleaseSpecialty
     */
    public String getReleaseSpecialty() {
        return (String)getAttributeInternal(RELEASESPECIALTY);
    }

    /**Sets <code>value</code> as attribute value for RELEASE_SPECIALTY using the alias name ReleaseSpecialty
     */
    public void setReleaseSpecialty(String value) {
        setAttributeInternal(RELEASESPECIALTY, value);
    }

    /**Gets the attribute value for SPECIALTY_MANAGER using the alias name SpecialtyManager
     */
    public Number getSpecialtyManager() {
        return (Number)getAttributeInternal(SPECIALTYMANAGER);
    }

    /**Sets <code>value</code> as attribute value for SPECIALTY_MANAGER using the alias name SpecialtyManager
     */
    public void setSpecialtyManager(Number value) {
        setAttributeInternal(SPECIALTYMANAGER, value);
    }


    /**Gets the attribute value for the calculated attribute SpecialtyManagerName
     */
    public String getSpecialtyManagerName() {
        return (String)getAttributeInternal(SPECIALTYMANAGERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SpecialtyManagerName
     */
    public void setSpecialtyManagerName(String value) {
        setAttributeInternal(SPECIALTYMANAGERNAME, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SELECTEDFLAG:
            return getSelectedFlag();
        case SCHEDULESPECID:
            return getScheduleSpecId();
        case PROJECTID:
            return getProjectId();
        case TASKID:
            return getTaskId();
        case RELEASESPECIALTY:
            return getReleaseSpecialty();
        case RELEASESPECIALTYNAME:
            return getReleaseSpecialtyName();
        case SPECIALTYMANAGER:
            return getSpecialtyManager();
        case SPECIALTYMANAGERNAME:
            return getSpecialtyManagerName();
        case DEPTNAME:
            return getDeptName();
        case UPDATEALLEWED:
            return getUpdateAllewed();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SELECTEDFLAG:
            setSelectedFlag((String)value);
            return;
        case SCHEDULESPECID:
            setScheduleSpecId((Number)value);
            return;
        case PROJECTID:
            setProjectId((Number)value);
            return;
        case TASKID:
            setTaskId((Number)value);
            return;
        case RELEASESPECIALTY:
            setReleaseSpecialty((String)value);
            return;
        case RELEASESPECIALTYNAME:
            setReleaseSpecialtyName((String)value);
            return;
        case SPECIALTYMANAGER:
            setSpecialtyManager((Number)value);
            return;
        case SPECIALTYMANAGERNAME:
            setSpecialtyManagerName((String)value);
            return;
        case DEPTNAME:
            setDeptName((String)value);
            return;
        case UPDATEALLEWED:
            setUpdateAllewed((Boolean)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute SelectedFlag
     */
    public String getSelectedFlag() {
        return (String)getAttributeInternal(SELECTEDFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SelectedFlag
     */
    public void setSelectedFlag(String value) {
        setAttributeInternal(SELECTEDFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute UpdateAllewed
     */
    public Boolean getUpdateAllewed() {
        return (Boolean)getAttributeInternal(UPDATEALLEWED);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute UpdateAllewed
     */
    public void setUpdateAllewed(Boolean value) {
        setAttributeInternal(UPDATEALLEWED, value);
    }

    /**Gets the attribute value for the calculated attribute DeptName
     */
    public String getDeptName() {
        return (String)getAttributeInternal(DEPTNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeptName
     */
    public void setDeptName(String value) {
        setAttributeInternal(DEPTNAME, value);
    }

    /**Gets the attribute value for the calculated attribute ReleaseSpecialtyName
     */
    public String getReleaseSpecialtyName() {
        return (String)getAttributeInternal(RELEASESPECIALTYNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReleaseSpecialtyName
     */
    public void setReleaseSpecialtyName(String value) {
        setAttributeInternal(RELEASESPECIALTYNAME, value);
    }
}
