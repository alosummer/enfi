package cux.oracle.apps.pa.ds.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DlvScheduleVORowImpl extends OAViewRowImpl {
    public static final int SELECTEDFLAG = 0;
    public static final int SCHEDULEID = 1;
    public static final int PROJECTID = 2;
    public static final int TASKID = 3;
    public static final int APPROVESTATUS = 4;
    public static final int APPROVESTATUSNAME = 5;
    public static final int NODETYPE = 6;
    public static final int TASKNAME = 7;
    public static final int DESIGNNODE = 8;
    public static final int DOCNAME = 9;
    public static final int SCHEDULECOMPLETIONDATE = 10;
    public static final int ACTUALRELEASEDATE = 11;
    public static final int ACTUALCOMPLETIONDATE = 12;
    public static final int DYNAMICCOMPLETIONDATE = 13;
    public static final int RELEASEDEPT = 14;
    public static final int RELEASESPECIALTY = 15;
    public static final int ACCEPTSPECIALTY = 16;
    public static final int SCHEDULEDESC = 17;
    public static final int ATTRIBUTE1 = 18;
    public static final int ATTRIBUTE2 = 19;
    public static final int ATTRIBUTE3 = 20;
    public static final int ATTRIBUTE4 = 21;
    public static final int ATTRIBUTE5 = 22;
    public static final int ATTRIBUTE6 = 23;
    public static final int ATTRIBUTE7 = 24;
    public static final int ATTRIBUTE8 = 25;
    public static final int ATTRIBUTE9 = 26;
    public static final int CUXDLVID = 27;
    public static final int UPDATEALLEWED = 28;

    /**This is the default constructor (do not remove)
     */
    public DlvScheduleVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute ScheduleId
     */
    public Number getScheduleId() {
        return (Number)getAttributeInternal(SCHEDULEID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ScheduleId
     */
    public void setScheduleId(Number value) {
        setAttributeInternal(SCHEDULEID, value);
    }

    /**Gets the attribute value for the calculated attribute ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**Gets the attribute value for the calculated attribute TaskId
     */
    public Number getTaskId() {
        return (Number)getAttributeInternal(TASKID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TaskId
     */
    public void setTaskId(Number value) {
        setAttributeInternal(TASKID, value);
    }

    /**Gets the attribute value for the calculated attribute ApproveStatus
     */
    public String getApproveStatus() {
        return (String)getAttributeInternal(APPROVESTATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ApproveStatus
     */
    public void setApproveStatus(String value) {
        setAttributeInternal(APPROVESTATUS, value);
    }

    /**Gets the attribute value for the calculated attribute ApproveStatusName
     */
    public String getApproveStatusName() {
        return (String)getAttributeInternal(APPROVESTATUSNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ApproveStatusName
     */
    public void setApproveStatusName(String value) {
        setAttributeInternal(APPROVESTATUSNAME, value);
    }

    /**Gets the attribute value for the calculated attribute NodeType
     */
    public String getNodeType() {
        return (String)getAttributeInternal(NODETYPE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute NodeType
     */
    public void setNodeType(String value) {
        setAttributeInternal(NODETYPE, value);
    }

    /**Gets the attribute value for the calculated attribute TaskName
     */
    public String getTaskName() {
        return (String)getAttributeInternal(TASKNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TaskName
     */
    public void setTaskName(String value) {
        setAttributeInternal(TASKNAME, value);
    }

    /**Gets the attribute value for the calculated attribute DesignNode
     */
    public String getDesignNode() {
        return (String)getAttributeInternal(DESIGNNODE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DesignNode
     */
    public void setDesignNode(String value) {
        setAttributeInternal(DESIGNNODE, value);
    }

    /**Gets the attribute value for the calculated attribute DocName
     */
    public String getDocName() {
        return (String)getAttributeInternal(DOCNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DocName
     */
    public void setDocName(String value) {
        setAttributeInternal(DOCNAME, value);
    }

    /**Gets the attribute value for the calculated attribute ScheduleCompletionDate
     */
    public Date getScheduleCompletionDate() {
        return (Date)getAttributeInternal(SCHEDULECOMPLETIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ScheduleCompletionDate
     */
    public void setScheduleCompletionDate(Date value) {
        setAttributeInternal(SCHEDULECOMPLETIONDATE, value);
    }

    /**Gets the attribute value for the calculated attribute ActualReleaseDate
     */
    public Date getActualReleaseDate() {
        return (Date)getAttributeInternal(ACTUALRELEASEDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ActualReleaseDate
     */
    public void setActualReleaseDate(Date value) {
        setAttributeInternal(ACTUALRELEASEDATE, value);
    }

    /**Gets the attribute value for the calculated attribute ActualCompletionDate
     */
    public Date getActualCompletionDate() {
        return (Date)getAttributeInternal(ACTUALCOMPLETIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ActualCompletionDate
     */
    public void setActualCompletionDate(Date value) {
        setAttributeInternal(ACTUALCOMPLETIONDATE, value);
    }

    /**Gets the attribute value for the calculated attribute DynamicCompletionDate
     */
    public Date getDynamicCompletionDate() {
        return (Date)getAttributeInternal(DYNAMICCOMPLETIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DynamicCompletionDate
     */
    public void setDynamicCompletionDate(Date value) {
        setAttributeInternal(DYNAMICCOMPLETIONDATE, value);
    }

    /**Gets the attribute value for the calculated attribute ReleaseDept
     */
    public String getReleaseDept() {
        return (String)getAttributeInternal(RELEASEDEPT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReleaseDept
     */
    public void setReleaseDept(String value) {
        setAttributeInternal(RELEASEDEPT, value);
    }

    /**Gets the attribute value for the calculated attribute ReleaseSpecialty
     */
    public String getReleaseSpecialty() {
        return (String)getAttributeInternal(RELEASESPECIALTY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ReleaseSpecialty
     */
    public void setReleaseSpecialty(String value) {
        setAttributeInternal(RELEASESPECIALTY, value);
    }

    /**Gets the attribute value for the calculated attribute AcceptSpecialty
     */
    public String getAcceptSpecialty() {
        return (String)getAttributeInternal(ACCEPTSPECIALTY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute AcceptSpecialty
     */
    public void setAcceptSpecialty(String value) {
        setAttributeInternal(ACCEPTSPECIALTY, value);
    }

    /**Gets the attribute value for the calculated attribute ScheduleDesc
     */
    public String getScheduleDesc() {
        return (String)getAttributeInternal(SCHEDULEDESC);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ScheduleDesc
     */
    public void setScheduleDesc(String value) {
        setAttributeInternal(SCHEDULEDESC, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SELECTEDFLAG:
            return getSelectedFlag();
        case SCHEDULEID:
            return getScheduleId();
        case PROJECTID:
            return getProjectId();
        case TASKID:
            return getTaskId();
        case APPROVESTATUS:
            return getApproveStatus();
        case APPROVESTATUSNAME:
            return getApproveStatusName();
        case NODETYPE:
            return getNodeType();
        case TASKNAME:
            return getTaskName();
        case DESIGNNODE:
            return getDesignNode();
        case DOCNAME:
            return getDocName();
        case SCHEDULECOMPLETIONDATE:
            return getScheduleCompletionDate();
        case ACTUALRELEASEDATE:
            return getActualReleaseDate();
        case ACTUALCOMPLETIONDATE:
            return getActualCompletionDate();
        case DYNAMICCOMPLETIONDATE:
            return getDynamicCompletionDate();
        case RELEASEDEPT:
            return getReleaseDept();
        case RELEASESPECIALTY:
            return getReleaseSpecialty();
        case ACCEPTSPECIALTY:
            return getAcceptSpecialty();
        case SCHEDULEDESC:
            return getScheduleDesc();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case CUXDLVID:
            return getCuxDlvId();
        case UPDATEALLEWED:
            return getUpdateAllewed();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case SELECTEDFLAG:
            setSelectedFlag((String)value);
            return;
        case SCHEDULEID:
            setScheduleId((Number)value);
            return;
        case PROJECTID:
            setProjectId((Number)value);
            return;
        case TASKID:
            setTaskId((Number)value);
            return;
        case APPROVESTATUS:
            setApproveStatus((String)value);
            return;
        case APPROVESTATUSNAME:
            setApproveStatusName((String)value);
            return;
        case NODETYPE:
            setNodeType((String)value);
            return;
        case TASKNAME:
            setTaskName((String)value);
            return;
        case DESIGNNODE:
            setDesignNode((String)value);
            return;
        case DOCNAME:
            setDocName((String)value);
            return;
        case SCHEDULECOMPLETIONDATE:
            setScheduleCompletionDate((Date)value);
            return;
        case ACTUALRELEASEDATE:
            setActualReleaseDate((Date)value);
            return;
        case ACTUALCOMPLETIONDATE:
            setActualCompletionDate((Date)value);
            return;
        case DYNAMICCOMPLETIONDATE:
            setDynamicCompletionDate((Date)value);
            return;
        case RELEASEDEPT:
            setReleaseDept((String)value);
            return;
        case RELEASESPECIALTY:
            setReleaseSpecialty((String)value);
            return;
        case ACCEPTSPECIALTY:
            setAcceptSpecialty((String)value);
            return;
        case SCHEDULEDESC:
            setScheduleDesc((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case CUXDLVID:
            setCuxDlvId((Number)value);
            return;
        case UPDATEALLEWED:
            setUpdateAllewed((Boolean)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }


    /**Gets DlvScheduleEO entity object.
     */
    public DlvScheduleEOImpl getDlvScheduleEO() {
        return (DlvScheduleEOImpl)getEntity(0);
    }

    /**Gets the attribute value for the calculated attribute SelectedFlag
     */
    public String getSelectedFlag() {
        return (String)getAttributeInternal(SELECTEDFLAG);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SelectedFlag
     */
    public void setSelectedFlag(String value) {
        setAttributeInternal(SELECTEDFLAG, value);
    }

    /**Gets the attribute value for the calculated attribute UpdateAllewed
     */
    public Boolean getUpdateAllewed() {
        return (Boolean)getAttributeInternal(UPDATEALLEWED);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute UpdateAllewed
     */
    public void setUpdateAllewed(Boolean value) {
        setAttributeInternal(UPDATEALLEWED, value);
    }

    /**Gets the attribute value for ATTRIBUTE1 using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE1 using the alias name Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for ATTRIBUTE2 using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE2 using the alias name Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for ATTRIBUTE3 using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE3 using the alias name Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for ATTRIBUTE4 using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE4 using the alias name Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for ATTRIBUTE5 using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE5 using the alias name Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for ATTRIBUTE6 using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE6 using the alias name Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for ATTRIBUTE7 using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE7 using the alias name Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for ATTRIBUTE8 using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE8 using the alias name Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for ATTRIBUTE9 using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as attribute value for ATTRIBUTE9 using the alias name Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for the calculated attribute CuxDlvId
     */
    public Number getCuxDlvId() {
        return (Number)getAttributeInternal(CUXDLVID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CuxDlvId
     */
    public void setCuxDlvId(Number value) {
        setAttributeInternal(CUXDLVID, value);
    }
}
