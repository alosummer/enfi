package cux.oracle.apps.pa.dlv.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DlvCfgVORowImpl extends OAViewRowImpl {
    public static final int DLVCFGID = 0;
    public static final int PROJECTID = 1;
    public static final int SPECIALITYMANAGER = 2;
    public static final int DESIGNER = 3;
    public static final int DESIGNERNAME = 4;
    public static final int CHECKER = 5;
    public static final int CHECKERNAME = 6;
    public static final int VERIFIER = 7;
    public static final int VERIFIERNAME = 8;
    public static final int AUTHORIZER = 9;
    public static final int AUTHORIZERNAME = 10;

    /**This is the default constructor (do not remove)
     */
    public DlvCfgVORowImpl() {
    }

    /**Gets DlvCfgEO entity object.
     */
    public DlvCfgEOImpl getDlvCfgEO() {
        return (DlvCfgEOImpl)getEntity(0);
    }

    /**Gets the attribute value for DLV_CFG_ID using the alias name DlvCfgId
     */
    public Number getDlvCfgId() {
        return (Number)getAttributeInternal(DLVCFGID);
    }

    /**Sets <code>value</code> as attribute value for DLV_CFG_ID using the alias name DlvCfgId
     */
    public void setDlvCfgId(Number value) {
        setAttributeInternal(DLVCFGID, value);
    }

    /**Gets the attribute value for PROJECT_ID using the alias name ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**Sets <code>value</code> as attribute value for PROJECT_ID using the alias name ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**Gets the attribute value for the calculated attribute SpecialityManager
     */
    public Number getSpecialityManager() {
        return (Number)getAttributeInternal(SPECIALITYMANAGER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SpecialityManager
     */
    public void setSpecialityManager(Number value) {
        setAttributeInternal(SPECIALITYMANAGER, value);
    }

    /**Gets the attribute value for DESIGNER using the alias name Designer
     */
    public Number getDesigner() {
        return (Number)getAttributeInternal(DESIGNER);
    }

    /**Sets <code>value</code> as attribute value for DESIGNER using the alias name Designer
     */
    public void setDesigner(Number value) {
        setAttributeInternal(DESIGNER, value);
    }

    /**Gets the attribute value for the calculated attribute DesignerName
     */
    public String getDesignerName() {
        return (String)getAttributeInternal(DESIGNERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DesignerName
     */
    public void setDesignerName(String value) {
        setAttributeInternal(DESIGNERNAME, value);
    }

    /**Gets the attribute value for CHECKER using the alias name Checker
     */
    public Number getChecker() {
        return (Number)getAttributeInternal(CHECKER);
    }

    /**Sets <code>value</code> as attribute value for CHECKER using the alias name Checker
     */
    public void setChecker(Number value) {
        setAttributeInternal(CHECKER, value);
    }

    /**Gets the attribute value for the calculated attribute CheckerName
     */
    public String getCheckerName() {
        return (String)getAttributeInternal(CHECKERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute CheckerName
     */
    public void setCheckerName(String value) {
        setAttributeInternal(CHECKERNAME, value);
    }


    /**Gets the attribute value for VERIFIER using the alias name Verifier
     */
    public Number getVerifier() {
        return (Number)getAttributeInternal(VERIFIER);
    }

    /**Sets <code>value</code> as attribute value for VERIFIER using the alias name Verifier
     */
    public void setVerifier(Number value) {
        setAttributeInternal(VERIFIER, value);
    }

    /**Gets the attribute value for the calculated attribute VerifierName
     */
    public String getVerifierName() {
        return (String)getAttributeInternal(VERIFIERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VerifierName
     */
    public void setVerifierName(String value) {
        setAttributeInternal(VERIFIERNAME, value);
    }

    /**Gets the attribute value for AUTHORIZER using the alias name Authorizer
     */
    public Number getAuthorizer() {
        return (Number)getAttributeInternal(AUTHORIZER);
    }

    /**Sets <code>value</code> as attribute value for AUTHORIZER using the alias name Authorizer
     */
    public void setAuthorizer(Number value) {
        setAttributeInternal(AUTHORIZER, value);
    }

    /**Gets the attribute value for the calculated attribute AuthorizerName
     */
    public String getAuthorizerName() {
        return (String)getAttributeInternal(AUTHORIZERNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute AuthorizerName
     */
    public void setAuthorizerName(String value) {
        setAttributeInternal(AUTHORIZERNAME, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DLVCFGID:
            return getDlvCfgId();
        case PROJECTID:
            return getProjectId();
        case SPECIALITYMANAGER:
            return getSpecialityManager();
        case DESIGNER:
            return getDesigner();
        case DESIGNERNAME:
            return getDesignerName();
        case CHECKER:
            return getChecker();
        case CHECKERNAME:
            return getCheckerName();
        case VERIFIER:
            return getVerifier();
        case VERIFIERNAME:
            return getVerifierName();
        case AUTHORIZER:
            return getAuthorizer();
        case AUTHORIZERNAME:
            return getAuthorizerName();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DLVCFGID:
            setDlvCfgId((Number)value);
            return;
        case PROJECTID:
            setProjectId((Number)value);
            return;
        case SPECIALITYMANAGER:
            setSpecialityManager((Number)value);
            return;
        case DESIGNER:
            setDesigner((Number)value);
            return;
        case DESIGNERNAME:
            setDesignerName((String)value);
            return;
        case CHECKER:
            setChecker((Number)value);
            return;
        case CHECKERNAME:
            setCheckerName((String)value);
            return;
        case VERIFIER:
            setVerifier((Number)value);
            return;
        case VERIFIERNAME:
            setVerifierName((String)value);
            return;
        case AUTHORIZER:
            setAuthorizer((Number)value);
            return;
        case AUTHORIZERNAME:
            setAuthorizerName((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }
}
