package cux.oracle.apps.pa.dlv.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DlvCfgEOImpl extends OAEntityImpl {
    public static final int DLVCFGID = 0;
    public static final int PROJECTID = 1;
    public static final int SPECIALITYMANAGER = 2;
    public static final int DESIGNER = 3;
    public static final int CHECKER = 4;
    public static final int VERIFIER = 5;
    public static final int AUTHORIZER = 6;
    public static final int CREATEDBY = 7;
    public static final int CREATIONDATE = 8;
    public static final int LASTUPDATEDBY = 9;
    public static final int LASTUPDATEDATE = 10;
    public static final int LASTUPDATELOGIN = 11;

    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public DlvCfgEOImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.pa.dlv.server.DlvCfgEO");
        }
        return mDefinitionObject;
    }

    /**Add attribute defaulting logic in this method.
     */
    public void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**Add Entity validation code in this method.
     */
    protected void validateEntity() {
        super.validateEntity();
    }

    /**Gets the attribute value for DlvCfgId, using the alias name DlvCfgId
     */
    public Number getDlvCfgId() {
        return (Number)getAttributeInternal(DLVCFGID);
    }

    /**Sets <code>value</code> as the attribute value for DlvCfgId
     */
    public void setDlvCfgId(Number value) {
        setAttributeInternal(DLVCFGID, value);
    }

    /**Gets the attribute value for ProjectId, using the alias name ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**Sets <code>value</code> as the attribute value for ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**Gets the attribute value for SpecialityManager, using the alias name SpecialityManager
     */
    public Number getSpecialityManager() {
        return (Number)getAttributeInternal(SPECIALITYMANAGER);
    }

    /**Sets <code>value</code> as the attribute value for SpecialityManager
     */
    public void setSpecialityManager(Number value) {
        setAttributeInternal(SPECIALITYMANAGER, value);
    }

    /**Gets the attribute value for Designer, using the alias name Designer
     */
    public Number getDesigner() {
        return (Number)getAttributeInternal(DESIGNER);
    }

    /**Sets <code>value</code> as the attribute value for Designer
     */
    public void setDesigner(Number value) {
        setAttributeInternal(DESIGNER, value);
    }

    /**Gets the attribute value for Checker, using the alias name Checker
     */
    public Number getChecker() {
        return (Number)getAttributeInternal(CHECKER);
    }

    /**Sets <code>value</code> as the attribute value for Checker
     */
    public void setChecker(Number value) {
        setAttributeInternal(CHECKER, value);
    }

    /**Gets the attribute value for Verifier, using the alias name Verifier
     */
    public Number getVerifier() {
        return (Number)getAttributeInternal(VERIFIER);
    }

    /**Sets <code>value</code> as the attribute value for Verifier
     */
    public void setVerifier(Number value) {
        setAttributeInternal(VERIFIER, value);
    }

    /**Gets the attribute value for Authorizer, using the alias name Authorizer
     */
    public Number getAuthorizer() {
        return (Number)getAttributeInternal(AUTHORIZER);
    }

    /**Sets <code>value</code> as the attribute value for Authorizer
     */
    public void setAuthorizer(Number value) {
        setAttributeInternal(AUTHORIZER, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DLVCFGID:
            return getDlvCfgId();
        case PROJECTID:
            return getProjectId();
        case SPECIALITYMANAGER:
            return getSpecialityManager();
        case DESIGNER:
            return getDesigner();
        case CHECKER:
            return getChecker();
        case VERIFIER:
            return getVerifier();
        case AUTHORIZER:
            return getAuthorizer();
        case CREATEDBY:
            return getCreatedBy();
        case CREATIONDATE:
            return getCreationDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DLVCFGID:
            setDlvCfgId((Number)value);
            return;
        case PROJECTID:
            setProjectId((Number)value);
            return;
        case SPECIALITYMANAGER:
            setSpecialityManager((Number)value);
            return;
        case DESIGNER:
            setDesigner((Number)value);
            return;
        case CHECKER:
            setChecker((Number)value);
            return;
        case VERIFIER:
            setVerifier((Number)value);
            return;
        case AUTHORIZER:
            setAuthorizer((Number)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number dlvCfgId) {
        return new Key(new Object[] { dlvCfgId });
    }
}
