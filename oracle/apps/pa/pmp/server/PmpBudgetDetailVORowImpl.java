package cux.oracle.apps.pa.pmp.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class PmpBudgetDetailVORowImpl extends OAViewRowImpl {
    public static final int PROJECTID = 0;
    public static final int VERSIONNUM = 1;
    public static final int SORTSEQ = 2;
    public static final int EXPENSEMAINCATEGORY = 3;
    public static final int EXPENSESUBCATEGORY = 4;
    public static final int TARGETVALUE = 5;
    public static final int PERCENTOFCONTRACT = 6;
    public static final int MEMO = 7;

    /**This is the default constructor (do not remove)
     */
    public PmpBudgetDetailVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**Gets the attribute value for the calculated attribute SortSeq
     */
    public Number getSortSeq() {
        return (Number)getAttributeInternal(SORTSEQ);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute SortSeq
     */
    public void setSortSeq(Number value) {
        setAttributeInternal(SORTSEQ, value);
    }

    /**Gets the attribute value for the calculated attribute ExpenseMainCategory
     */
    public String getExpenseMainCategory() {
        return (String)getAttributeInternal(EXPENSEMAINCATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ExpenseMainCategory
     */
    public void setExpenseMainCategory(String value) {
        setAttributeInternal(EXPENSEMAINCATEGORY, value);
    }

    /**Gets the attribute value for the calculated attribute ExpenseSubCategory
     */
    public String getExpenseSubCategory() {
        return (String)getAttributeInternal(EXPENSESUBCATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ExpenseSubCategory
     */
    public void setExpenseSubCategory(String value) {
        setAttributeInternal(EXPENSESUBCATEGORY, value);
    }

    /**Gets the attribute value for the calculated attribute TargetValue
     */
    public Number getTargetValue() {
        return (Number)getAttributeInternal(TARGETVALUE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TargetValue
     */
    public void setTargetValue(Number value) {
        setAttributeInternal(TARGETVALUE, value);
    }

    /**Gets the attribute value for the calculated attribute PercentOfContract
     */
    public Number getPercentOfContract() {
        return (Number)getAttributeInternal(PERCENTOFCONTRACT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute PercentOfContract
     */
    public void setPercentOfContract(Number value) {
        setAttributeInternal(PERCENTOFCONTRACT, value);
    }

    /**Gets the attribute value for the calculated attribute Memo
     */
    public String getMemo() {
        return (String)getAttributeInternal(MEMO);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Memo
     */
    public void setMemo(String value) {
        setAttributeInternal(MEMO, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PROJECTID:
            return getProjectId();
        case VERSIONNUM:
            return getVersionNum();
        case SORTSEQ:
            return getSortSeq();
        case EXPENSEMAINCATEGORY:
            return getExpenseMainCategory();
        case EXPENSESUBCATEGORY:
            return getExpenseSubCategory();
        case TARGETVALUE:
            return getTargetValue();
        case PERCENTOFCONTRACT:
            return getPercentOfContract();
        case MEMO:
            return getMemo();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PROJECTID:
            setProjectId((Number)value);
            return;
        case VERSIONNUM:
            setVersionNum((Number)value);
            return;
        case SORTSEQ:
            setSortSeq((Number)value);
            return;
        case EXPENSEMAINCATEGORY:
            setExpenseMainCategory((String)value);
            return;
        case EXPENSESUBCATEGORY:
            setExpenseSubCategory((String)value);
            return;
        case TARGETVALUE:
            setTargetValue((Number)value);
            return;
        case PERCENTOFCONTRACT:
            setPercentOfContract((Number)value);
            return;
        case MEMO:
            setMemo((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute VersionNum
     */
    public Number getVersionNum() {
        return (Number)getAttributeInternal(VERSIONNUM);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute VersionNum
     */
    public void setVersionNum(Number value) {
        setAttributeInternal(VERSIONNUM, value);
    }
}
