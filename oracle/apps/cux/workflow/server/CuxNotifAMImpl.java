package cux.oracle.apps.cux.workflow.server;

import java.lang.String;


import java.sql.SQLException;

import java.sql.Types;

import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OAApplicationModuleImpl;

import oracle.jbo.Row;
import oracle.jbo.ViewObject;

import oracle.jbo.domain.Number;

import oracle.jdbc.OracleCallableStatement;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxNotifAMImpl extends OAApplicationModuleImpl {
    /**This is the default constructor (do not remove)
     */
    public CuxNotifAMImpl() {
    }


    public String[] getItemKey(String paramString) {
        ViewObject localViewObject = this.findViewObject("CuxItemKeyVO1");
        localViewObject.setWhereClauseParam(0, paramString);
        localViewObject.executeQuery();
        Row localRow = localViewObject.first();
        String subItemKey = (String)localRow.getAttribute("ItemKey");
        String itemType = (String)localRow.getAttribute("ItemType");
        String[] ret = new String[2];
        ret[0] = itemType;
        if (subItemKey.indexOf("-") == -1) {
            ret[1] = subItemKey;
        } else {
            ret[1] = 
                    subItemKey == null ? null : subItemKey.substring(0, subItemKey.indexOf("-"));
        }
        return ret;
    }


    public String[] getApplicationId(String paramString) {
        ViewObject localViewObject = 
            this.findViewObject("CuxApplicationIdVO1");
        localViewObject.executeQuery();
        Row localRow = localViewObject.first();
        Number applicationId = (Number)localRow.getAttribute("ApplicationId");
        String idStr = applicationId.toString();
        String ret[] = new String[1];
        ret[0] = idStr;
        return ret;
    }


    public String getAmeTransationType(String itemType, String itemKey) {
        String callString = 
            "DECLARE\n" + "  l_boolean        BOOLEAN := TRUE;\n" + 
            "  l_ame_trans_type VARCHAR2(4000);\n" + "BEGIN\n" + 
            "  l_ame_trans_type := wf_engine.getitemattrtext(itemtype        => :1,\n" + 
            "                                                itemkey         => :2,\n" + 
            "                                                aname           => 'AME_TRANSATION_TYPE',\n" + 
            "                                                ignore_notfound => l_boolean);\n" + 
            "  :3 := l_ame_trans_type;\n" + "END;";
        OracleCallableStatement statement = null;
        String ameTransType = null;
        try {
            statement = 
                    (OracleCallableStatement)this.getOADBTransaction().createCallableStatement(callString, 
                                                                                               1);
            statement.setString(1, itemType);
            statement.setString(2, itemKey);
            statement.registerOutParameter(3, Types.VARCHAR);
            statement.execute();
            ameTransType = statement.getString(3);
        } catch (SQLException e) {
            this.getOADBTransaction().putDialogMessage(OAException.wrapperException(e));
        } finally {
            if (statement != null) {
                try {
                    statement.close();
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        }
        return ameTransType;
    }


    /**Sample main for debugging Business Components code using the tester.
     */
    public static void main(String[] args) {
        //        launchTester("cux.oracle.apps.cux.workflow.server", /* package name */
        //      "CuxNotifAMLocal" /* Configuration Name */);

        System.out.println(new Number(1).toString());
    }

    /**Container's getter for CuxItemKeyVO1
     */
    public CuxItemKeyVOImpl getCuxItemKeyVO1() {
        return (CuxItemKeyVOImpl)findViewObject("CuxItemKeyVO1");
    }

    /**Container's getter for CuxApplicationIdVO1
     */
    public CuxApplicationIdVOImpl getCuxApplicationIdVO1() {
        return (CuxApplicationIdVOImpl)findViewObject("CuxApplicationIdVO1");
    }
}
