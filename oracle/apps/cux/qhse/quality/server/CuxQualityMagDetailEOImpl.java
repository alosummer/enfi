package cux.oracle.apps.cux.qhse.quality.server;

import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxQualityMagDetailEOImpl extends OAEntityImpl {
    public static final int DETAILID = 0;
    public static final int TASKID = 1;
    public static final int DETAILNUMBER = 2;
    public static final int TARGETCLASSCODE = 3;
    public static final int PLANCONTROLCODE = 4;
    public static final int ISDELIVERABLES = 5;
    public static final int TARGETVALUE = 6;
    public static final int PLANDATE = 7;
    public static final int APPROVEDATE = 8;
    public static final int DUTEPERSON = 9;
    public static final int RESULT = 10;
    public static final int ISCONFIRM = 11;
    public static final int REMARK = 12;
    public static final int CREATIONDATE = 13;
    public static final int CREATEDBY = 14;
    public static final int LASTUPDATEDATE = 15;
    public static final int LASTUPDATEDBY = 16;
    public static final int LASTUPDATELOGIN = 17;
    public static final int ATTRIBUTECATEGORY = 18;
    public static final int ATTRIBUTE1 = 19;
    public static final int ATTRIBUTE2 = 20;
    public static final int ATTRIBUTE3 = 21;
    public static final int ATTRIBUTE4 = 22;
    public static final int ATTRIBUTE5 = 23;


    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public CuxQualityMagDetailEOImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.cux.qhse.quality.server.CuxQualityMagDetailEO");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for DetailId, using the alias name DetailId
     */
    public Number getDetailId() {
        return (Number)getAttributeInternal(DETAILID);
    }

    /**Sets <code>value</code> as the attribute value for DetailId
     */
    public void setDetailId(Number value) {
        setAttributeInternal(DETAILID, value);
    }

    /**Gets the attribute value for TaskId, using the alias name TaskId
     */
    public Number getTaskId() {
        return (Number)getAttributeInternal(TASKID);
    }

    /**Sets <code>value</code> as the attribute value for TaskId
     */
    public void setTaskId(Number value) {
        setAttributeInternal(TASKID, value);
    }

    /**Gets the attribute value for DetailNumber, using the alias name DetailNumber
     */
    public Number getDetailNumber() {
        return (Number)getAttributeInternal(DETAILNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for DetailNumber
     */
    public void setDetailNumber(Number value) {
        setAttributeInternal(DETAILNUMBER, value);
    }

    /**Gets the attribute value for TargetClassCode, using the alias name TargetClassCode
     */
    public String getTargetClassCode() {
        return (String)getAttributeInternal(TARGETCLASSCODE);
    }

    /**Sets <code>value</code> as the attribute value for TargetClassCode
     */
    public void setTargetClassCode(String value) {
        setAttributeInternal(TARGETCLASSCODE, value);
    }

    /**Gets the attribute value for PlanControlCode, using the alias name PlanControlCode
     */
    public String getPlanControlCode() {
        return (String)getAttributeInternal(PLANCONTROLCODE);
    }

    /**Sets <code>value</code> as the attribute value for PlanControlCode
     */
    public void setPlanControlCode(String value) {
        setAttributeInternal(PLANCONTROLCODE, value);
    }

    /**Gets the attribute value for IsDeliverables, using the alias name IsDeliverables
     */
    public String getIsDeliverables() {
        return (String)getAttributeInternal(ISDELIVERABLES);
    }

    /**Sets <code>value</code> as the attribute value for IsDeliverables
     */
    public void setIsDeliverables(String value) {
        setAttributeInternal(ISDELIVERABLES, value);
    }

    /**Gets the attribute value for TargetValue, using the alias name TargetValue
     */
    public String getTargetValue() {
        return (String)getAttributeInternal(TARGETVALUE);
    }

    /**Sets <code>value</code> as the attribute value for TargetValue
     */
    public void setTargetValue(String value) {
        setAttributeInternal(TARGETVALUE, value);
    }

    /**Gets the attribute value for PlanDate, using the alias name PlanDate
     */
    public Date getPlanDate() {
        return (Date)getAttributeInternal(PLANDATE);
    }

    /**Sets <code>value</code> as the attribute value for PlanDate
     */
    public void setPlanDate(Date value) {
        setAttributeInternal(PLANDATE, value);
    }

    /**Gets the attribute value for ApproveDate, using the alias name ApproveDate
     */
    public Date getApproveDate() {
        return (Date)getAttributeInternal(APPROVEDATE);
    }

    /**Sets <code>value</code> as the attribute value for ApproveDate
     */
    public void setApproveDate(Date value) {
        setAttributeInternal(APPROVEDATE, value);
    }

    /**Gets the attribute value for DutePerson, using the alias name DutePerson
     */
    public Number getDutePerson() {
        return (Number)getAttributeInternal(DUTEPERSON);
    }

    /**Sets <code>value</code> as the attribute value for DutePerson
     */
    public void setDutePerson(Number value) {
        setAttributeInternal(DUTEPERSON, value);
    }

    /**Gets the attribute value for Result, using the alias name Result
     */
    public String getResult() {
        return (String)getAttributeInternal(RESULT);
    }

    /**Sets <code>value</code> as the attribute value for Result
     */
    public void setResult(String value) {
        setAttributeInternal(RESULT, value);
    }

    /**Gets the attribute value for IsConfirm, using the alias name IsConfirm
     */
    public String getIsConfirm() {
        return (String)getAttributeInternal(ISCONFIRM);
    }

    /**Sets <code>value</code> as the attribute value for IsConfirm
     */
    public void setIsConfirm(String value) {
        setAttributeInternal(ISCONFIRM, value);
    }

    /**Gets the attribute value for Remark, using the alias name Remark
     */
    public String getRemark() {
        return (String)getAttributeInternal(REMARK);
    }

    /**Sets <code>value</code> as the attribute value for Remark
     */
    public void setRemark(String value) {
        setAttributeInternal(REMARK, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DETAILID:
            return getDetailId();
        case TASKID:
            return getTaskId();
        case DETAILNUMBER:
            return getDetailNumber();
        case TARGETCLASSCODE:
            return getTargetClassCode();
        case PLANCONTROLCODE:
            return getPlanControlCode();
        case ISDELIVERABLES:
            return getIsDeliverables();
        case TARGETVALUE:
            return getTargetValue();
        case PLANDATE:
            return getPlanDate();
        case APPROVEDATE:
            return getApproveDate();
        case DUTEPERSON:
            return getDutePerson();
        case RESULT:
            return getResult();
        case ISCONFIRM:
            return getIsConfirm();
        case REMARK:
            return getRemark();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case ATTRIBUTECATEGORY:
            return getAttributeCategory();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case DETAILID:
            setDetailId((Number)value);
            return;
        case TASKID:
            setTaskId((Number)value);
            return;
        case DETAILNUMBER:
            setDetailNumber((Number)value);
            return;
        case TARGETCLASSCODE:
            setTargetClassCode((String)value);
            return;
        case PLANCONTROLCODE:
            setPlanControlCode((String)value);
            return;
        case ISDELIVERABLES:
            setIsDeliverables((String)value);
            return;
        case TARGETVALUE:
            setTargetValue((String)value);
            return;
        case PLANDATE:
            setPlanDate((Date)value);
            return;
        case APPROVEDATE:
            setApproveDate((Date)value);
            return;
        case DUTEPERSON:
            setDutePerson((Number)value);
            return;
        case RESULT:
            setResult((String)value);
            return;
        case ISCONFIRM:
            setIsConfirm((String)value);
            return;
        case REMARK:
            setRemark((String)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case ATTRIBUTECATEGORY:
            setAttributeCategory((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number detailId) {
        return new Key(new Object[] { detailId });
    }
}
