package cux.oracle.apps.cux.qhse.quality.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxProjectWorkplanResultVORowImpl extends OAViewRowImpl {
    public static final int PROJELEMENTID = 0;
    public static final int ELEMENTVERSIONID = 1;
    public static final int PHASENAME = 2;
    public static final int PARENTSTRUCTUREVERSIONID = 3;
    public static final int TASKTYPE = 4;
    public static final int TASKNAME = 5;
    public static final int ELEMENTNUMBER = 6;
    public static final int DESCRIPTION = 7;
    public static final int PROJECTID = 8;
    public static final int PROJECTSTATUSNAME = 9;
    public static final int STATUSICONACTIVEIND = 10;
    public static final int PROJECTSYSTEMSTATUSCODE = 11;
    public static final int SCHEDULEDSTARTDATE = 12;
    public static final int SCHEDULEDFINISHDATE = 13;
    public static final int ISPLANED = 14;
    public static final int STATUS = 15;

    /**This is the default constructor (do not remove)
     */
    public CuxProjectWorkplanResultVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute ProjElementId
     */
    public Number getProjElementId() {
        return (Number)getAttributeInternal(PROJELEMENTID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ProjElementId
     */
    public void setProjElementId(Number value) {
        setAttributeInternal(PROJELEMENTID, value);
    }

    /**Gets the attribute value for the calculated attribute ElementVersionId
     */
    public Number getElementVersionId() {
        return (Number)getAttributeInternal(ELEMENTVERSIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ElementVersionId
     */
    public void setElementVersionId(Number value) {
        setAttributeInternal(ELEMENTVERSIONID, value);
    }

    /**Gets the attribute value for the calculated attribute PhaseName
     */
    public String getPhaseName() {
        return (String)getAttributeInternal(PHASENAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute PhaseName
     */
    public void setPhaseName(String value) {
        setAttributeInternal(PHASENAME, value);
    }

    /**Gets the attribute value for the calculated attribute ParentStructureVersionId
     */
    public Number getParentStructureVersionId() {
        return (Number)getAttributeInternal(PARENTSTRUCTUREVERSIONID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ParentStructureVersionId
     */
    public void setParentStructureVersionId(Number value) {
        setAttributeInternal(PARENTSTRUCTUREVERSIONID, value);
    }

    /**Gets the attribute value for the calculated attribute TaskType
     */
    public String getTaskType() {
        return (String)getAttributeInternal(TASKTYPE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TaskType
     */
    public void setTaskType(String value) {
        setAttributeInternal(TASKTYPE, value);
    }

    /**Gets the attribute value for the calculated attribute TaskName
     */
    public String getTaskName() {
        return (String)getAttributeInternal(TASKNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute TaskName
     */
    public void setTaskName(String value) {
        setAttributeInternal(TASKNAME, value);
    }

    /**Gets the attribute value for the calculated attribute ElementNumber
     */
    public String getElementNumber() {
        return (String)getAttributeInternal(ELEMENTNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ElementNumber
     */
    public void setElementNumber(String value) {
        setAttributeInternal(ELEMENTNUMBER, value);
    }

    /**Gets the attribute value for the calculated attribute Description
     */
    public String getDescription() {
        return (String)getAttributeInternal(DESCRIPTION);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Description
     */
    public void setDescription(String value) {
        setAttributeInternal(DESCRIPTION, value);
    }

    /**Gets the attribute value for the calculated attribute ProjectId
     */
    public Number getProjectId() {
        return (Number)getAttributeInternal(PROJECTID);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ProjectId
     */
    public void setProjectId(Number value) {
        setAttributeInternal(PROJECTID, value);
    }

    /**Gets the attribute value for the calculated attribute ProjectStatusName
     */
    public String getProjectStatusName() {
        return (String)getAttributeInternal(PROJECTSTATUSNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ProjectStatusName
     */
    public void setProjectStatusName(String value) {
        setAttributeInternal(PROJECTSTATUSNAME, value);
    }

    /**Gets the attribute value for the calculated attribute StatusIconActiveInd
     */
    public String getStatusIconActiveInd() {
        return (String)getAttributeInternal(STATUSICONACTIVEIND);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute StatusIconActiveInd
     */
    public void setStatusIconActiveInd(String value) {
        setAttributeInternal(STATUSICONACTIVEIND, value);
    }

    /**Gets the attribute value for the calculated attribute ProjectSystemStatusCode
     */
    public String getProjectSystemStatusCode() {
        return (String)getAttributeInternal(PROJECTSYSTEMSTATUSCODE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ProjectSystemStatusCode
     */
    public void setProjectSystemStatusCode(String value) {
        setAttributeInternal(PROJECTSYSTEMSTATUSCODE, value);
    }

    /**Gets the attribute value for the calculated attribute ScheduledStartDate
     */
    public Date getScheduledStartDate() {
        return (Date)getAttributeInternal(SCHEDULEDSTARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ScheduledStartDate
     */
    public void setScheduledStartDate(Date value) {
        setAttributeInternal(SCHEDULEDSTARTDATE, value);
    }

    /**Gets the attribute value for the calculated attribute ScheduledFinishDate
     */
    public Date getScheduledFinishDate() {
        return (Date)getAttributeInternal(SCHEDULEDFINISHDATE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ScheduledFinishDate
     */
    public void setScheduledFinishDate(Date value) {
        setAttributeInternal(SCHEDULEDFINISHDATE, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PROJELEMENTID:
            return getProjElementId();
        case ELEMENTVERSIONID:
            return getElementVersionId();
        case PHASENAME:
            return getPhaseName();
        case PARENTSTRUCTUREVERSIONID:
            return getParentStructureVersionId();
        case TASKTYPE:
            return getTaskType();
        case TASKNAME:
            return getTaskName();
        case ELEMENTNUMBER:
            return getElementNumber();
        case DESCRIPTION:
            return getDescription();
        case PROJECTID:
            return getProjectId();
        case PROJECTSTATUSNAME:
            return getProjectStatusName();
        case STATUSICONACTIVEIND:
            return getStatusIconActiveInd();
        case PROJECTSYSTEMSTATUSCODE:
            return getProjectSystemStatusCode();
        case SCHEDULEDSTARTDATE:
            return getScheduledStartDate();
        case SCHEDULEDFINISHDATE:
            return getScheduledFinishDate();
        case ISPLANED:
            return getIsPlaned();
        case STATUS:
            return getStatus();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case PROJELEMENTID:
            setProjElementId((Number)value);
            return;
        case ELEMENTVERSIONID:
            setElementVersionId((Number)value);
            return;
        case PHASENAME:
            setPhaseName((String)value);
            return;
        case PARENTSTRUCTUREVERSIONID:
            setParentStructureVersionId((Number)value);
            return;
        case TASKTYPE:
            setTaskType((String)value);
            return;
        case TASKNAME:
            setTaskName((String)value);
            return;
        case ELEMENTNUMBER:
            setElementNumber((String)value);
            return;
        case DESCRIPTION:
            setDescription((String)value);
            return;
        case PROJECTID:
            setProjectId((Number)value);
            return;
        case PROJECTSTATUSNAME:
            setProjectStatusName((String)value);
            return;
        case STATUSICONACTIVEIND:
            setStatusIconActiveInd((String)value);
            return;
        case PROJECTSYSTEMSTATUSCODE:
            setProjectSystemStatusCode((String)value);
            return;
        case SCHEDULEDSTARTDATE:
            setScheduledStartDate((Date)value);
            return;
        case SCHEDULEDFINISHDATE:
            setScheduledFinishDate((Date)value);
            return;
        case ISPLANED:
            setIsPlaned((String)value);
            return;
        case STATUS:
            setStatus((String)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute IsPlaned
     */
    public String getIsPlaned() {
        return (String)getAttributeInternal(ISPLANED);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute IsPlaned
     */
    public void setIsPlaned(String value) {
        setAttributeInternal(ISPLANED, value);
    }

    /**Gets the attribute value for the calculated attribute Status
     */
    public String getStatus() {
        return (String)getAttributeInternal(STATUS);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute Status
     */
    public void setStatus(String value) {
        setAttributeInternal(STATUS, value);
    }
}
