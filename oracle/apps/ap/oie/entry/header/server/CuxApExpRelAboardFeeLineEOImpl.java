package cux.oracle.apps.ap.oie.entry.header.server;

import java.sql.CallableStatement;
import java.sql.Types;

import oracle.apps.fnd.framework.OAAttrValException;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxApExpRelAboardFeeLineEOImpl extends OAEntityImpl {
    public static final int RELATEDABOARDFEELINEID = 0;
    public static final int RELATIONSHIPID = 1;
    public static final int OAABROADTRAVELHEADERID = 2;
    public static final int OAABROADTRAVELFEELINEID = 3;
    public static final int RATE = 4;
    public static final int REALTRAVELDAYS = 5;
    public static final int REALPERSONCOUNT = 6;
    public static final int REALPERAMOUNT = 7;
    public static final int REMARK = 8;
    public static final int CREATIONDATE = 9;
    public static final int CREATEDBY = 10;
    public static final int LASTUPDATEDATE = 11;
    public static final int LASTUPDATEDBY = 12;
    public static final int LASTUPDATELOGIN = 13;
    public static final int ATTRIBUTECATEGORY = 14;
    public static final int ATTRIBUTE1 = 15;
    public static final int ATTRIBUTE2 = 16;
    public static final int ATTRIBUTE3 = 17;
    public static final int ATTRIBUTE4 = 18;
    public static final int ATTRIBUTE5 = 19;
    public static final int ATTRIBUTE6 = 20;
    public static final int ATTRIBUTE7 = 21;
    public static final int ATTRIBUTE8 = 22;
    public static final int ATTRIBUTE9 = 23;
    public static final int ATTRIBUTE10 = 24;
    public static final int ATTRIBUTE11 = 25;
    public static final int ATTRIBUTE12 = 26;
    public static final int ATTRIBUTE13 = 27;
    public static final int ATTRIBUTE14 = 28;
    public static final int ATTRIBUTE15 = 29;
    public static final int LINENUM = 30;
    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public CuxApExpRelAboardFeeLineEOImpl() {
    }

    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.ap.oie.entry.header.server.CuxApExpRelAboardFeeLineEO");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for RelatedAboardFeeLineId, using the alias name RelatedAboardFeeLineId
     */
    public Number getRelatedAboardFeeLineId() {
        return (Number)getAttributeInternal(RELATEDABOARDFEELINEID);
    }

    /**Sets <code>value</code> as the attribute value for RelatedAboardFeeLineId
     */
    public void setRelatedAboardFeeLineId(Number value) {
        setAttributeInternal(RELATEDABOARDFEELINEID, value);
    }

    /**Gets the attribute value for RelationshipId, using the alias name RelationshipId
     */
    public Number getRelationshipId() {
        return (Number)getAttributeInternal(RELATIONSHIPID);
    }

    /**Sets <code>value</code> as the attribute value for RelationshipId
     */
    public void setRelationshipId(Number value) {
        setAttributeInternal(RELATIONSHIPID, value);
    }

    /**Gets the attribute value for OaAbroadTravelHeaderId, using the alias name OaAbroadTravelHeaderId
     */
    public Number getOaAbroadTravelHeaderId() {
        return (Number)getAttributeInternal(OAABROADTRAVELHEADERID);
    }

    /**Sets <code>value</code> as the attribute value for OaAbroadTravelHeaderId
     */
    public void setOaAbroadTravelHeaderId(Number value) {
        setAttributeInternal(OAABROADTRAVELHEADERID, value);
    }

    /**Gets the attribute value for OaAbroadTravelFeeLineId, using the alias name OaAbroadTravelFeeLineId
     */
    public Number getOaAbroadTravelFeeLineId() {
        return (Number)getAttributeInternal(OAABROADTRAVELFEELINEID);
    }

    /**Sets <code>value</code> as the attribute value for OaAbroadTravelFeeLineId
     */
    public void setOaAbroadTravelFeeLineId(Number value) {
        setAttributeInternal(OAABROADTRAVELFEELINEID, value);
    }

    /**Gets the attribute value for Rate, using the alias name Rate
     */
    public Number getRate() {
        return (Number)getAttributeInternal(RATE);
    }

    /**Sets <code>value</code> as the attribute value for Rate
     */
    public void setRate(Number value) {
        setAttributeInternal(RATE, value);
    }

    /**Gets the attribute value for RealTravelDays, using the alias name RealTravelDays
     */
    public Number getRealTravelDays() {
        return (Number)getAttributeInternal(REALTRAVELDAYS);
    }

    /**Sets <code>value</code> as the attribute value for RealTravelDays
     */
    public void setRealTravelDays(Number value) {
        setAttributeInternal(REALTRAVELDAYS, value);
    }

    /**Gets the attribute value for RealPersonCount, using the alias name RealPersonCount
     */
    public Number getRealPersonCount() {
        return (Number)getAttributeInternal(REALPERSONCOUNT);
    }

    /**Sets <code>value</code> as the attribute value for RealPersonCount
     */
    public void setRealPersonCount(Number value) {

        setAttributeInternal(REALPERSONCOUNT, value);
    }

    /**Gets the attribute value for RealPerAmount, using the alias name RealPerAmount
     */
    public Number getRealPerAmount() {
        return (Number)getAttributeInternal(REALPERAMOUNT);
    }

    /**Sets <code>value</code> as the attribute value for RealPerAmount
     */
    public void setRealPerAmount(Number value) {
        if (value != null) {
            if (value.compareTo(0) < 0) {
                throw new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                             getEntityDef().getFullName(), 
                                             getPrimaryKey(), "RealPerAmount", 
                                             value, "CUX", 
                                             "CUX_APEXP_O_REL_SUB_EXPENSE");
            }
        }
        setAttributeInternal(REALPERAMOUNT, value);
    }

    /**Gets the attribute value for Remark, using the alias name Remark
     */
    public String getRemark() {
        return (String)getAttributeInternal(REMARK);
    }

    /**Sets <code>value</code> as the attribute value for Remark
     */
    public void setRemark(String value) {
        setAttributeInternal(REMARK, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for Attribute6, using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for Attribute7, using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for Attribute8, using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for Attribute9, using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for Attribute10, using the alias name Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for Attribute11, using the alias name Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**Sets <code>value</code> as the attribute value for Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**Gets the attribute value for Attribute12, using the alias name Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**Sets <code>value</code> as the attribute value for Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**Gets the attribute value for Attribute13, using the alias name Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**Sets <code>value</code> as the attribute value for Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**Gets the attribute value for Attribute14, using the alias name Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**Sets <code>value</code> as the attribute value for Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**Gets the attribute value for Attribute15, using the alias name Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**Sets <code>value</code> as the attribute value for Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**Gets the attribute value for LineNum, using the alias name LineNum
     */
    public Number getLineNum() {
        return (Number)getAttributeInternal(LINENUM);
    }

    /**Sets <code>value</code> as the attribute value for LineNum
     */
    public void setLineNum(Number value) {
        setAttributeInternal(LINENUM, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RELATEDABOARDFEELINEID:
            return getRelatedAboardFeeLineId();
        case RELATIONSHIPID:
            return getRelationshipId();
        case OAABROADTRAVELHEADERID:
            return getOaAbroadTravelHeaderId();
        case OAABROADTRAVELFEELINEID:
            return getOaAbroadTravelFeeLineId();
        case RATE:
            return getRate();
        case REALTRAVELDAYS:
            return getRealTravelDays();
        case REALPERSONCOUNT:
            return getRealPersonCount();
        case REALPERAMOUNT:
            return getRealPerAmount();
        case REMARK:
            return getRemark();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case ATTRIBUTECATEGORY:
            return getAttributeCategory();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case ATTRIBUTE10:
            return getAttribute10();
        case ATTRIBUTE11:
            return getAttribute11();
        case ATTRIBUTE12:
            return getAttribute12();
        case ATTRIBUTE13:
            return getAttribute13();
        case ATTRIBUTE14:
            return getAttribute14();
        case ATTRIBUTE15:
            return getAttribute15();
        case LINENUM:
            return getLineNum();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case RELATEDABOARDFEELINEID:
            setRelatedAboardFeeLineId((Number)value);
            return;
        case RELATIONSHIPID:
            setRelationshipId((Number)value);
            return;
        case OAABROADTRAVELHEADERID:
            setOaAbroadTravelHeaderId((Number)value);
            return;
        case OAABROADTRAVELFEELINEID:
            setOaAbroadTravelFeeLineId((Number)value);
            return;
        case RATE:
            setRate((Number)value);
            return;
        case REALTRAVELDAYS:
            setRealTravelDays((Number)value);
            return;
        case REALPERSONCOUNT:
            setRealPersonCount((Number)value);
            return;
        case REALPERAMOUNT:
            setRealPerAmount((Number)value);
            return;
        case REMARK:
            setRemark((String)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case ATTRIBUTECATEGORY:
            setAttributeCategory((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((String)value);
            return;
        case ATTRIBUTE11:
            setAttribute11((String)value);
            return;
        case ATTRIBUTE12:
            setAttribute12((String)value);
            return;
        case ATTRIBUTE13:
            setAttribute13((String)value);
            return;
        case ATTRIBUTE14:
            setAttribute14((String)value);
            return;
        case ATTRIBUTE15:
            setAttribute15((String)value);
            return;
        case LINENUM:
            setLineNum((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number relatedAboardFeeLineId) {
        return new Key(new Object[] { relatedAboardFeeLineId });
    }

    @Override
    protected void validateEntity() {
        super.validateEntity();
        if (this.getRealTravelDays() != null && 
            this.getRealPerAmount() != null && 
            this.getOaAbroadTravelHeaderId() != null && 
            this.getOaAbroadTravelFeeLineId() != null) {
            String overFlag = 
                this.validateOutseaAccomM2plan(this.getOADBTransaction(), 
                                               this.getOaAbroadTravelHeaderId(), 
                                               this.getOaAbroadTravelFeeLineId(), 
                                               this.getRealTravelDays(), 
                                               this.getRealPerAmount());
            if ("OVER_LEVEL".equals(overFlag) && 
                (this.getRemark() == null || "".equals(this.getRemark().trim()))) {
                throw new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                             getEntityDef().getFullName(), 
                                             getPrimaryKey(), "Remark", 
                                             this.getRemark(), "CUX", 
                                             "CUX_APEXP_O_OVER_BUDGET");
            }
        }

    }

    /**
     * 判断国外差旅费用是否超过标准
     * @param trans
     * @param oaHeaderId
     * @param oaLineId
     * @param realDays
     * @param realAmount
     * @return
     */
    private String validateOutseaAccomM2plan(OADBTransaction trans, 
                                             Number oaHeaderId, 
                                             Number oaLineId, Number realDays, 
                                             Number realAmount) {
        String retValue = null;
        OADBTransaction tx = trans;
        CallableStatement cs = 
            tx.createCallableStatement("BEGIN\n" + "  :1 := cux_ap_exp_pkg.validate_outsea_accom_m2plan(p_oa_abroad_travel_header_id   => :2,\n" + 
                                       "                                                         p_oa_abroad_travel_fee_line_id => :3,\n" + 
                                       "                                                         p_real_days                    => :4,\n" + 
                                       "                                                         p_real_per_amount              => :5);\n" + 
                                       "END;\n", 1);
        try {
            cs.registerOutParameter(1, Types.VARCHAR);
            cs.setInt(2, oaHeaderId.intValue());
            cs.setInt(3, oaLineId.intValue());
            cs.setInt(4, realDays.intValue());
            cs.setDouble(5, realAmount.doubleValue());
            cs.execute();
            retValue = cs.getString(1);
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (cs != null) {
            try {
                cs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return retValue;
    }


}
