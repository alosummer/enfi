package cux.oracle.apps.ap.oie.entry.header.server;

import com.sun.java.util.collections.ArrayList;

import com.sun.java.util.collections.List;

import java.sql.CallableStatement;
import java.sql.Types;

import java.text.Format;

import java.text.ParseException;
import java.text.SimpleDateFormat;

import oracle.apps.fnd.framework.OAAttrValException;
import oracle.apps.fnd.framework.OAException;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAEntityDefImpl;
import oracle.apps.fnd.framework.server.OAEntityImpl;

import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxApExpTrafficReimbEOImpl extends OAEntityImpl {
    public static final int TRAFFICREIMBLINEID = 0;
    public static final int RELATIONSHIPID = 1;
    public static final int EMPID = 2;
    public static final int FEETYPE = 3;
    public static final int STARTDATE = 4;
    public static final int ENDDATE = 5;
    public static final int STARTSITE = 6;
    public static final int ENDSITE = 7;
    public static final int TRAFFICTYPE = 8;
    public static final int TRAFFICNUMBER = 9;
    public static final int TRAFFICFEE = 10;
    public static final int BUYTICKETFEE = 11;
    public static final int LEVELSUBSIDY = 12;
    public static final int OVERTIMESUBSIDY = 13;
    public static final int PUBLICTRAFFICFEEINJING = 14;
    public static final int TAXIFEEINJING = 15;
    public static final int TOTALTRAFFICFEEOUTJING = 16;
    public static final int REMARK = 17;
    public static final int CREATIONDATE = 18;
    public static final int CREATEDBY = 19;
    public static final int LASTUPDATEDATE = 20;
    public static final int LASTUPDATEDBY = 21;
    public static final int LASTUPDATELOGIN = 22;
    public static final int ATTRIBUTECATEGORY = 23;
    public static final int ATTRIBUTE1 = 24;
    public static final int ATTRIBUTE2 = 25;
    public static final int ATTRIBUTE3 = 26;
    public static final int ATTRIBUTE4 = 27;
    public static final int ATTRIBUTE5 = 28;
    public static final int ATTRIBUTE6 = 29;
    public static final int ATTRIBUTE7 = 30;
    public static final int ATTRIBUTE8 = 31;
    public static final int ATTRIBUTE9 = 32;
    public static final int ATTRIBUTE10 = 33;
    public static final int ATTRIBUTE11 = 34;
    public static final int ATTRIBUTE12 = 35;
    public static final int ATTRIBUTE13 = 36;
    public static final int ATTRIBUTE14 = 37;
    public static final int ATTRIBUTE15 = 38;
    public static final int LINENUMBER = 39;


    private static OAEntityDefImpl mDefinitionObject;

    /**This is the default constructor (do not remove)
     */
    public CuxApExpTrafficReimbEOImpl() {
    }


    /**Retrieves the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        if (mDefinitionObject == null) {
            mDefinitionObject = 
                    (OAEntityDefImpl)EntityDefImpl.findDefObject("cux.oracle.apps.ap.oie.entry.header.server.CuxApExpTrafficReimbEO");
        }
        return mDefinitionObject;
    }

    /**Gets the attribute value for TrafficReimbLineId, using the alias name TrafficReimbLineId
     */
    public Number getTrafficReimbLineId() {
        return (Number)getAttributeInternal(TRAFFICREIMBLINEID);
    }

    /**Sets <code>value</code> as the attribute value for TrafficReimbLineId
     */
    public void setTrafficReimbLineId(Number value) {
        setAttributeInternal(TRAFFICREIMBLINEID, value);
    }

    /**Gets the attribute value for RelationshipId, using the alias name RelationshipId
     */
    public Number getRelationshipId() {
        return (Number)getAttributeInternal(RELATIONSHIPID);
    }

    /**Sets <code>value</code> as the attribute value for RelationshipId
     */
    public void setRelationshipId(Number value) {
        setAttributeInternal(RELATIONSHIPID, value);
    }

    /**Gets the attribute value for EmpId, using the alias name EmpId
     */
    public Number getEmpId() {
        return (Number)getAttributeInternal(EMPID);
    }

    /**Sets <code>value</code> as the attribute value for EmpId
     */
    public void setEmpId(Number value) {
        setAttributeInternal(EMPID, value);
    }

    /**Gets the attribute value for FeeType, using the alias name FeeType
     */
    public String getFeeType() {
        return (String)getAttributeInternal(FEETYPE);
    }

    /**Sets <code>value</code> as the attribute value for FeeType
     */
    public void setFeeType(String value) {
        setAttributeInternal(FEETYPE, value);
    }

    /**Gets the attribute value for StartDate, using the alias name StartDate
     */
    public Date getStartDate() {
        return (Date)getAttributeInternal(STARTDATE);
    }

    /**Sets <code>value</code> as the attribute value for StartDate
     */
    public void setStartDate(Date value) {
        if (value != null && this.getEndDate() != null) {
            if (value.compareTo(this.getEndDate()) > 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), "StartDate", value, 
                                           "CUX", 
                                           "CUX_APEXP_TTS_SUB_START_DATE");
            }
        }
        setAttributeInternal(STARTDATE, value);
    }

    /**Gets the attribute value for EndDate, using the alias name EndDate
     */
    public Date getEndDate() {
        return (Date)getAttributeInternal(ENDDATE);
    }

    /**Sets <code>value</code> as the attribute value for EndDate
     */
    public void setEndDate(Date value) {
        if (this.getStartDate() != null && value != null) {
            if (this.getStartDate().compareTo(value) > 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), "EndDate", value, 
                                           "CUX", 
                                           "CUX_APEXP_TTS_SUB_END_DATE");
            }
        }
        setAttributeInternal(ENDDATE, value);
    }

    /**Gets the attribute value for StartSite, using the alias name StartSite
     */
    public String getStartSite() {
        return (String)getAttributeInternal(STARTSITE);
    }

    /**Sets <code>value</code> as the attribute value for StartSite
     */
    public void setStartSite(String value) {
        setAttributeInternal(STARTSITE, value);
    }

    /**Gets the attribute value for EndSite, using the alias name EndSite
     */
    public String getEndSite() {
        return (String)getAttributeInternal(ENDSITE);
    }

    /**Sets <code>value</code> as the attribute value for EndSite
     */
    public void setEndSite(String value) {
        setAttributeInternal(ENDSITE, value);
    }

    /**Gets the attribute value for TrafficType, using the alias name TrafficType
     */
    public String getTrafficType() {
        return (String)getAttributeInternal(TRAFFICTYPE);
    }

    /**Sets <code>value</code> as the attribute value for TrafficType
     */
    public void setTrafficType(String value) {
        setAttributeInternal(TRAFFICTYPE, value);
    }

    /**Gets the attribute value for TrafficNumber, using the alias name TrafficNumber
     */
    public String getTrafficNumber() {
        return (String)getAttributeInternal(TRAFFICNUMBER);
    }

    /**Sets <code>value</code> as the attribute value for TrafficNumber
     */
    public void setTrafficNumber(String value) {
        setAttributeInternal(TRAFFICNUMBER, value);
    }

    /**Gets the attribute value for TrafficFee, using the alias name TrafficFee
     */
    public Number getTrafficFee() {
        return (Number)getAttributeInternal(TRAFFICFEE);
    }

    /**Sets <code>value</code> as the attribute value for TrafficFee
     */
    public void setTrafficFee(Number value) {
        if (value != null) {
            if (value.compareTo(0) < 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), "TrafficFee", 
                                           value, "CUX", 
                                           "CUX_APEXP_TTS_SUB_EXPENSE");
            }
        }
        setAttributeInternal(TRAFFICFEE, value);
    }

    /**Gets the attribute value for BuyTicketFee, using the alias name BuyTicketFee
     */
    public Number getBuyTicketFee() {

        return (Number)getAttributeInternal(BUYTICKETFEE);
    }

    /**Sets <code>value</code> as the attribute value for BuyTicketFee
     */
    public void setBuyTicketFee(Number value) {
        if (value != null) {
            if (value.compareTo(0) < 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), "BuyTicketFee", 
                                           value, "CUX", 
                                           "CUX_APEXP_TTS_SUB_SRFEE");
            }
        }
        setAttributeInternal(BUYTICKETFEE, value);
    }

    /**Gets the attribute value for LevelSubsidy, using the alias name LevelSubsidy
     */
    public Number getLevelSubsidy() {
        return (Number)getAttributeInternal(LEVELSUBSIDY);
    }

    /**Sets <code>value</code> as the attribute value for LevelSubsidy
     */
    public void setLevelSubsidy(Number value) {
        setAttributeInternal(LEVELSUBSIDY, value);
    }

    /**Gets the attribute value for OvertimeSubsidy, using the alias name OvertimeSubsidy
     */
    public Number getOvertimeSubsidy() {
        return (Number)getAttributeInternal(OVERTIMESUBSIDY);
    }

    /**Sets <code>value</code> as the attribute value for OvertimeSubsidy
     */
    public void setOvertimeSubsidy(Number value) {
        setAttributeInternal(OVERTIMESUBSIDY, value);
    }

    /**Gets the attribute value for PublicTrafficFeeInJing, using the alias name PublicTrafficFeeInJing
     */
    public Number getPublicTrafficFeeInJing() {
        return (Number)getAttributeInternal(PUBLICTRAFFICFEEINJING);
    }

    /**Sets <code>value</code> as the attribute value for PublicTrafficFeeInJing
     */
    public void setPublicTrafficFeeInJing(Number value) {
        if (value != null) {
            if (value.compareTo(0) < 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), 
                                           "PublicTrafficFeeInJing", value, 
                                           "CUX", "CUX_APEXP_TTS_SUB_BUSFEE");
            }
        }
        setAttributeInternal(PUBLICTRAFFICFEEINJING, value);
    }

    /**Gets the attribute value for TaxiFeeInJing, using the alias name TaxiFeeInJing
     */
    public Number getTaxiFeeInJing() {
        return (Number)getAttributeInternal(TAXIFEEINJING);
    }

    /**Sets <code>value</code> as the attribute value for TaxiFeeInJing
     */
    public void setTaxiFeeInJing(Number value) {
        if (value != null) {
            if (value.compareTo(0) < 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), "TaxiFeeInJing", 
                                           value, "CUX", 
                                           "CUX_APEXP_TTS_SUB_TAXIFEE");
            }
        }
        setAttributeInternal(TAXIFEEINJING, value);
    }

    /**Gets the attribute value for TotalTrafficFeeOutJing, using the alias name TotalTrafficFeeOutJing
     */
    public Number getTotalTrafficFeeOutJing() {
        return (Number)getAttributeInternal(TOTALTRAFFICFEEOUTJING);
    }

    /**Sets <code>value</code> as the attribute value for TotalTrafficFeeOutJing
     */
    public void setTotalTrafficFeeOutJing(Number value) {
        if (value != null) {
            if (value.compareTo(0) < 0) {
                throw // EO name
                    // EO PK
                    // Attribute Name
                    // Attribute value
                    // Message product short name
                    new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                           getEntityDef().getFullName(), 
                                           getPrimaryKey(), 
                                           "TotalTrafficFeeOutJing", value, 
                                           "CUX", "CUX_APEXP_TTS_SUB_TOCFEE");
            }
        }
        setAttributeInternal(TOTALTRAFFICFEEOUTJING, value);
    }

    /**Gets the attribute value for Remark, using the alias name Remark
     */
    public String getRemark() {
        return (String)getAttributeInternal(REMARK);
    }

    /**Sets <code>value</code> as the attribute value for Remark
     */
    public void setRemark(String value) {
        setAttributeInternal(REMARK, value);
    }

    /**Gets the attribute value for CreationDate, using the alias name CreationDate
     */
    public Date getCreationDate() {
        return (Date)getAttributeInternal(CREATIONDATE);
    }

    /**Sets <code>value</code> as the attribute value for CreationDate
     */
    public void setCreationDate(Date value) {
        setAttributeInternal(CREATIONDATE, value);
    }

    /**Gets the attribute value for CreatedBy, using the alias name CreatedBy
     */
    public Number getCreatedBy() {
        return (Number)getAttributeInternal(CREATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for CreatedBy
     */
    public void setCreatedBy(Number value) {
        setAttributeInternal(CREATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateDate, using the alias name LastUpdateDate
     */
    public Date getLastUpdateDate() {
        return (Date)getAttributeInternal(LASTUPDATEDATE);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateDate
     */
    public void setLastUpdateDate(Date value) {
        setAttributeInternal(LASTUPDATEDATE, value);
    }

    /**Gets the attribute value for LastUpdatedBy, using the alias name LastUpdatedBy
     */
    public Number getLastUpdatedBy() {
        return (Number)getAttributeInternal(LASTUPDATEDBY);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdatedBy
     */
    public void setLastUpdatedBy(Number value) {
        setAttributeInternal(LASTUPDATEDBY, value);
    }

    /**Gets the attribute value for LastUpdateLogin, using the alias name LastUpdateLogin
     */
    public Number getLastUpdateLogin() {
        return (Number)getAttributeInternal(LASTUPDATELOGIN);
    }

    /**Sets <code>value</code> as the attribute value for LastUpdateLogin
     */
    public void setLastUpdateLogin(Number value) {
        setAttributeInternal(LASTUPDATELOGIN, value);
    }

    /**Gets the attribute value for AttributeCategory, using the alias name AttributeCategory
     */
    public String getAttributeCategory() {
        return (String)getAttributeInternal(ATTRIBUTECATEGORY);
    }

    /**Sets <code>value</code> as the attribute value for AttributeCategory
     */
    public void setAttributeCategory(String value) {
        setAttributeInternal(ATTRIBUTECATEGORY, value);
    }

    /**Gets the attribute value for Attribute1, using the alias name Attribute1
     */
    public String getAttribute1() {
        return (String)getAttributeInternal(ATTRIBUTE1);
    }

    /**Sets <code>value</code> as the attribute value for Attribute1
     */
    public void setAttribute1(String value) {
        setAttributeInternal(ATTRIBUTE1, value);
    }

    /**Gets the attribute value for Attribute2, using the alias name Attribute2
     */
    public String getAttribute2() {
        return (String)getAttributeInternal(ATTRIBUTE2);
    }

    /**Sets <code>value</code> as the attribute value for Attribute2
     */
    public void setAttribute2(String value) {
        setAttributeInternal(ATTRIBUTE2, value);
    }

    /**Gets the attribute value for Attribute3, using the alias name Attribute3
     */
    public String getAttribute3() {
        return (String)getAttributeInternal(ATTRIBUTE3);
    }

    /**Sets <code>value</code> as the attribute value for Attribute3
     */
    public void setAttribute3(String value) {
        setAttributeInternal(ATTRIBUTE3, value);
    }

    /**Gets the attribute value for Attribute4, using the alias name Attribute4
     */
    public String getAttribute4() {
        return (String)getAttributeInternal(ATTRIBUTE4);
    }

    /**Sets <code>value</code> as the attribute value for Attribute4
     */
    public void setAttribute4(String value) {
        setAttributeInternal(ATTRIBUTE4, value);
    }

    /**Gets the attribute value for Attribute5, using the alias name Attribute5
     */
    public String getAttribute5() {
        return (String)getAttributeInternal(ATTRIBUTE5);
    }

    /**Sets <code>value</code> as the attribute value for Attribute5
     */
    public void setAttribute5(String value) {
        setAttributeInternal(ATTRIBUTE5, value);
    }

    /**Gets the attribute value for Attribute6, using the alias name Attribute6
     */
    public String getAttribute6() {
        return (String)getAttributeInternal(ATTRIBUTE6);
    }

    /**Sets <code>value</code> as the attribute value for Attribute6
     */
    public void setAttribute6(String value) {
        setAttributeInternal(ATTRIBUTE6, value);
    }

    /**Gets the attribute value for Attribute7, using the alias name Attribute7
     */
    public String getAttribute7() {
        return (String)getAttributeInternal(ATTRIBUTE7);
    }

    /**Sets <code>value</code> as the attribute value for Attribute7
     */
    public void setAttribute7(String value) {
        setAttributeInternal(ATTRIBUTE7, value);
    }

    /**Gets the attribute value for Attribute8, using the alias name Attribute8
     */
    public String getAttribute8() {
        return (String)getAttributeInternal(ATTRIBUTE8);
    }

    /**Sets <code>value</code> as the attribute value for Attribute8
     */
    public void setAttribute8(String value) {
        setAttributeInternal(ATTRIBUTE8, value);
    }

    /**Gets the attribute value for Attribute9, using the alias name Attribute9
     */
    public String getAttribute9() {
        return (String)getAttributeInternal(ATTRIBUTE9);
    }

    /**Sets <code>value</code> as the attribute value for Attribute9
     */
    public void setAttribute9(String value) {
        setAttributeInternal(ATTRIBUTE9, value);
    }

    /**Gets the attribute value for Attribute10, using the alias name Attribute10
     */
    public String getAttribute10() {
        return (String)getAttributeInternal(ATTRIBUTE10);
    }

    /**Sets <code>value</code> as the attribute value for Attribute10
     */
    public void setAttribute10(String value) {
        setAttributeInternal(ATTRIBUTE10, value);
    }

    /**Gets the attribute value for Attribute11, using the alias name Attribute11
     */
    public String getAttribute11() {
        return (String)getAttributeInternal(ATTRIBUTE11);
    }

    /**Sets <code>value</code> as the attribute value for Attribute11
     */
    public void setAttribute11(String value) {
        setAttributeInternal(ATTRIBUTE11, value);
    }

    /**Gets the attribute value for Attribute12, using the alias name Attribute12
     */
    public String getAttribute12() {
        return (String)getAttributeInternal(ATTRIBUTE12);
    }

    /**Sets <code>value</code> as the attribute value for Attribute12
     */
    public void setAttribute12(String value) {
        setAttributeInternal(ATTRIBUTE12, value);
    }

    /**Gets the attribute value for Attribute13, using the alias name Attribute13
     */
    public String getAttribute13() {
        return (String)getAttributeInternal(ATTRIBUTE13);
    }

    /**Sets <code>value</code> as the attribute value for Attribute13
     */
    public void setAttribute13(String value) {
        setAttributeInternal(ATTRIBUTE13, value);
    }

    /**Gets the attribute value for Attribute14, using the alias name Attribute14
     */
    public String getAttribute14() {
        return (String)getAttributeInternal(ATTRIBUTE14);
    }

    /**Sets <code>value</code> as the attribute value for Attribute14
     */
    public void setAttribute14(String value) {
        setAttributeInternal(ATTRIBUTE14, value);
    }

    /**Gets the attribute value for Attribute15, using the alias name Attribute15
     */
    public String getAttribute15() {
        return (String)getAttributeInternal(ATTRIBUTE15);
    }

    /**Sets <code>value</code> as the attribute value for Attribute15
     */
    public void setAttribute15(String value) {
        setAttributeInternal(ATTRIBUTE15, value);
    }

    /**Gets the attribute value for LineNumber, using the alias name LineNumber
     */
    public Number getLineNumber() {
        return (Number)getAttributeInternal(LINENUMBER);
    }

    /**Sets <code>value</code> as the attribute value for LineNumber
     */
    public void setLineNumber(Number value) {
        setAttributeInternal(LINENUMBER, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case TRAFFICREIMBLINEID:
            return getTrafficReimbLineId();
        case RELATIONSHIPID:
            return getRelationshipId();
        case EMPID:
            return getEmpId();
        case FEETYPE:
            return getFeeType();
        case STARTDATE:
            return getStartDate();
        case ENDDATE:
            return getEndDate();
        case STARTSITE:
            return getStartSite();
        case ENDSITE:
            return getEndSite();
        case TRAFFICTYPE:
            return getTrafficType();
        case TRAFFICNUMBER:
            return getTrafficNumber();
        case TRAFFICFEE:
            return getTrafficFee();
        case BUYTICKETFEE:
            return getBuyTicketFee();
        case LEVELSUBSIDY:
            return getLevelSubsidy();
        case OVERTIMESUBSIDY:
            return getOvertimeSubsidy();
        case PUBLICTRAFFICFEEINJING:
            return getPublicTrafficFeeInJing();
        case TAXIFEEINJING:
            return getTaxiFeeInJing();
        case TOTALTRAFFICFEEOUTJING:
            return getTotalTrafficFeeOutJing();
        case REMARK:
            return getRemark();
        case CREATIONDATE:
            return getCreationDate();
        case CREATEDBY:
            return getCreatedBy();
        case LASTUPDATEDATE:
            return getLastUpdateDate();
        case LASTUPDATEDBY:
            return getLastUpdatedBy();
        case LASTUPDATELOGIN:
            return getLastUpdateLogin();
        case ATTRIBUTECATEGORY:
            return getAttributeCategory();
        case ATTRIBUTE1:
            return getAttribute1();
        case ATTRIBUTE2:
            return getAttribute2();
        case ATTRIBUTE3:
            return getAttribute3();
        case ATTRIBUTE4:
            return getAttribute4();
        case ATTRIBUTE5:
            return getAttribute5();
        case ATTRIBUTE6:
            return getAttribute6();
        case ATTRIBUTE7:
            return getAttribute7();
        case ATTRIBUTE8:
            return getAttribute8();
        case ATTRIBUTE9:
            return getAttribute9();
        case ATTRIBUTE10:
            return getAttribute10();
        case ATTRIBUTE11:
            return getAttribute11();
        case ATTRIBUTE12:
            return getAttribute12();
        case ATTRIBUTE13:
            return getAttribute13();
        case ATTRIBUTE14:
            return getAttribute14();
        case ATTRIBUTE15:
            return getAttribute15();
        case LINENUMBER:
            return getLineNumber();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case TRAFFICREIMBLINEID:
            setTrafficReimbLineId((Number)value);
            return;
        case RELATIONSHIPID:
            setRelationshipId((Number)value);
            return;
        case EMPID:
            setEmpId((Number)value);
            return;
        case FEETYPE:
            setFeeType((String)value);
            return;
        case STARTDATE:
            setStartDate((Date)value);
            return;
        case ENDDATE:
            setEndDate((Date)value);
            return;
        case STARTSITE:
            setStartSite((String)value);
            return;
        case ENDSITE:
            setEndSite((String)value);
            return;
        case TRAFFICTYPE:
            setTrafficType((String)value);
            return;
        case TRAFFICNUMBER:
            setTrafficNumber((String)value);
            return;
        case TRAFFICFEE:
            setTrafficFee((Number)value);
            return;
        case BUYTICKETFEE:
            setBuyTicketFee((Number)value);
            return;
        case LEVELSUBSIDY:
            setLevelSubsidy((Number)value);
            return;
        case OVERTIMESUBSIDY:
            setOvertimeSubsidy((Number)value);
            return;
        case PUBLICTRAFFICFEEINJING:
            setPublicTrafficFeeInJing((Number)value);
            return;
        case TAXIFEEINJING:
            setTaxiFeeInJing((Number)value);
            return;
        case TOTALTRAFFICFEEOUTJING:
            setTotalTrafficFeeOutJing((Number)value);
            return;
        case REMARK:
            setRemark((String)value);
            return;
        case CREATIONDATE:
            setCreationDate((Date)value);
            return;
        case CREATEDBY:
            setCreatedBy((Number)value);
            return;
        case LASTUPDATEDATE:
            setLastUpdateDate((Date)value);
            return;
        case LASTUPDATEDBY:
            setLastUpdatedBy((Number)value);
            return;
        case LASTUPDATELOGIN:
            setLastUpdateLogin((Number)value);
            return;
        case ATTRIBUTECATEGORY:
            setAttributeCategory((String)value);
            return;
        case ATTRIBUTE1:
            setAttribute1((String)value);
            return;
        case ATTRIBUTE2:
            setAttribute2((String)value);
            return;
        case ATTRIBUTE3:
            setAttribute3((String)value);
            return;
        case ATTRIBUTE4:
            setAttribute4((String)value);
            return;
        case ATTRIBUTE5:
            setAttribute5((String)value);
            return;
        case ATTRIBUTE6:
            setAttribute6((String)value);
            return;
        case ATTRIBUTE7:
            setAttribute7((String)value);
            return;
        case ATTRIBUTE8:
            setAttribute8((String)value);
            return;
        case ATTRIBUTE9:
            setAttribute9((String)value);
            return;
        case ATTRIBUTE10:
            setAttribute10((String)value);
            return;
        case ATTRIBUTE11:
            setAttribute11((String)value);
            return;
        case ATTRIBUTE12:
            setAttribute12((String)value);
            return;
        case ATTRIBUTE13:
            setAttribute13((String)value);
            return;
        case ATTRIBUTE14:
            setAttribute14((String)value);
            return;
        case ATTRIBUTE15:
            setAttribute15((String)value);
            return;
        case LINENUMBER:
            setLineNumber((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }


    @Override
    protected void validateEntity() {
        super.validateEntity();
        /***************************1.校验乘坐工具是否超标*********************************/
        String overFlag = 
            this.validateInTrafficSub(this.getOADBTransaction(), this.getEmpId(), 
                                      this.getTrafficType(), 
                                      this.getAttribute1(), 
                                      this.getAttribute2(), 
                                      this.getAttribute3(), 
                                      this.getAttribute4());
        if ("OVER_LEVEL".equals(overFlag) && 
            (this.getRemark() == null || "".equals(this.getRemark().trim()))) {
            throw new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                         getEntityDef().getFullName(), 
                                         getPrimaryKey(), "Remark", 
                                         this.getRemark(), "CUX", 
                                         "CUX_APEXP_TTS_VEHICLE_TYPE");
        } else if ("NORMAL_OVER_LEVEL".equals(overFlag)) {
            List peerExceptions = new ArrayList();
            OAAttrValException e1 = 
                new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                       getEntityDef().getFullName(), 
                                       getPrimaryKey(), "Attribute1", 
                                       this.getAttribute1(), "CUX", 
                                       "CUX_APEXP_TTS_VEHICLE_PLORHS");
            OAAttrValException e2 = 
                new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                       getEntityDef().getFullName(), 
                                       getPrimaryKey(), "Attribute2", 
                                       this.getAttribute2(), "CUX", 
                                       "CUX_APEXP_TTS_VEHICLE_PLORHS");
            OAAttrValException e3 = 
                new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                       getEntityDef().getFullName(), 
                                       getPrimaryKey(), "Attribute3", 
                                       this.getAttribute3(), "CUX", 
                                       "CUX_APEXP_TTS_VEHICLE_PLORHS");
            OAAttrValException e4 = 
                new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                       getEntityDef().getFullName(), 
                                       getPrimaryKey(), "Attribute4", 
                                       this.getAttribute4(), "CUX", 
                                       "CUX_APEXP_TTS_VEHICLE_PLORHS");
            peerExceptions.add(e1);
            peerExceptions.add(e2);
            peerExceptions.add(e3);
            peerExceptions.add(e4);
            OAAttrValException.raiseBundledOAAttrValException(peerExceptions);

        }
        /***************************2.校验在京公交费是否超标*********************************/
        overFlag = 
                this.validateMaxBusAmount(this.getOADBTransaction(), this.getPublicTrafficFeeInJing());
        if ("OVER_LEVEL".equals(overFlag) && 
            (this.getRemark() == null || "".equals(this.getRemark().trim()))) {
            throw new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                         getEntityDef().getFullName(), 
                                         getPrimaryKey(), 
                                         "PublicTrafficFeeInJing", 
                                         this.getPublicTrafficFeeInJing(), 
                                         "CUX", "CUX_APEXP_TTS_VEHICLE_BUS");
        }
        /***************************3.校验在京出租费是否超标*********************************/
        overFlag = 
                this.validateTaxi(this.getStartDate(), this.getEndDate(), this.getTrafficType());
        if ("OVER_LEVEL".equals(overFlag) && 
            (this.getRemark() == null || "".equals(this.getRemark().trim())) && 
            (this.getTaxiFeeInJing() != null || 
             new Number(0).equals(this.getTaxiFeeInJing()))) {
            throw new OAAttrValException(OAException.TYP_ENTITY_OBJECT, 
                                         getEntityDef().getFullName(), 
                                         getPrimaryKey(), "TaxiFeeInJing", 
                                         this.getTaxiFeeInJing(), "CUX", 
                                         "CUX_APEXP_TTS_VEHICLE_TAXI");
        }
    }

    /**
     * 校验乘坐工具是否超标
     * @param trans
     * @param empId
     * @param trafficType
     * @param a1
     * @param a2
     * @param a3
     * @param a4
     * @return
     */
    private String validateInTrafficSub(OADBTransaction trans, Number empId, 
                                        String trafficType, String a1, 
                                        String a2, String a3, String a4) {
        String retValue = null;
        OADBTransaction tx = trans;
        CallableStatement cs = 
            tx.createCallableStatement("BEGIN\n" + "  :1 := cux_ap_exp_pkg.validate_in_traffic_sub(p_emp_id       => :2,\n" + 
                                       "                                               p_traffic_type => :3,\n" + 
                                       "                                               p_attribute1   => :4,\n" + 
                                       "                                               p_attritebu2   => :5,\n" + 
                                       "                                               p_attribute3   => :6,\n" + 
                                       "                                               p_attribute4   => :7);\n" + 
                                       "END;\n", 1);
        try {
            cs.registerOutParameter(1, Types.VARCHAR);
            cs.setInt(2, empId.intValue());
            cs.setString(3, trafficType);
            cs.setString(4, a1);
            cs.setString(5, a2);
            cs.setString(6, a3);
            cs.setString(7, a4);
            cs.execute();
            retValue = cs.getString(1);
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (cs != null) {
            try {
                cs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return retValue;
    }

    /**
     * 校验在京公交费是否超标
     * @param trans
     * @param pAmount
     * @return
     */
    private String validateMaxBusAmount(OADBTransaction trans, 
                                        Number pAmount) {
        String retValue = null;
        OADBTransaction tx = trans;
        CallableStatement cs = 
            tx.createCallableStatement("begin\n" + "  :1 := cux_ap_exp_pkg.validate_max_bus_amount(p_amount => :2);\n" + 
                                       "end;\n", 1);
        if (pAmount == null) {
            pAmount = new Number(0);
        }

        try {
            cs.registerOutParameter(1, Types.VARCHAR);
            cs.setDouble(2, pAmount.doubleValue());
            cs.execute();
            retValue = cs.getString(1);
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (cs != null) {
            try {
                cs.close();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return retValue;
    }

    /**
     * 校验在京打车费是否超标
     * @param startTime
     * @param endTime
     * @param travelType
     * @return
     */
    private String validateTaxi(Date startTime, Date endTime, 
                                String travelType) {
        String retValue = "S";
        Format formatter = new SimpleDateFormat("HHmmss");
        String startTimess = formatter.format(startTime.timeValue());
        int s1 = Integer.parseInt(startTimess);
        String endTimess = formatter.format(endTime.timeValue());
        int s2 = Integer.parseInt(endTimess);

        if (travelType.indexOf("飞机") != -1) {
            if (s1 <= 90000 || s1 >= 210000 || s2 <= 90000 || s2 >= 210000) {
                ;
            } else {
                retValue = "OVER_LEVEL";
            }

        } else if (travelType.indexOf("火车") != -1) {
            if (s1 <= 80000 || s1 >= 210000 || s2 <= 80000 || s2 >= 210000) {
                ;
            } else {
                retValue = "OVER_LEVEL";
            }
        } else {
            retValue = "OVER_LEVEL";
        }
        return retValue;
    }


    public static void main(String[] args) {
        //        Date convertedDate = new Date();
        //         String convertedDateString;
        //
        //         java.text.SimpleDateFormat displayDateFormat = new java.text.SimpleDateFormat ("MM/dd/yyyy");
        //         convertedDateString = displayDateFormat.format(convertedDate.dateValue());
        //
        //        Date d = new Date();
        //        Format formatter = new SimpleDateFormat("HH:mm:ss");
        //        System.out.println(formatter.format(d.dateValue()));

        //        String src = "1990-09-24 16:00:00";
        //        String srcPattern = "yyyy-MM-dd HH:mm:ss";
        //        String outPattern = "HH:mm:ss";
        //        String out = null;
        Date startTime = new Date("2016-12-15 10:51:31");
        System.out.println();
        Format formatter = new SimpleDateFormat("HHmmss");

        String startTimess = formatter.format(startTime.timeValue());
        System.out.println(startTimess);
        //        
        //        try {
        //            out = 
        //new SimpleDateFormat(outPattern).format(new SimpleDateFormat(srcPattern).parse(src));
        //        } catch (ParseException e) {
        //            // TODO
        //        }
        //        System.out.println(out);
        //

    }

    /**Creates a Key object based on given key constituents
     */
    public static Key createPrimaryKey(Number trafficReimbLineId) {
        return new Key(new Object[] { trafficReimbLineId });
    }
}
