package cux.oracle.apps.ap.oie.workflow.apexp.server;

import oracle.apps.fnd.framework.server.OAViewRowImpl;

import oracle.jbo.domain.Number;
import oracle.jbo.server.AttributeDefImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxDeptBudgetVORowImpl extends OAViewRowImpl {
    public static final int BGTBIGNAME = 0;
    public static final int BGTBIGVALUE = 1;
    public static final int BGTBIGUSEDAMT = 2;
    public static final int BGTBIGUSEDPERCENT = 3;
    public static final int BGTBIGAVLAMT = 4;
    public static final int APPLYAMOUNT = 5;
    public static final int BGTBIGMTAMOUNT = 6;
    public static final int BGTBIGMTAMOUNTPERCENT = 7;
    public static final int DEPTBUDGETAMT = 8;
    public static final int DEPTUSEDAMT = 9;
    public static final int DEPTUSEDPERCENT = 10;
    public static final int DEPTAVLAMT = 11;
    public static final int DEPTMTAMOUNT = 12;
    public static final int DEPTMTAMOUNTPERCENT = 13;

    /**This is the default constructor (do not remove)
     */
    public CuxDeptBudgetVORowImpl() {
    }

    /**Gets the attribute value for the calculated attribute BgtBigName
     */
    public String getBgtBigName() {
        return (String)getAttributeInternal(BGTBIGNAME);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BgtBigName
     */
    public void setBgtBigName(String value) {
        setAttributeInternal(BGTBIGNAME, value);
    }

    /**Gets the attribute value for the calculated attribute ApplyAmount
     */
    public Number getApplyAmount() {
        return (Number)getAttributeInternal(APPLYAMOUNT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute ApplyAmount
     */
    public void setApplyAmount(Number value) {
        setAttributeInternal(APPLYAMOUNT, value);
    }

    /**Gets the attribute value for the calculated attribute BgtBigValue
     */
    public Number getBgtBigValue() {
        return (Number)getAttributeInternal(BGTBIGVALUE);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BgtBigValue
     */
    public void setBgtBigValue(Number value) {
        setAttributeInternal(BGTBIGVALUE, value);
    }

    /**Gets the attribute value for the calculated attribute BgtBigUsedAmt
     */
    public Number getBgtBigUsedAmt() {
        return (Number)getAttributeInternal(BGTBIGUSEDAMT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BgtBigUsedAmt
     */
    public void setBgtBigUsedAmt(Number value) {
        setAttributeInternal(BGTBIGUSEDAMT, value);
    }

    /**Gets the attribute value for the calculated attribute DeptBudgetAmt
     */
    public Number getDeptBudgetAmt() {
        return (Number)getAttributeInternal(DEPTBUDGETAMT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeptBudgetAmt
     */
    public void setDeptBudgetAmt(Number value) {
        setAttributeInternal(DEPTBUDGETAMT, value);
    }

    /**Gets the attribute value for the calculated attribute DeptUsedAmt
     */
    public Number getDeptUsedAmt() {
        return (Number)getAttributeInternal(DEPTUSEDAMT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeptUsedAmt
     */
    public void setDeptUsedAmt(Number value) {
        setAttributeInternal(DEPTUSEDAMT, value);
    }

    /**getAttrInvokeAccessor: generated method. Do not modify.
     */
    protected Object getAttrInvokeAccessor(int index, 
                                           AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case BGTBIGNAME:
            return getBgtBigName();
        case BGTBIGVALUE:
            return getBgtBigValue();
        case BGTBIGUSEDAMT:
            return getBgtBigUsedAmt();
        case BGTBIGUSEDPERCENT:
            return getBgtBigUsedPercent();
        case BGTBIGAVLAMT:
            return getBgtBigAvlAmt();
        case APPLYAMOUNT:
            return getApplyAmount();
        case BGTBIGMTAMOUNT:
            return getBgtBigMtAmount();
        case BGTBIGMTAMOUNTPERCENT:
            return getBgtBigMtAmountPercent();
        case DEPTBUDGETAMT:
            return getDeptBudgetAmt();
        case DEPTUSEDAMT:
            return getDeptUsedAmt();
        case DEPTUSEDPERCENT:
            return getDeptUsedPercent();
        case DEPTAVLAMT:
            return getDeptAvlAmt();
        case DEPTMTAMOUNT:
            return getDeptMtAmount();
        case DEPTMTAMOUNTPERCENT:
            return getDeptMtAmountPercent();
        default:
            return super.getAttrInvokeAccessor(index, attrDef);
        }
    }

    /**setAttrInvokeAccessor: generated method. Do not modify.
     */
    protected void setAttrInvokeAccessor(int index, Object value, 
                                         AttributeDefImpl attrDef) throws Exception {
        switch (index) {
        case BGTBIGNAME:
            setBgtBigName((String)value);
            return;
        case BGTBIGVALUE:
            setBgtBigValue((Number)value);
            return;
        case BGTBIGUSEDAMT:
            setBgtBigUsedAmt((Number)value);
            return;
        case BGTBIGUSEDPERCENT:
            setBgtBigUsedPercent((Number)value);
            return;
        case BGTBIGAVLAMT:
            setBgtBigAvlAmt((Number)value);
            return;
        case APPLYAMOUNT:
            setApplyAmount((Number)value);
            return;
        case BGTBIGMTAMOUNT:
            setBgtBigMtAmount((Number)value);
            return;
        case BGTBIGMTAMOUNTPERCENT:
            setBgtBigMtAmountPercent((Number)value);
            return;
        case DEPTBUDGETAMT:
            setDeptBudgetAmt((Number)value);
            return;
        case DEPTUSEDAMT:
            setDeptUsedAmt((Number)value);
            return;
        case DEPTUSEDPERCENT:
            setDeptUsedPercent((Number)value);
            return;
        case DEPTAVLAMT:
            setDeptAvlAmt((Number)value);
            return;
        case DEPTMTAMOUNT:
            setDeptMtAmount((Number)value);
            return;
        case DEPTMTAMOUNTPERCENT:
            setDeptMtAmountPercent((Number)value);
            return;
        default:
            super.setAttrInvokeAccessor(index, value, attrDef);
            return;
        }
    }

    /**Gets the attribute value for the calculated attribute BgtBigUsedPercent
     */
    public Number getBgtBigUsedPercent() {
        return (Number)getAttributeInternal(BGTBIGUSEDPERCENT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BgtBigUsedPercent
     */
    public void setBgtBigUsedPercent(Number value) {
        setAttributeInternal(BGTBIGUSEDPERCENT, value);
    }

    /**Gets the attribute value for the calculated attribute BgtBigAvlAmt
     */
    public Number getBgtBigAvlAmt() {
        return (Number)getAttributeInternal(BGTBIGAVLAMT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BgtBigAvlAmt
     */
    public void setBgtBigAvlAmt(Number value) {
        setAttributeInternal(BGTBIGAVLAMT, value);
    }

    /**Gets the attribute value for the calculated attribute BgtBigMtAmount
     */
    public Number getBgtBigMtAmount() {
        return (Number)getAttributeInternal(BGTBIGMTAMOUNT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BgtBigMtAmount
     */
    public void setBgtBigMtAmount(Number value) {
        setAttributeInternal(BGTBIGMTAMOUNT, value);
    }

    /**Gets the attribute value for the calculated attribute BgtBigMtAmountPercent
     */
    public Number getBgtBigMtAmountPercent() {
        return (Number)getAttributeInternal(BGTBIGMTAMOUNTPERCENT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute BgtBigMtAmountPercent
     */
    public void setBgtBigMtAmountPercent(Number value) {
        setAttributeInternal(BGTBIGMTAMOUNTPERCENT, value);
    }

    /**Gets the attribute value for the calculated attribute DeptUsedPercent
     */
    public Number getDeptUsedPercent() {
        return (Number)getAttributeInternal(DEPTUSEDPERCENT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeptUsedPercent
     */
    public void setDeptUsedPercent(Number value) {
        setAttributeInternal(DEPTUSEDPERCENT, value);
    }

    /**Gets the attribute value for the calculated attribute DeptAvlAmt
     */
    public Number getDeptAvlAmt() {
        return (Number)getAttributeInternal(DEPTAVLAMT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeptAvlAmt
     */
    public void setDeptAvlAmt(Number value) {
        setAttributeInternal(DEPTAVLAMT, value);
    }

    /**Gets the attribute value for the calculated attribute DeptMtAmount
     */
    public Number getDeptMtAmount() {
        return (Number)getAttributeInternal(DEPTMTAMOUNT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeptMtAmount
     */
    public void setDeptMtAmount(Number value) {
        setAttributeInternal(DEPTMTAMOUNT, value);
    }

    /**Gets the attribute value for the calculated attribute DeptMtAmountPercent
     */
    public Number getDeptMtAmountPercent() {
        return (Number)getAttributeInternal(DEPTMTAMOUNTPERCENT);
    }

    /**Sets <code>value</code> as the attribute value for the calculated attribute DeptMtAmountPercent
     */
    public void setDeptMtAmountPercent(Number value) {
        setAttributeInternal(DEPTMTAMOUNTPERCENT, value);
    }
}
