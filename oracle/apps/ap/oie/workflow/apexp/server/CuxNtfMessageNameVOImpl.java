package cux.oracle.apps.ap.oie.workflow.apexp.server;

import cux.oracle.apps.per.bonus.advanceawards.server.AdvanceAwardsAMImpl;

import java.io.Reader;

import java.sql.CallableStatement;
import java.sql.Clob;
import java.sql.Types;

import oracle.apps.fnd.framework.OAApplicationModule;
import oracle.apps.fnd.framework.server.OADBTransaction;
import oracle.apps.fnd.framework.server.OAViewObjectImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class CuxNtfMessageNameVOImpl extends OAViewObjectImpl {
    /**This is the default constructor (do not remove)
     */
    public CuxNtfMessageNameVOImpl() {
    }

    @Override
    public void executeQuery() {
        String strSQL = this.getSQL();
        cancelQuery();
        setQuery(strSQL);
        setMaxFetchSize(-1);
        super.executeQuery();
    }


    private String getSQL() {
        OAApplicationModule amImpl = 
            (OAApplicationModule)this.getApplicationModule();
        CallableStatement cs = null;
        OADBTransaction transaction = amImpl.getOADBTransaction();
        Clob cSQL = null;
        String strSQL = "";
        cs = 
 transaction.createCallableStatement("call cux_ap_exp_pkg.check_ntf_hide_sql(?)", 
                                     1);
        try {

            cs.registerOutParameter(1, Types.CLOB);
            cs.execute();
            cSQL = cs.getClob(1);
            Reader inStream = cSQL.getCharacterStream();
            char[] c = new char[(int)cSQL.length()];
            inStream.read(c);
            strSQL = new String(c);
            inStream.close();
            cs.close();
        } catch (Exception e) {
            System.out.println(e.toString());
        }
        System.out.println(strSQL);
        return strSQL;
    }
}
